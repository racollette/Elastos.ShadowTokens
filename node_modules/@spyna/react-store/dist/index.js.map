{"version":3,"file":"index.js","sources":["../src/storeProxyHandler.js","../src/defaultConfig.js","../src/StoreContext.js","../src/createStore.js","../src/withStore.js"],"sourcesContent":["const warnUser = prop => {\n  console.group('%c @spyna/react-store ', 'background: #fcc; color: #333')\n  console.error(`Sorry, you can't modify the [${prop}] property this way.`)\n  console.groupEnd()\n}\n\nconst storeHandler = {\n  set(obj, prop, value) {\n    warnUser(prop)\n    return true\n  },\n  deleteProperty(target, prop) {\n    warnUser(prop)\n    return true\n  }\n}\nexport { storeHandler }\n","export default {\n  listener: () => {},\n  proxyStore: true\n}\n","import React from 'react'\nexport default React.createContext()\n","import React from 'react'\nimport { storeHandler } from './storeProxyHandler'\nimport defaultConfig from './defaultConfig'\nimport StoreContext from './StoreContext'\n\nlet rawStore\n/**\n * @param {ReactElement} WrappedComponent the component to connect with the store\n * @param {Object} initialValue the initial store value or nothing\n * @param {Object} config the custom configuration. If nothing is passed will use the default config\n */\nconst createStore = (\n  WrappedComponent,\n  initialValue,\n  config = defaultConfig\n) => {\n  const userConfig = Object.freeze({ ...defaultConfig, ...config })\n\n  const { listener, proxyStore } = userConfig\n\n  return class extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = { storage: { ...initialValue } }\n    }\n\n    updateState = state => {\n      return new Promise(resolve => {\n        this.setState({ storage: state })\n        resolve(state)\n        listener(state)\n      })\n    }\n\n    componentWillMount() {\n      let store = {\n        get: (key, defaultValue) => {\n          let value = this.state.storage[key]\n          if (value === undefined) {\n            value = defaultValue\n          }\n          return value\n        },\n        set: (key, value) => {\n          const { storage } = this.state\n          storage[key] = value\n          return this.updateState(storage)\n        },\n        setAll: (...arrayOfEntris) => {\n          const { storage } = this.state\n          arrayOfEntris.forEach(entry => {\n            const { key, value } = entry\n            storage[key] = value\n          })\n          return this.updateState(storage)\n        },\n        remove: key => {\n          const { storage } = this.state\n          delete storage[key]\n          return this.updateState(storage)\n        },\n        getState: () => {\n          return Object.assign({}, this.state.storage)\n        }\n      }\n      if (proxyStore) {\n        store = new Proxy(store, storeHandler)\n      }\n      this.setState({ store })\n      rawStore = store\n    }\n\n    render() {\n      return (\n        <StoreContext.Provider value={{ store: this.state.store }}>\n          <WrappedComponent {...this.props} />\n        </StoreContext.Provider>\n      )\n    }\n  }\n}\n\nexport default createStore\n\nexport { rawStore as store }\n","import React from 'react'\nimport StoreContext from './StoreContext'\n\n/**\n *\n * @param {ReactElement} WrappedComponent the component will be connected with the store\n * @param {Array<String>} keys the keys of the data in the store to set as WrappedComponent props.\n */\nconst withStore = (WrappedComponent, keys = []) => {\n  return class extends React.PureComponent {\n    static displayName = `withStore(${WrappedComponent.displayName ||\n      WrappedComponent.name})`\n    static WrappedComponent = WrappedComponent\n\n    render() {\n      return (\n        <StoreContext.Consumer>\n          {context => {\n            const { store } = context\n            const storeData = {}\n            keys.forEach(key => {\n              storeData[key] = store.get(key)\n            })\n            return (\n              <WrappedComponent store={store} {...this.props} {...storeData} />\n            )\n          }}\n        </StoreContext.Consumer>\n      )\n    }\n  }\n}\n\nexport default withStore\n"],"names":["warnUser","group","error","prop","groupEnd","storeHandler","obj","value","target","React","createContext","rawStore","createStore","WrappedComponent","initialValue","config","defaultConfig","userConfig","Object","freeze","listener","proxyStore","props","updateState","Promise","setState","storage","state","store","key","defaultValue","undefined","arrayOfEntris","forEach","entry","assign","Proxy","Component","withStore","keys","context","storeData","get","PureComponent","displayName","name"],"mappings":"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"}