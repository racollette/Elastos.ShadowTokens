/// <reference types="node" />
export declare const createBTCAddress: (isTestnet: boolean, mpkh: string, gHash: string) => string;
export declare const getBitcoinUTXOs: ({ isTestnet }: {
    isTestnet: boolean;
}) => (address: string, confirmations: number) => Promise<readonly import("send-crypto/build/main/lib/utxo").UTXO[]>;
export declare const getBitcoinConfirmations: ({ isTestnet, }: {
    isTestnet: boolean;
}) => (txHash: string) => Promise<number>;
export declare const getBitcoinUTXO: ({ isTestnet }: {
    isTestnet: boolean;
}) => (txHash: string, vOut: number) => Promise<import("send-crypto/build/main/lib/utxo").UTXO>;
export declare const btcAddressToHex: (address: string) => string;
export interface Tactics {
    decoders: Array<(address: string) => Buffer>;
    encoders: Array<(buffer: Buffer) => string>;
}
export declare const anyAddressFrom: (isAnyAddress: (address: string) => boolean, { encoders, decoders }: Tactics) => (address: string) => string;
export declare const btcAddressFrom: (address: string) => string;
