import { SerializableBurnAndReleaseParams, SerializableLockAndMintParams } from "./parameters";
import { RenContract } from "./renVM";
import { UnmarshalledBurnTx, UnmarshalledMintTx } from "./unmarshalled";
import { Tx } from "./utxo";
export declare enum LockAndMintStatus {
    Committed = "mint_committed",
    Deposited = "mint_deposited",
    Confirmed = "mint_confirmed",
    SubmittedToRenVM = "mint_submittedToRenVM",
    ReturnedFromRenVM = "mint_returnedFromRenVM",
    SubmittedToEthereum = "mint_submittedToEthereum",
    ConfirmedOnEthereum = "mint_confirmedOnEthereum"
}
export declare enum BurnAndReleaseStatus {
    Committed = "burn_committed",
    SubmittedToEthereum = "burn_submittedToEthereum",
    ConfirmedOnEthereum = "burn_confirmedOnEthereum",
    SubmittedToRenVM = "burn_submittedToRenVM",
    ReturnedFromRenVM = "burn_returnedFromRenVM",
    NoBurnFound = "burn_noBurnFound"
}
export declare enum TxStatus {
    TxStatusNil = "nil",
    TxStatusConfirming = "confirming",
    TxStatusPending = "pending",
    TxStatusExecuting = "executing",
    TxStatusDone = "done",
    TxStatusReverted = "reverted"
}
export interface SendTokenInterface {
    sendToken: RenContract;
}
interface HistoryEventCommon {
    id: string;
    time: number;
    inTx: Tx | null;
    outTx: Tx | null;
    txHash: string | null;
    renVMStatus: TxStatus | null;
    returned: boolean;
    archived?: boolean;
}
export declare enum EventType {
    LockAndMint = "lockAndMint",
    BurnAndRelease = "burnAndRelease"
}
export interface LockAndMintEvent extends HistoryEventCommon {
    eventType: EventType.LockAndMint;
    status: LockAndMintStatus;
    transferParams: SerializableLockAndMintParams;
    renVMQuery: UnmarshalledMintTx | null;
    gatewayAddress?: string;
}
export interface BurnAndReleaseEvent extends HistoryEventCommon {
    eventType: EventType.BurnAndRelease;
    status: BurnAndReleaseStatus;
    transferParams: SerializableBurnAndReleaseParams;
    renVMQuery: UnmarshalledBurnTx | null;
    ethereumConfirmations?: number;
}
export declare type HistoryEvent = LockAndMintEvent | BurnAndReleaseEvent;
export {};
