"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LockAndMintStatus;
(function (LockAndMintStatus) {
    LockAndMintStatus["Committed"] = "mint_committed";
    LockAndMintStatus["Deposited"] = "mint_deposited";
    LockAndMintStatus["Confirmed"] = "mint_confirmed";
    LockAndMintStatus["SubmittedToRenVM"] = "mint_submittedToRenVM";
    LockAndMintStatus["ReturnedFromRenVM"] = "mint_returnedFromRenVM";
    LockAndMintStatus["SubmittedToEthereum"] = "mint_submittedToEthereum";
    LockAndMintStatus["ConfirmedOnEthereum"] = "mint_confirmedOnEthereum";
})(LockAndMintStatus = exports.LockAndMintStatus || (exports.LockAndMintStatus = {}));
var BurnAndReleaseStatus;
(function (BurnAndReleaseStatus) {
    BurnAndReleaseStatus["Committed"] = "burn_committed";
    BurnAndReleaseStatus["SubmittedToEthereum"] = "burn_submittedToEthereum";
    BurnAndReleaseStatus["ConfirmedOnEthereum"] = "burn_confirmedOnEthereum";
    BurnAndReleaseStatus["SubmittedToRenVM"] = "burn_submittedToRenVM";
    BurnAndReleaseStatus["ReturnedFromRenVM"] = "burn_returnedFromRenVM";
    BurnAndReleaseStatus["NoBurnFound"] = "burn_noBurnFound";
})(BurnAndReleaseStatus = exports.BurnAndReleaseStatus || (exports.BurnAndReleaseStatus = {}));
var TxStatus;
(function (TxStatus) {
    // TxStatusNil is used for transactions that have not been seen, or are
    // otherwise unknown.
    TxStatus["TxStatusNil"] = "nil";
    // TxStatusConfirming is used for transactions that are currently waiting
    // for their underlying blockchain transactions to ne confirmed.
    TxStatus["TxStatusConfirming"] = "confirming";
    // TxStatusPending is used for transactions that are waiting for consensus
    // to be reached on when the transaction should be executed.
    TxStatus["TxStatusPending"] = "pending";
    // TxStatusExecuting is used for transactions that are currently being
    // executed.
    TxStatus["TxStatusExecuting"] = "executing";
    // TxStatusDone is used for transactions that have been successfully
    // executed.
    TxStatus["TxStatusDone"] = "done";
    // TxStatusReverted is used for transactions that were reverted during
    // execution.
    TxStatus["TxStatusReverted"] = "reverted";
})(TxStatus = exports.TxStatus || (exports.TxStatus = {}));
var EventType;
(function (EventType) {
    EventType["LockAndMint"] = "lockAndMint";
    EventType["BurnAndRelease"] = "burnAndRelease";
})(EventType = exports.EventType || (exports.EventType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFLQSxJQUFZLGlCQVFYO0FBUkQsV0FBWSxpQkFBaUI7SUFDekIsaURBQTRCLENBQUE7SUFDNUIsaURBQTRCLENBQUE7SUFDNUIsaURBQTRCLENBQUE7SUFDNUIsK0RBQTBDLENBQUE7SUFDMUMsaUVBQTRDLENBQUE7SUFDNUMscUVBQWdELENBQUE7SUFDaEQscUVBQWdELENBQUE7QUFDcEQsQ0FBQyxFQVJXLGlCQUFpQixHQUFqQix5QkFBaUIsS0FBakIseUJBQWlCLFFBUTVCO0FBRUQsSUFBWSxvQkFPWDtBQVBELFdBQVksb0JBQW9CO0lBQzVCLG9EQUE0QixDQUFBO0lBQzVCLHdFQUFnRCxDQUFBO0lBQ2hELHdFQUFnRCxDQUFBO0lBQ2hELGtFQUEwQyxDQUFBO0lBQzFDLG9FQUE0QyxDQUFBO0lBQzVDLHdEQUFnQyxDQUFBO0FBQ3BDLENBQUMsRUFQVyxvQkFBb0IsR0FBcEIsNEJBQW9CLEtBQXBCLDRCQUFvQixRQU8vQjtBQUVELElBQVksUUFtQlg7QUFuQkQsV0FBWSxRQUFRO0lBQ2hCLHVFQUF1RTtJQUN2RSxxQkFBcUI7SUFDckIsK0JBQW1CLENBQUE7SUFDbkIseUVBQXlFO0lBQ3pFLGdFQUFnRTtJQUNoRSw2Q0FBaUMsQ0FBQTtJQUNqQywwRUFBMEU7SUFDMUUsNERBQTREO0lBQzVELHVDQUEyQixDQUFBO0lBQzNCLHNFQUFzRTtJQUN0RSxZQUFZO0lBQ1osMkNBQStCLENBQUE7SUFDL0Isb0VBQW9FO0lBQ3BFLFlBQVk7SUFDWixpQ0FBcUIsQ0FBQTtJQUNyQixzRUFBc0U7SUFDdEUsYUFBYTtJQUNiLHlDQUE2QixDQUFBO0FBQ2pDLENBQUMsRUFuQlcsUUFBUSxHQUFSLGdCQUFRLEtBQVIsZ0JBQVEsUUFtQm5CO0FBaUJELElBQVksU0FHWDtBQUhELFdBQVksU0FBUztJQUNqQix3Q0FBMkIsQ0FBQTtJQUMzQiw4Q0FBaUMsQ0FBQTtBQUNyQyxDQUFDLEVBSFcsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFHcEIifQ==