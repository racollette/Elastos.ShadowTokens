import { AbiItem } from "./abi";
import { RenContract } from "./renVM";
import { TxStatus } from "./types";
export interface UnmarshalledMintTx {
    hash: string;
    txStatus: TxStatus;
    to: RenContract;
    in: {
        p: {
            abi: AbiItem[];
            value: string;
            fn: string;
        };
        token: string;
        to: string;
        n: string;
        utxo: {
            "txHash": string;
            "vOut": number;
            "scriptPubKey": string;
            "amount": string;
        };
    };
    autogen: {
        phash: string;
        amount: string;
        ghash: string;
        nhash: string;
        sighash: string;
    };
    out?: {
        r: string;
        s: string;
        v: string;
    };
}
export interface UnmarshalledBurnTx {
    hash: string;
    txStatus: TxStatus;
    to: RenContract;
    in: {
        ref: string;
        to: string;
        amount: string;
    };
}
export declare type UnmarshalledTx = UnmarshalledMintTx | UnmarshalledBurnTx;
export interface UnmarshalledAssetFees {
    lock: number;
    release: number;
    ethereum: {
        mint: number;
        burn: number;
    };
}
export interface UnmarshalledFees {
    btc: UnmarshalledAssetFees;
    zec: UnmarshalledAssetFees;
    bch: UnmarshalledAssetFees;
}
