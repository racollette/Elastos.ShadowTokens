{
  "_from": "@renproject/interfaces@^1.0.10",
  "_id": "@renproject/interfaces@1.0.10",
  "_inBundle": false,
  "_integrity": "sha512-NCrYgS1OPC8+xC1xhUHx+QjK8vRWq5uQNDdjMueYKZwf0pJ+B5rTdYsHcuHZS3AWC2ZUWU1U0X3UiemZ2lV0aA==",
  "_location": "/@renproject/interfaces",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "@renproject/interfaces@^1.0.10",
    "name": "@renproject/interfaces",
    "escapedName": "@renproject%2finterfaces",
    "scope": "@renproject",
    "rawSpec": "^1.0.10",
    "saveSpec": null,
    "fetchSpec": "^1.0.10"
  },
  "_requiredBy": [
    "/@renproject/chains",
    "/@renproject/gateway",
    "/@renproject/utils"
  ],
  "_resolved": "https://registry.npmjs.org/@renproject/interfaces/-/interfaces-1.0.10.tgz",
  "_shasum": "70f25d934d1d8ac16c8d7cbe3f4581a89ea449a1",
  "_spec": "@renproject/interfaces@^1.0.10",
  "_where": "/home/ryan/dev/defi/bridge/node_modules/@renproject/gateway",
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "dependencies": {
    "@types/node": "^13.13.4",
    "bignumber.js": "^9.0.0",
    "web3-core": "^2.0.0-alpha.1"
  },
  "deprecated": false,
  "description": "GatewayJS allows dApp to easily and securely integrate with RenVM",
  "engines": {
    "node": ">=8.9"
  },
  "gitHead": "45437fe6aa2d066f25934f6905b44ce3dedf9d36",
  "keywords": [],
  "license": "MIT",
  "main": "build/main/index.js",
  "module": "build/module/index.js",
  "name": "@renproject/interfaces",
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "**/*.spec.js"
    ]
  },
  "prettier": {
    "singleQuote": false,
    "tabWidth": 4
  },
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ren-js"
  },
  "scripts": {
    "build": "yarn build:main && yarn build:module",
    "build:main": "tsc -p tsconfig.json",
    "build:module": "tsc -p tsconfig.module.json",
    "cov": "run-s build test:unit cov:html && open-cli coverage/index.html",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "cov:html": "nyc report --reporter=html",
    "cov:send": "nyc report --reporter=lcov && codecov",
    "describe": "npm-scripts-info",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts,*.spect.ts --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts,*.spect.ts --target ES6 --mode file --json build/docs/typedoc.json",
    "fix": "run-s fix:*",
    "fix:tslint": "tslint --fix --project .",
    "link": "yarn link",
    "lint": "tslint --project .",
    "npmignore": "npmignore -g ../../../.gitignore",
    "prepare": "yarn build",
    "prepare-release": "run-s npmignore build doc:html",
    "test": "run-s build lint test:*",
    "test:unit": "nyc ../../../node_modules/ts-mocha/bin/ts-mocha --bail --sort --exit --timeout 180000 --paths -p ./tsconfig.json ./test/*.spec.ts ./test/**/*.spec.ts --ignore ./test/testutils/chai.d.ts",
    "watch": "run-s build:main && run-p \"build:main -- -w\""
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Rebuild the project",
    "fix": "Try to automatically fix any linting problems",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "version": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
  },
  "typings": "build/main/index.d.ts",
  "version": "1.0.10"
}
