{"ast":null,"code":"var _jsxFileName = \"/home/ryan/dev/defi/shadowtoken2/src/containers/IntroContainer.tsx\";\nimport React from \"react\";\nimport { withStore } from \"@spyna/react-store\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { initLocalWeb3 } from \"../utils/walletUtils\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaMask from \"../assets/metamask-fox.svg\";\nimport Elaphant from \"../assets/elaphant.png\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = theme => ({\n  container: {\n    textAlign: \"center\",\n    paddingTop: theme.spacing(2),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\"\n    }\n  },\n  metamask: {\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(3),\n    \"& div\": {\n      background: \"#fff\",\n      borderRadius: \"50%\",\n      border: \"1px solid transparent\",\n      width: 90,\n      height: 90,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\",\n      // opacity: 0.6,\n      transition: \"all 0.2s ease-in-out\",\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      boxShadow: \"0px 3px 3px -2px rgba(0,0,0,0.1),0px 3px 4px 0px rgba(0,0,0,0.07),0px 1px 8px 0px rgba(0,0,0,0.06)\",\n      \"&:hover\": {\n        // opacity: 0.8\n        boxShadow: \"0px 3px 5px -1px rgba(0,0,0,0.1),0px 5px 8px 0px rgba(0,0,0,0.07),0px 1px 14px 0px rgba(0,0,0,0.06)\"\n      },\n      \"&.selected\": {\n        opacity: 1,\n        borderColor: theme.palette.primary.light,\n        boxShadow: theme.shadows[0]\n      }\n    },\n    \"& img\": {\n      width: 35,\n      height: \"auto\" // paddingLeft: theme.spacing(1),\n      // paddingRight: theme.spacing(1),\n\n    }\n  },\n  selectedWallet: {\n    opacity: \"1 !important\"\n  },\n  message: {\n    marginBottom: theme.spacing(4),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 230 // [theme.breakpoints.down('sm')]: {\n    //     display: 'none'\n    // }\n\n  },\n  error: {\n    marginTop: theme.spacing(2),\n    color: \"#FF4545\"\n  },\n  info: {\n    marginTop: theme.spacing(2)\n  },\n  info2: {\n    fontWeight: \"bold\",\n    color: \"#3F3F48\"\n  },\n  spinner: {\n    position: \"relative\",\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(0.5),\n    width: 18\n  },\n  spinnerTop: {\n    color: \"#eee\"\n  },\n  spinnerBottom: {\n    color: \"#a4a4a4\",\n    animationDuration: \"550ms\",\n    position: \"absolute\",\n    left: 0\n  },\n  mobileMessage: {\n    display: \"none\" // [theme.breakpoints.down('sm')]: {\n    //     display: 'block'\n    // }\n\n  }\n});\n\nclass IntroContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  goBack() {\n    const {\n      store\n    } = this.props;\n    store.set(\"showGatewayModal\", false);\n    store.set(\"gatewayModalTx\", null);\n  }\n\n  render() {\n    const {\n      classes,\n      store\n    } = this.props;\n    const walletConnecting = store.get(\"walletConnecting\");\n    const requesting = store.get(\"spaceRequesting\");\n    const error = store.get(\"spaceError\");\n    const box = store.get(\"box\");\n    const walletType = store.get(\"selectedWalletType\");\n    let text = \"Connect \" + (walletType === \"injected\" ? \"MetaMask\" : \"Elaphant\");\n\n    if (requesting) {\n      if (!box) {\n        text = \"Connecting to 3box\";\n      } else {\n        text = \"Loading data\";\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: classes.metamask,\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: walletType === \"injected\" ? \"selected\" : \"\",\n      onClick: () => store.set(\"selectedWalletType\", \"injected\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MetaMask,\n      alt: \"MetaMask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: walletType === \"elaphant\" ? \"selected\" : \"\",\n      onClick: () => store.set(\"selectedWalletType\", \"elaphant\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Elaphant,\n      alt: \"Elaphant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.message,\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, \"To mint or release assets, connect to a wallet provider.\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      direction: \"column\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        initLocalWeb3(walletType);\n      },\n      disabled: walletConnecting || requesting,\n      className: classes.button,\n      size: \"large\",\n      color: \"primary\",\n      disableRipple: true,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, requesting && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.spinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      variant: \"determinate\",\n      value: 100,\n      className: classes.spinnerTop,\n      size: 18,\n      thickness: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      className: classes.spinnerBottom,\n      size: 18,\n      thickness: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    })), text), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: classes.mobileMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, \"RenBridge is currently only supported on desktop\\xA0browsers.\"), !requesting && error && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"Connection failed.\"), requesting && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, \"Connecting to decentralized storage, this may take a minute.\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.info2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, \"Please approve any 3box messages that appear in your wallet.\"))));\n  }\n\n}\n\nexport default withStyles(styles)(withStore(IntroContainer));","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/src/containers/IntroContainer.tsx"],"names":["React","withStore","withStyles","initLocalWeb3","Grid","Button","Typography","Elaphant","CircularProgress","styles","theme","container","textAlign","paddingTop","spacing","breakpoints","down","maxWidth","metamask","paddingBottom","background","borderRadius","border","width","height","display","alignItems","justifyContent","cursor","transition","marginLeft","marginRight","boxShadow","opacity","borderColor","palette","primary","light","shadows","selectedWallet","message","marginBottom","button","error","marginTop","color","info","info2","fontWeight","spinner","position","spinnerTop","spinnerBottom","animationDuration","left","mobileMessage","IntroContainer","Component","state","goBack","store","props","set","render","classes","walletConnecting","get","requesting","box","walletType","text","MetaMask"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStore } from \"@spyna/react-store\";\nimport { Styles, withStyles } from \"@material-ui/styles\";\nimport { initLocalWeb3 } from \"../utils/walletUtils\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaMask from \"../assets/metamask-fox.svg\";\nimport Elaphant from \"../assets/elaphant.png\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport theme from \"../theme/theme\";\n\nconst styles: Styles<typeof theme, any> = (theme) => ({\n  container: {\n    textAlign: \"center\",\n    paddingTop: theme.spacing(2),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\",\n    },\n  },\n  metamask: {\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(3),\n    \"& div\": {\n      background: \"#fff\",\n      borderRadius: \"50%\",\n      border: \"1px solid transparent\",\n      width: 90,\n      height: 90,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\",\n      // opacity: 0.6,\n      transition: \"all 0.2s ease-in-out\",\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      boxShadow:\n        \"0px 3px 3px -2px rgba(0,0,0,0.1),0px 3px 4px 0px rgba(0,0,0,0.07),0px 1px 8px 0px rgba(0,0,0,0.06)\",\n      \"&:hover\": {\n        // opacity: 0.8\n        boxShadow:\n          \"0px 3px 5px -1px rgba(0,0,0,0.1),0px 5px 8px 0px rgba(0,0,0,0.07),0px 1px 14px 0px rgba(0,0,0,0.06)\",\n      },\n      \"&.selected\": {\n        opacity: 1,\n        borderColor: theme.palette.primary.light,\n        boxShadow: theme.shadows[0],\n      },\n    },\n    \"& img\": {\n      width: 35,\n      height: \"auto\",\n      // paddingLeft: theme.spacing(1),\n      // paddingRight: theme.spacing(1),\n    },\n  },\n  selectedWallet: {\n    opacity: \"1 !important\",\n  },\n  message: {\n    marginBottom: theme.spacing(4),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 230,\n    // [theme.breakpoints.down('sm')]: {\n    //     display: 'none'\n    // }\n  },\n  error: {\n    marginTop: theme.spacing(2),\n    color: \"#FF4545\",\n  },\n  info: {\n    marginTop: theme.spacing(2),\n  },\n  info2: {\n    fontWeight: \"bold\",\n    color: \"#3F3F48\",\n  },\n  spinner: {\n    position: \"relative\",\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(0.5),\n    width: 18,\n  },\n  spinnerTop: {\n    color: \"#eee\",\n  },\n  spinnerBottom: {\n    color: \"#a4a4a4\",\n    animationDuration: \"550ms\",\n    position: \"absolute\",\n    left: 0,\n  },\n  mobileMessage: {\n    display: \"none\",\n    // [theme.breakpoints.down('sm')]: {\n    //     display: 'block'\n    // }\n  },\n});\n\nclass IntroContainer extends React.Component<any> {\n  state = {};\n\n  goBack() {\n    const { store } = this.props;\n\n    store.set(\"showGatewayModal\", false);\n    store.set(\"gatewayModalTx\", null);\n  }\n\n  render() {\n    const { classes, store } = this.props;\n\n    const walletConnecting = store.get(\"walletConnecting\");\n    const requesting = store.get(\"spaceRequesting\");\n    const error = store.get(\"spaceError\");\n    const box = store.get(\"box\");\n    const walletType = store.get(\"selectedWalletType\");\n\n    let text =\n      \"Connect \" + (walletType === \"injected\" ? \"MetaMask\" : \"Elaphant\");\n    if (requesting) {\n      if (!box) {\n        text = \"Connecting to 3box\";\n      } else {\n        text = \"Loading data\";\n      }\n    }\n\n    return (\n      <div className={classes.container}>\n        <Grid className={classes.metamask} container justify=\"center\">\n          <div\n            className={walletType === \"injected\" ? \"selected\" : \"\"}\n            onClick={() => store.set(\"selectedWalletType\", \"injected\")}\n          >\n            <img src={MetaMask} alt=\"MetaMask\" />\n          </div>\n          {/* <div\n                        className={walletType === \"mew-connect\" ? \"selected\" : \"\"}\n                        onClick={() => store.set(\"selectedWalletType\", \"mew-connect\")}\n                    >\n                        <img src={Mew} alt=\"Mew\" />\n                    </div> */}\n          <div\n            className={walletType === \"elaphant\" ? \"selected\" : \"\"}\n            onClick={() => store.set(\"selectedWalletType\", \"elaphant\")}\n          >\n            <img src={Elaphant} alt=\"Elaphant\" />\n          </div>\n        </Grid>\n        <Grid container justify=\"center\">\n          <Typography className={classes.message} variant=\"body1\">\n            To mint or release assets, connect to a wallet provider.\n          </Typography>\n        </Grid>\n        <Grid\n          container\n          justify=\"flex-start\"\n          direction=\"column\"\n          alignItems=\"center\"\n        >\n          <Button\n            onClick={() => {\n              initLocalWeb3(walletType);\n            }}\n            disabled={walletConnecting || requesting}\n            className={classes.button}\n            size=\"large\"\n            color=\"primary\"\n            disableRipple\n            variant=\"contained\"\n          >\n            {requesting && (\n              <div className={classes.spinner}>\n                <CircularProgress\n                  variant=\"determinate\"\n                  value={100}\n                  className={classes.spinnerTop}\n                  size={18}\n                  thickness={4}\n                />\n                <CircularProgress\n                  variant=\"indeterminate\"\n                  disableShrink\n                  className={classes.spinnerBottom}\n                  size={18}\n                  thickness={4}\n                />\n              </div>\n            )}\n            {text}\n          </Button>\n          <Typography variant=\"body1\" className={classes.mobileMessage}>\n            RenBridge is currently only supported on desktop&nbsp;browsers.\n          </Typography>\n\n          {!requesting && error && (\n            <Typography variant=\"caption\" className={classes.error}>\n              Connection failed.\n            </Typography>\n          )}\n          {requesting && (\n            <React.Fragment>\n              <Typography variant=\"caption\" className={classes.info}>\n                Connecting to decentralized storage, this may take a minute.\n              </Typography>\n              <Typography variant=\"caption\" className={classes.info2}>\n                Please approve any 3box messages that appear in your wallet.\n              </Typography>\n            </React.Fragment>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(withStore(IntroContainer));\n"]},"metadata":{},"sourceType":"module"}