{"ast":null,"code":"/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.7.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2017\n * @license MIT\n */\n\n/*jslint bitwise: true */\n'use strict';\n\nvar ERROR = 'input is invalid type';\nvar WINDOW = typeof window === 'object';\nvar root = WINDOW ? window : {};\n\nif (root.JS_SHA3_NO_WINDOW) {\n  WINDOW = false;\n}\n\nvar WEB_WORKER = !WINDOW && typeof self === 'object';\nvar NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\nif (NODE_JS) {\n  root = global;\n} else if (WEB_WORKER) {\n  root = self;\n}\n\nvar ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\nvar HEX_CHARS = '0123456789abcdef'.split('');\nvar SHAKE_PADDING = [31, 7936, 2031616, 520093696];\nvar CSHAKE_PADDING = [4, 1024, 262144, 67108864];\nvar KECCAK_PADDING = [1, 256, 65536, 16777216];\nvar PADDING = [6, 1536, 393216, 100663296];\nvar SHIFT = [0, 8, 16, 24];\nvar RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\nvar BITS = [224, 256, 384, 512];\nvar SHAKE_BITS = [128, 256];\nvar OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\nvar CSHAKE_BYTEPAD = {\n  '128': 168,\n  '256': 136\n};\n\nif (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n  Array.isArray = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n  };\n}\n\nif (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n  ArrayBuffer.isView = function (obj) {\n    return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n  };\n}\n\nvar createOutputMethod = function (bits, padding, outputType) {\n  return function (message) {\n    return new Keccak(bits, padding, bits).update(message)[outputType]();\n  };\n};\n\nvar createShakeOutputMethod = function (bits, padding, outputType) {\n  return function (message, outputBits) {\n    return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n  };\n};\n\nvar createCshakeOutputMethod = function (bits, padding, outputType) {\n  return function (message, outputBits, n, s) {\n    return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n  };\n};\n\nvar createKmacOutputMethod = function (bits, padding, outputType) {\n  return function (key, message, outputBits, s) {\n    return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n  };\n};\n\nvar createOutputMethods = function (method, createMethod, bits, padding) {\n  for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n    var type = OUTPUT_TYPES[i];\n    method[type] = createMethod(bits, padding, type);\n  }\n\n  return method;\n};\n\nvar createMethod = function (bits, padding) {\n  var method = createOutputMethod(bits, padding, 'hex');\n\n  method.create = function () {\n    return new Keccak(bits, padding, bits);\n  };\n\n  method.update = function (message) {\n    return method.create().update(message);\n  };\n\n  return createOutputMethods(method, createOutputMethod, bits, padding);\n};\n\nvar createShakeMethod = function (bits, padding) {\n  var method = createShakeOutputMethod(bits, padding, 'hex');\n\n  method.create = function (outputBits) {\n    return new Keccak(bits, padding, outputBits);\n  };\n\n  method.update = function (message, outputBits) {\n    return method.create(outputBits).update(message);\n  };\n\n  return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n};\n\nvar createCshakeMethod = function (bits, padding) {\n  var w = CSHAKE_BYTEPAD[bits];\n  var method = createCshakeOutputMethod(bits, padding, 'hex');\n\n  method.create = function (outputBits, n, s) {\n    if (!n && !s) {\n      return methods['shake' + bits].create(outputBits);\n    } else {\n      return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n    }\n  };\n\n  method.update = function (message, outputBits, n, s) {\n    return method.create(outputBits, n, s).update(message);\n  };\n\n  return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n};\n\nvar createKmacMethod = function (bits, padding) {\n  var w = CSHAKE_BYTEPAD[bits];\n  var method = createKmacOutputMethod(bits, padding, 'hex');\n\n  method.create = function (key, outputBits, s) {\n    return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n  };\n\n  method.update = function (key, message, outputBits, s) {\n    return method.create(key, outputBits, s).update(message);\n  };\n\n  return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n};\n\nvar algorithms = [{\n  name: 'keccak',\n  padding: KECCAK_PADDING,\n  bits: BITS,\n  createMethod: createMethod\n}, {\n  name: 'sha3',\n  padding: PADDING,\n  bits: BITS,\n  createMethod: createMethod\n}, {\n  name: 'shake',\n  padding: SHAKE_PADDING,\n  bits: SHAKE_BITS,\n  createMethod: createShakeMethod\n}, {\n  name: 'cshake',\n  padding: CSHAKE_PADDING,\n  bits: SHAKE_BITS,\n  createMethod: createCshakeMethod\n}, {\n  name: 'kmac',\n  padding: CSHAKE_PADDING,\n  bits: SHAKE_BITS,\n  createMethod: createKmacMethod\n}];\nvar methods = {},\n    methodNames = [];\n\nfor (var i = 0; i < algorithms.length; ++i) {\n  var algorithm = algorithms[i];\n  var bits = algorithm.bits;\n\n  for (var j = 0; j < bits.length; ++j) {\n    var methodName = algorithm.name + '_' + bits[j];\n    methodNames.push(methodName);\n    methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n\n    if (algorithm.name !== 'sha3') {\n      var newMethodName = algorithm.name + bits[j];\n      methodNames.push(newMethodName);\n      methods[newMethodName] = methods[methodName];\n    }\n  }\n}\n\nfunction Keccak(bits, padding, outputBits) {\n  this.blocks = [];\n  this.s = [];\n  this.padding = padding;\n  this.outputBits = outputBits;\n  this.reset = true;\n  this.finalized = false;\n  this.block = 0;\n  this.start = 0;\n  this.blockCount = 1600 - (bits << 1) >> 5;\n  this.byteCount = this.blockCount << 2;\n  this.outputBlocks = outputBits >> 5;\n  this.extraBytes = (outputBits & 31) >> 3;\n\n  for (var i = 0; i < 50; ++i) {\n    this.s[i] = 0;\n  }\n}\n\nKeccak.prototype.update = function (message) {\n  if (this.finalized) {\n    return;\n  }\n\n  var notString,\n      type = typeof message;\n\n  if (type !== 'string') {\n    if (type === 'object') {\n      if (message === null) {\n        throw ERROR;\n      } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n        message = new Uint8Array(message);\n      } else if (!Array.isArray(message)) {\n        if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n          throw ERROR;\n        }\n      }\n    } else {\n      throw ERROR;\n    }\n\n    notString = true;\n  }\n\n  var blocks = this.blocks,\n      byteCount = this.byteCount,\n      length = message.length,\n      blockCount = this.blockCount,\n      index = 0,\n      s = this.s,\n      i,\n      code;\n\n  while (index < length) {\n    if (this.reset) {\n      this.reset = false;\n      blocks[0] = this.block;\n\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n\n    if (notString) {\n      for (i = this.start; index < length && i < byteCount; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = this.start; index < length && i < byteCount; ++index) {\n        code = message.charCodeAt(index);\n\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        }\n      }\n    }\n\n    this.lastByteIndex = i;\n\n    if (i >= byteCount) {\n      this.start = i - byteCount;\n      this.block = blocks[blockCount];\n\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n\n      f(s);\n      this.reset = true;\n    } else {\n      this.start = i;\n    }\n  }\n\n  return this;\n};\n\nKeccak.prototype.encode = function (x, right) {\n  var o = x & 255,\n      n = 1;\n  var bytes = [o];\n  x = x >> 8;\n  o = x & 255;\n\n  while (o > 0) {\n    bytes.unshift(o);\n    x = x >> 8;\n    o = x & 255;\n    ++n;\n  }\n\n  if (right) {\n    bytes.push(n);\n  } else {\n    bytes.unshift(n);\n  }\n\n  this.update(bytes);\n  return bytes.length;\n};\n\nKeccak.prototype.encodeString = function (str) {\n  var notString,\n      type = typeof str;\n\n  if (type !== 'string') {\n    if (type === 'object') {\n      if (str === null) {\n        throw ERROR;\n      } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n        str = new Uint8Array(str);\n      } else if (!Array.isArray(str)) {\n        if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n          throw ERROR;\n        }\n      }\n    } else {\n      throw ERROR;\n    }\n\n    notString = true;\n  }\n\n  var bytes = 0,\n      length = str.length;\n\n  if (notString) {\n    bytes = length;\n  } else {\n    for (var i = 0; i < str.length; ++i) {\n      var code = str.charCodeAt(i);\n\n      if (code < 0x80) {\n        bytes += 1;\n      } else if (code < 0x800) {\n        bytes += 2;\n      } else if (code < 0xd800 || code >= 0xe000) {\n        bytes += 3;\n      } else {\n        code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);\n        bytes += 4;\n      }\n    }\n  }\n\n  bytes += this.encode(bytes * 8);\n  this.update(str);\n  return bytes;\n};\n\nKeccak.prototype.bytepad = function (strs, w) {\n  var bytes = this.encode(w);\n\n  for (var i = 0; i < strs.length; ++i) {\n    bytes += this.encodeString(strs[i]);\n  }\n\n  var paddingBytes = w - bytes % w;\n  var zeros = [];\n  zeros.length = paddingBytes;\n  this.update(zeros);\n  return this;\n};\n\nKeccak.prototype.finalize = function () {\n  if (this.finalized) {\n    return;\n  }\n\n  this.finalized = true;\n  var blocks = this.blocks,\n      i = this.lastByteIndex,\n      blockCount = this.blockCount,\n      s = this.s;\n  blocks[i >> 2] |= this.padding[i & 3];\n\n  if (this.lastByteIndex === this.byteCount) {\n    blocks[0] = blocks[blockCount];\n\n    for (i = 1; i < blockCount + 1; ++i) {\n      blocks[i] = 0;\n    }\n  }\n\n  blocks[blockCount - 1] |= 0x80000000;\n\n  for (i = 0; i < blockCount; ++i) {\n    s[i] ^= blocks[i];\n  }\n\n  f(s);\n};\n\nKeccak.prototype.toString = Keccak.prototype.hex = function () {\n  this.finalize();\n  var blockCount = this.blockCount,\n      s = this.s,\n      outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes,\n      i = 0,\n      j = 0;\n  var hex = '',\n      block;\n\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      block = s[i];\n      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n    }\n\n    if (j % blockCount === 0) {\n      f(s);\n      i = 0;\n    }\n  }\n\n  if (extraBytes) {\n    block = s[i];\n    hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n\n    if (extraBytes > 1) {\n      hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n    }\n\n    if (extraBytes > 2) {\n      hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n    }\n  }\n\n  return hex;\n};\n\nKeccak.prototype.arrayBuffer = function () {\n  this.finalize();\n  var blockCount = this.blockCount,\n      s = this.s,\n      outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes,\n      i = 0,\n      j = 0;\n  var bytes = this.outputBits >> 3;\n  var buffer;\n\n  if (extraBytes) {\n    buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n  } else {\n    buffer = new ArrayBuffer(bytes);\n  }\n\n  var array = new Uint32Array(buffer);\n\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      array[j] = s[i];\n    }\n\n    if (j % blockCount === 0) {\n      f(s);\n    }\n  }\n\n  if (extraBytes) {\n    array[i] = s[i];\n    buffer = buffer.slice(0, bytes);\n  }\n\n  return buffer;\n};\n\nKeccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\nKeccak.prototype.digest = Keccak.prototype.array = function () {\n  this.finalize();\n  var blockCount = this.blockCount,\n      s = this.s,\n      outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes,\n      i = 0,\n      j = 0;\n  var array = [],\n      offset,\n      block;\n\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      array[offset + 1] = block >> 8 & 0xFF;\n      array[offset + 2] = block >> 16 & 0xFF;\n      array[offset + 3] = block >> 24 & 0xFF;\n    }\n\n    if (j % blockCount === 0) {\n      f(s);\n    }\n  }\n\n  if (extraBytes) {\n    offset = j << 2;\n    block = s[i];\n    array[offset] = block & 0xFF;\n\n    if (extraBytes > 1) {\n      array[offset + 1] = block >> 8 & 0xFF;\n    }\n\n    if (extraBytes > 2) {\n      array[offset + 2] = block >> 16 & 0xFF;\n    }\n  }\n\n  return array;\n};\n\nfunction Kmac(bits, padding, outputBits) {\n  Keccak.call(this, bits, padding, outputBits);\n}\n\nKmac.prototype = new Keccak();\n\nKmac.prototype.finalize = function () {\n  this.encode(this.outputBits, true);\n  return Keccak.prototype.finalize.call(this);\n};\n\nvar f = function (s) {\n  var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n  for (n = 0; n < 48; n += 2) {\n    c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n    h = c8 ^ (c2 << 1 | c3 >>> 31);\n    l = c9 ^ (c3 << 1 | c2 >>> 31);\n    s[0] ^= h;\n    s[1] ^= l;\n    s[10] ^= h;\n    s[11] ^= l;\n    s[20] ^= h;\n    s[21] ^= l;\n    s[30] ^= h;\n    s[31] ^= l;\n    s[40] ^= h;\n    s[41] ^= l;\n    h = c0 ^ (c4 << 1 | c5 >>> 31);\n    l = c1 ^ (c5 << 1 | c4 >>> 31);\n    s[2] ^= h;\n    s[3] ^= l;\n    s[12] ^= h;\n    s[13] ^= l;\n    s[22] ^= h;\n    s[23] ^= l;\n    s[32] ^= h;\n    s[33] ^= l;\n    s[42] ^= h;\n    s[43] ^= l;\n    h = c2 ^ (c6 << 1 | c7 >>> 31);\n    l = c3 ^ (c7 << 1 | c6 >>> 31);\n    s[4] ^= h;\n    s[5] ^= l;\n    s[14] ^= h;\n    s[15] ^= l;\n    s[24] ^= h;\n    s[25] ^= l;\n    s[34] ^= h;\n    s[35] ^= l;\n    s[44] ^= h;\n    s[45] ^= l;\n    h = c4 ^ (c8 << 1 | c9 >>> 31);\n    l = c5 ^ (c9 << 1 | c8 >>> 31);\n    s[6] ^= h;\n    s[7] ^= l;\n    s[16] ^= h;\n    s[17] ^= l;\n    s[26] ^= h;\n    s[27] ^= l;\n    s[36] ^= h;\n    s[37] ^= l;\n    s[46] ^= h;\n    s[47] ^= l;\n    h = c6 ^ (c0 << 1 | c1 >>> 31);\n    l = c7 ^ (c1 << 1 | c0 >>> 31);\n    s[8] ^= h;\n    s[9] ^= l;\n    s[18] ^= h;\n    s[19] ^= l;\n    s[28] ^= h;\n    s[29] ^= l;\n    s[38] ^= h;\n    s[39] ^= l;\n    s[48] ^= h;\n    s[49] ^= l;\n    b0 = s[0];\n    b1 = s[1];\n    b32 = s[11] << 4 | s[10] >>> 28;\n    b33 = s[10] << 4 | s[11] >>> 28;\n    b14 = s[20] << 3 | s[21] >>> 29;\n    b15 = s[21] << 3 | s[20] >>> 29;\n    b46 = s[31] << 9 | s[30] >>> 23;\n    b47 = s[30] << 9 | s[31] >>> 23;\n    b28 = s[40] << 18 | s[41] >>> 14;\n    b29 = s[41] << 18 | s[40] >>> 14;\n    b20 = s[2] << 1 | s[3] >>> 31;\n    b21 = s[3] << 1 | s[2] >>> 31;\n    b2 = s[13] << 12 | s[12] >>> 20;\n    b3 = s[12] << 12 | s[13] >>> 20;\n    b34 = s[22] << 10 | s[23] >>> 22;\n    b35 = s[23] << 10 | s[22] >>> 22;\n    b16 = s[33] << 13 | s[32] >>> 19;\n    b17 = s[32] << 13 | s[33] >>> 19;\n    b48 = s[42] << 2 | s[43] >>> 30;\n    b49 = s[43] << 2 | s[42] >>> 30;\n    b40 = s[5] << 30 | s[4] >>> 2;\n    b41 = s[4] << 30 | s[5] >>> 2;\n    b22 = s[14] << 6 | s[15] >>> 26;\n    b23 = s[15] << 6 | s[14] >>> 26;\n    b4 = s[25] << 11 | s[24] >>> 21;\n    b5 = s[24] << 11 | s[25] >>> 21;\n    b36 = s[34] << 15 | s[35] >>> 17;\n    b37 = s[35] << 15 | s[34] >>> 17;\n    b18 = s[45] << 29 | s[44] >>> 3;\n    b19 = s[44] << 29 | s[45] >>> 3;\n    b10 = s[6] << 28 | s[7] >>> 4;\n    b11 = s[7] << 28 | s[6] >>> 4;\n    b42 = s[17] << 23 | s[16] >>> 9;\n    b43 = s[16] << 23 | s[17] >>> 9;\n    b24 = s[26] << 25 | s[27] >>> 7;\n    b25 = s[27] << 25 | s[26] >>> 7;\n    b6 = s[36] << 21 | s[37] >>> 11;\n    b7 = s[37] << 21 | s[36] >>> 11;\n    b38 = s[47] << 24 | s[46] >>> 8;\n    b39 = s[46] << 24 | s[47] >>> 8;\n    b30 = s[8] << 27 | s[9] >>> 5;\n    b31 = s[9] << 27 | s[8] >>> 5;\n    b12 = s[18] << 20 | s[19] >>> 12;\n    b13 = s[19] << 20 | s[18] >>> 12;\n    b44 = s[29] << 7 | s[28] >>> 25;\n    b45 = s[28] << 7 | s[29] >>> 25;\n    b26 = s[38] << 8 | s[39] >>> 24;\n    b27 = s[39] << 8 | s[38] >>> 24;\n    b8 = s[48] << 14 | s[49] >>> 18;\n    b9 = s[49] << 14 | s[48] >>> 18;\n    s[0] = b0 ^ ~b2 & b4;\n    s[1] = b1 ^ ~b3 & b5;\n    s[10] = b10 ^ ~b12 & b14;\n    s[11] = b11 ^ ~b13 & b15;\n    s[20] = b20 ^ ~b22 & b24;\n    s[21] = b21 ^ ~b23 & b25;\n    s[30] = b30 ^ ~b32 & b34;\n    s[31] = b31 ^ ~b33 & b35;\n    s[40] = b40 ^ ~b42 & b44;\n    s[41] = b41 ^ ~b43 & b45;\n    s[2] = b2 ^ ~b4 & b6;\n    s[3] = b3 ^ ~b5 & b7;\n    s[12] = b12 ^ ~b14 & b16;\n    s[13] = b13 ^ ~b15 & b17;\n    s[22] = b22 ^ ~b24 & b26;\n    s[23] = b23 ^ ~b25 & b27;\n    s[32] = b32 ^ ~b34 & b36;\n    s[33] = b33 ^ ~b35 & b37;\n    s[42] = b42 ^ ~b44 & b46;\n    s[43] = b43 ^ ~b45 & b47;\n    s[4] = b4 ^ ~b6 & b8;\n    s[5] = b5 ^ ~b7 & b9;\n    s[14] = b14 ^ ~b16 & b18;\n    s[15] = b15 ^ ~b17 & b19;\n    s[24] = b24 ^ ~b26 & b28;\n    s[25] = b25 ^ ~b27 & b29;\n    s[34] = b34 ^ ~b36 & b38;\n    s[35] = b35 ^ ~b37 & b39;\n    s[44] = b44 ^ ~b46 & b48;\n    s[45] = b45 ^ ~b47 & b49;\n    s[6] = b6 ^ ~b8 & b0;\n    s[7] = b7 ^ ~b9 & b1;\n    s[16] = b16 ^ ~b18 & b10;\n    s[17] = b17 ^ ~b19 & b11;\n    s[26] = b26 ^ ~b28 & b20;\n    s[27] = b27 ^ ~b29 & b21;\n    s[36] = b36 ^ ~b38 & b30;\n    s[37] = b37 ^ ~b39 & b31;\n    s[46] = b46 ^ ~b48 & b40;\n    s[47] = b47 ^ ~b49 & b41;\n    s[8] = b8 ^ ~b0 & b2;\n    s[9] = b9 ^ ~b1 & b3;\n    s[18] = b18 ^ ~b10 & b12;\n    s[19] = b19 ^ ~b11 & b13;\n    s[28] = b28 ^ ~b20 & b22;\n    s[29] = b29 ^ ~b21 & b23;\n    s[38] = b38 ^ ~b30 & b32;\n    s[39] = b39 ^ ~b31 & b33;\n    s[48] = b48 ^ ~b40 & b42;\n    s[49] = b49 ^ ~b41 & b43;\n    s[0] ^= RC[n];\n    s[1] ^= RC[n + 1];\n  }\n};\n\nmodule.exports = methods;","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken/node_modules/wallet-address-validator/src/crypto/sha3.js"],"names":["ERROR","WINDOW","window","root","JS_SHA3_NO_WINDOW","WEB_WORKER","self","NODE_JS","JS_SHA3_NO_NODE_JS","process","versions","node","global","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","split","SHAKE_PADDING","CSHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","Array","isArray","obj","Object","prototype","toString","call","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","constructor","createOutputMethod","bits","padding","outputType","message","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","n","s","methods","createKmacOutputMethod","key","createOutputMethods","method","createMethod","i","length","type","create","createShakeMethod","createCshakeMethod","w","bytepad","createKmacMethod","Kmac","algorithms","name","methodNames","algorithm","j","methodName","push","newMethodName","blocks","reset","finalized","block","start","blockCount","byteCount","outputBlocks","extraBytes","notString","Uint8Array","index","code","charCodeAt","lastByteIndex","f","encode","x","right","o","bytes","unshift","encodeString","str","strs","paddingBytes","zeros","finalize","hex","arrayBuffer","array","Uint32Array","slice","digest","offset","h","l","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","module","exports"],"mappings":"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","sourcesContent":["/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.7.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n'use strict';\n\nvar ERROR = 'input is invalid type';\nvar WINDOW = typeof window === 'object';\nvar root = WINDOW ? window : {};\nif (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n}\nvar WEB_WORKER = !WINDOW && typeof self === 'object';\nvar NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\nif (NODE_JS) {\n    root = global;\n} else if (WEB_WORKER) {\n    root = self;\n}\nvar ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\nvar HEX_CHARS = '0123456789abcdef'.split('');\nvar SHAKE_PADDING = [31, 7936, 2031616, 520093696];\nvar CSHAKE_PADDING = [4, 1024, 262144, 67108864];\nvar KECCAK_PADDING = [1, 256, 65536, 16777216];\nvar PADDING = [6, 1536, 393216, 100663296];\nvar SHIFT = [0, 8, 16, 24];\nvar RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\nvar BITS = [224, 256, 384, 512];\nvar SHAKE_BITS = [128, 256];\nvar OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\nvar CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n};\n\nif (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n}\n\nif (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n        return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n}\n\nvar createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n};\n\nvar createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n};\n\nvar createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n        return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n};\n\nvar createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n        return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n};\n\nvar createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n};\n\nvar createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n        return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n        return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n};\n\nvar createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n};\n\nvar createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n        if (!n && !s) {\n            return methods['shake' + bits].create(outputBits);\n        } else {\n            return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n        }\n    };\n    method.update = function (message, outputBits, n, s) {\n        return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n};\n\nvar createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n        return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n        return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n};\n\nvar algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n];\n\nvar methods = {}, methodNames = [];\n\nfor (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + '_' + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n        if (algorithm.name !== 'sha3') {\n            var newMethodName = algorithm.name + bits[j];\n            methodNames.push(newMethodName);\n            methods[newMethodName] = methods[methodName];\n        }\n    }\n}\n\nfunction Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n    }\n}\n\nKeccak.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n        if (type === 'object') {\n            if (message === null) {\n                throw ERROR;\n            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n                message = new Uint8Array(message);\n            } else if (!Array.isArray(message)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n                    throw ERROR;\n                }\n            }\n        } else {\n            throw ERROR;\n        }\n        notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n        blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n        if (this.reset) {\n            this.reset = false;\n            blocks[0] = this.block;\n            for (i = 1; i < blockCount + 1; ++i) {\n                blocks[i] = 0;\n            }\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < byteCount; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        } else {\n            for (i = this.start; index < length && i < byteCount; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                } else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                } else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                } else {\n                    code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        if (i >= byteCount) {\n            this.start = i - byteCount;\n            this.block = blocks[blockCount];\n            for (i = 0; i < blockCount; ++i) {\n                s[i] ^= blocks[i];\n            }\n            f(s);\n            this.reset = true;\n        } else {\n            this.start = i;\n        }\n    }\n    return this;\n};\n\nKeccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n        bytes.unshift(o);\n        x = x >> 8;\n        o = x & 255;\n        ++n;\n    }\n    if (right) {\n        bytes.push(n);\n    } else {\n        bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n};\n\nKeccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n        if (type === 'object') {\n            if (str === null) {\n                throw ERROR;\n            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n                str = new Uint8Array(str);\n            } else if (!Array.isArray(str)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n                    throw ERROR;\n                }\n            }\n        } else {\n            throw ERROR;\n        }\n        notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n        bytes = length;\n    } else {\n        for (var i = 0; i < str.length; ++i) {\n            var code = str.charCodeAt(i);\n            if (code < 0x80) {\n                bytes += 1;\n            } else if (code < 0x800) {\n                bytes += 2;\n            } else if (code < 0xd800 || code >= 0xe000) {\n                bytes += 3;\n            } else {\n                code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n                bytes += 4;\n            }\n        }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n};\n\nKeccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n        bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n};\n\nKeccak.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n        for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n        }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n    }\n    f(s);\n};\n\nKeccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            block = s[i];\n            hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n                HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n                HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n                HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n        }\n        if (j % blockCount === 0) {\n            f(s);\n            i = 0;\n        }\n    }\n    if (extraBytes) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n        if (extraBytes > 1) {\n            hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n        }\n        if (extraBytes > 2) {\n            hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n        }\n    }\n    return hex;\n};\n\nKeccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n        buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n        buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            array[j] = s[i];\n        }\n        if (j % blockCount === 0) {\n            f(s);\n        }\n    }\n    if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n};\n\nKeccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\nKeccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            offset = j << 2;\n            block = s[i];\n            array[offset] = block & 0xFF;\n            array[offset + 1] = (block >> 8) & 0xFF;\n            array[offset + 2] = (block >> 16) & 0xFF;\n            array[offset + 3] = (block >> 24) & 0xFF;\n        }\n        if (j % blockCount === 0) {\n            f(s);\n        }\n    }\n    if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        if (extraBytes > 1) {\n            array[offset + 1] = (block >> 8) & 0xFF;\n        }\n        if (extraBytes > 2) {\n            array[offset + 2] = (block >> 16) & 0xFF;\n        }\n    }\n    return array;\n};\n\nfunction Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n}\n\nKmac.prototype = new Keccak();\n\nKmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n};\n\nvar f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n        h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n        l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n        l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n        l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n        l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n        l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n\n        b0 = s[0];\n        b1 = s[1];\n        b32 = (s[11] << 4) | (s[10] >>> 28);\n        b33 = (s[10] << 4) | (s[11] >>> 28);\n        b14 = (s[20] << 3) | (s[21] >>> 29);\n        b15 = (s[21] << 3) | (s[20] >>> 29);\n        b46 = (s[31] << 9) | (s[30] >>> 23);\n        b47 = (s[30] << 9) | (s[31] >>> 23);\n        b28 = (s[40] << 18) | (s[41] >>> 14);\n        b29 = (s[41] << 18) | (s[40] >>> 14);\n        b20 = (s[2] << 1) | (s[3] >>> 31);\n        b21 = (s[3] << 1) | (s[2] >>> 31);\n        b2 = (s[13] << 12) | (s[12] >>> 20);\n        b3 = (s[12] << 12) | (s[13] >>> 20);\n        b34 = (s[22] << 10) | (s[23] >>> 22);\n        b35 = (s[23] << 10) | (s[22] >>> 22);\n        b16 = (s[33] << 13) | (s[32] >>> 19);\n        b17 = (s[32] << 13) | (s[33] >>> 19);\n        b48 = (s[42] << 2) | (s[43] >>> 30);\n        b49 = (s[43] << 2) | (s[42] >>> 30);\n        b40 = (s[5] << 30) | (s[4] >>> 2);\n        b41 = (s[4] << 30) | (s[5] >>> 2);\n        b22 = (s[14] << 6) | (s[15] >>> 26);\n        b23 = (s[15] << 6) | (s[14] >>> 26);\n        b4 = (s[25] << 11) | (s[24] >>> 21);\n        b5 = (s[24] << 11) | (s[25] >>> 21);\n        b36 = (s[34] << 15) | (s[35] >>> 17);\n        b37 = (s[35] << 15) | (s[34] >>> 17);\n        b18 = (s[45] << 29) | (s[44] >>> 3);\n        b19 = (s[44] << 29) | (s[45] >>> 3);\n        b10 = (s[6] << 28) | (s[7] >>> 4);\n        b11 = (s[7] << 28) | (s[6] >>> 4);\n        b42 = (s[17] << 23) | (s[16] >>> 9);\n        b43 = (s[16] << 23) | (s[17] >>> 9);\n        b24 = (s[26] << 25) | (s[27] >>> 7);\n        b25 = (s[27] << 25) | (s[26] >>> 7);\n        b6 = (s[36] << 21) | (s[37] >>> 11);\n        b7 = (s[37] << 21) | (s[36] >>> 11);\n        b38 = (s[47] << 24) | (s[46] >>> 8);\n        b39 = (s[46] << 24) | (s[47] >>> 8);\n        b30 = (s[8] << 27) | (s[9] >>> 5);\n        b31 = (s[9] << 27) | (s[8] >>> 5);\n        b12 = (s[18] << 20) | (s[19] >>> 12);\n        b13 = (s[19] << 20) | (s[18] >>> 12);\n        b44 = (s[29] << 7) | (s[28] >>> 25);\n        b45 = (s[28] << 7) | (s[29] >>> 25);\n        b26 = (s[38] << 8) | (s[39] >>> 24);\n        b27 = (s[39] << 8) | (s[38] >>> 24);\n        b8 = (s[48] << 14) | (s[49] >>> 18);\n        b9 = (s[49] << 14) | (s[48] >>> 18);\n\n        s[0] = b0 ^ (~b2 & b4);\n        s[1] = b1 ^ (~b3 & b5);\n        s[10] = b10 ^ (~b12 & b14);\n        s[11] = b11 ^ (~b13 & b15);\n        s[20] = b20 ^ (~b22 & b24);\n        s[21] = b21 ^ (~b23 & b25);\n        s[30] = b30 ^ (~b32 & b34);\n        s[31] = b31 ^ (~b33 & b35);\n        s[40] = b40 ^ (~b42 & b44);\n        s[41] = b41 ^ (~b43 & b45);\n        s[2] = b2 ^ (~b4 & b6);\n        s[3] = b3 ^ (~b5 & b7);\n        s[12] = b12 ^ (~b14 & b16);\n        s[13] = b13 ^ (~b15 & b17);\n        s[22] = b22 ^ (~b24 & b26);\n        s[23] = b23 ^ (~b25 & b27);\n        s[32] = b32 ^ (~b34 & b36);\n        s[33] = b33 ^ (~b35 & b37);\n        s[42] = b42 ^ (~b44 & b46);\n        s[43] = b43 ^ (~b45 & b47);\n        s[4] = b4 ^ (~b6 & b8);\n        s[5] = b5 ^ (~b7 & b9);\n        s[14] = b14 ^ (~b16 & b18);\n        s[15] = b15 ^ (~b17 & b19);\n        s[24] = b24 ^ (~b26 & b28);\n        s[25] = b25 ^ (~b27 & b29);\n        s[34] = b34 ^ (~b36 & b38);\n        s[35] = b35 ^ (~b37 & b39);\n        s[44] = b44 ^ (~b46 & b48);\n        s[45] = b45 ^ (~b47 & b49);\n        s[6] = b6 ^ (~b8 & b0);\n        s[7] = b7 ^ (~b9 & b1);\n        s[16] = b16 ^ (~b18 & b10);\n        s[17] = b17 ^ (~b19 & b11);\n        s[26] = b26 ^ (~b28 & b20);\n        s[27] = b27 ^ (~b29 & b21);\n        s[36] = b36 ^ (~b38 & b30);\n        s[37] = b37 ^ (~b39 & b31);\n        s[46] = b46 ^ (~b48 & b40);\n        s[47] = b47 ^ (~b49 & b41);\n        s[8] = b8 ^ (~b0 & b2);\n        s[9] = b9 ^ (~b1 & b3);\n        s[18] = b18 ^ (~b10 & b12);\n        s[19] = b19 ^ (~b11 & b13);\n        s[28] = b28 ^ (~b20 & b22);\n        s[29] = b29 ^ (~b21 & b23);\n        s[38] = b38 ^ (~b30 & b32);\n        s[39] = b39 ^ (~b31 & b33);\n        s[48] = b48 ^ (~b40 & b42);\n        s[49] = b49 ^ (~b41 & b43);\n\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n    }\n};\n\nmodule.exports = methods;\n"]},"metadata":{},"sourceType":"script"}