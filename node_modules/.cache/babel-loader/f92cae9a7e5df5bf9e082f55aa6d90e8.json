{"ast":null,"code":"var _jsxFileName = \"/home/ryan/dev/defi/shadowtoken2/src/App.tsx\";\nimport React from \"react\";\nimport { createStore, withStore } from \"@spyna/react-store\";\nimport queryString from \"query-string\";\nimport firebase from \"firebase\";\nimport { ThemeProvider, withStyles } from \"@material-ui/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Github from \"./assets/github.svg\";\nimport Reddit from \"./assets/reddit.svg\";\nimport Telegram from \"./assets/telegram.svg\";\nimport Twitter from \"./assets/twitter.svg\";\nimport BridgeContainer from \"./containers/BridgeContainer\";\nimport ConfirmContainer from \"./containers/ConfirmContainer\";\nimport IntroContainer from \"./containers/IntroContainer\";\nimport NavContainer from \"./containers/NavContainer\";\nimport TransferContainer2 from \"./containers/TransferContainer2\";\nimport { storeListener } from \"./services/storeService\";\nimport theme from \"./theme/theme\";\nimport { setNetwork, initLocalWeb3 } from \"./utils/walletUtils\";\nimport { BRIDGE_SYMBOL_MAP } from \"./utils/bridgeUtils\";\nimport { USDT_ADDRESS_TEST } from \"./utils/web3Utils\";\n\nrequire(\"dotenv\").config(); // Instanitate Firebase\n\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FB_KEY,\n  authDomain: window.location.hostname,\n  projectId: process.env.REACT_APP_FB_PROJECT || \"ren-bridge\"\n});\nconst db = firebase.firestore();\nconst fns = firebase.functions();\n\nif (process.env.REACT_APP_FB_EMULATOR === \"true\") {\n  fns.useFunctionsEmulator(\"http://localhost:5001\");\n  db.settings({\n    host: \"localhost:8080\",\n    ssl: false\n  });\n}\n\nconst styles = () => ({\n  container: {\n    minHeight: \"100vh\"\n  },\n  contentContainer: {\n    flex: 1,\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  footerContainer: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    fontSize: 10,\n    \"& a\": {\n      color: \"#333\",\n      marginRight: theme.spacing(2),\n      textDecoration: \"none\",\n      \"&:hover\": {\n        opacity: 0.75\n      }\n    }\n  },\n  footerLogo: {\n    height: 12,\n    width: \"auto\",\n    marginLeft: theme.spacing(0.5)\n  },\n  transfersContainer: {\n    padding: theme.spacing(3)\n  }\n});\n\nconst initialState = {\n  // networking\n  USDTAddress: USDT_ADDRESS_TEST,\n  selectedNetwork: \"testnet\",\n  queryParams: {},\n  // wallet & web3\n  dataWeb3: null,\n  localWeb3: null,\n  localWeb3Address: \"\",\n  localWeb3Network: \"\",\n  box: null,\n  space: null,\n  spaceError: false,\n  spaceRequesting: false,\n  walletConnecting: false,\n  loadingBalances: true,\n  renELABalance: 0,\n  // renBTCBalance: 0,\n  elausd: 0,\n  btcusd: 0,\n  zecusd: 0,\n  bchusd: 0,\n  ethBalance: 0,\n  gjs: null,\n  fees: null,\n  selectedWalletType: \"injected\",\n  // navigation\n  selectedBridge: \"eth\",\n  selectedPair: \"ela\",\n  confirmBridge: false,\n  selectedWallet: false,\n  selectedTab: 1,\n  selectedAsset: \"eth\",\n  confirmTx: null,\n  confirmAction: \"\",\n  // modals\n  showNetworkMenu: false,\n  showDepositModal: false,\n  depositDisclosureChecked: false,\n  showCancelModal: false,\n  cancelModalTx: null,\n  showGatewayModal: false,\n  gatewayModalTx: null,\n  showAboutModal: false,\n  // confirmation error\n  confirmationError: null,\n  // conversions\n  // 'convert.adapterAddress': ADAPTER_TEST,\n  \"convert.adapterWbtcAllowance\": \"\",\n  \"convert.adapterWbtcAllowanceRequesting\": \"\",\n  \"convert.transactions\": [],\n  \"convert.pendingConvertToEthereum\": [],\n  \"convert.selectedFormat\": \"weth\",\n  \"convert.selectedDirection\": 0,\n  \"convert.amount\": \"\",\n  \"convert.destination\": \"\",\n  \"convert.destinationValid\": false,\n  \"convert.destinationInputFocused\": false,\n  \"convert.showDestinationError\": false,\n  \"convert.exchangeRate\": \"\",\n  \"convert.renVMFee\": \"\",\n  \"convert.networkFee\": \"\",\n  \"convert.conversionTotal\": \"\"\n};\n\nclass AppWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const {\n      store\n    } = this.props;\n    const params = queryString.parse(window.location.search);\n    store.set(\"queryParams\", params);\n    setNetwork(params.network === \"testnet\" ? \"testnet\" : \"mainnet\"); // setBridge(\"eth\", \"ela\");\n    // setNetwork((params.network = \"testnet\"));\n\n    initLocalWeb3(\"injected\");\n  }\n\n  render() {\n    // window.ethereum.autoRefreshOnNetworkChange = false;\n    // window.ethereum.on(isVersion8 ? 'chainChanged' : 'networkChanged', network => {\n    //     choiceNetwork()\n    // })\n    const classes = this.props.classes;\n    const store = this.props.store;\n    storeListener(store);\n    const confirmBridge = store.get(\"confirmBridge\");\n    const selectedBridge = store.get(\"selectedBridge\"); // console.log(\"SELECTED BRIDGE\", selectedBridge);\n\n    const selectedPair = store.get(\"selectedPair\"); // console.log(\"SELECTED PAIR\", selectedPair);\n\n    const localWeb3Address = store.get(\"localWeb3Address\");\n    const selectedWallet = store.get(\"selectedWallet\"); // const localWeb3Address = false;\n\n    const confirmAction = store.get(\"confirmAction\");\n    const confirmTx = store.get(\"confirmTx\");\n    console.log(confirmBridge);\n    console.log(localWeb3Address);\n    console.log(confirmAction);\n    console.log(confirmTx);\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      className: classes.contentContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, !confirmBridge && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BridgeContainer, {\n      active: BRIDGE_SYMBOL_MAP[selectedBridge],\n      pair: BRIDGE_SYMBOL_MAP[selectedPair],\n      items: [\"ELA\", \"ETH\", \"TRX\"],\n      onBridgeChange: v => {\n        const bridge = v.toLowerCase();\n        store.set(\"selectedBridge\", bridge);\n\n        if (bridge == selectedPair) {\n          console.log(\"Same asset detected switching pair menu\");\n\n          if (bridge == \"eth\") {\n            store.set(\"selectedPair\", \"ela\");\n          }\n\n          if (bridge == \"ela\") {\n            store.set(\"selectedPair\", \"eth\");\n          }\n\n          if (bridge == \"trx\") {\n            store.set(\"selectedPair\", \"ela\");\n          }\n        }\n      },\n      onPairChange: v => {\n        const pair = v.toLowerCase();\n        store.set(\"selectedPair\", pair);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    })), confirmBridge && !selectedWallet && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IntroContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    })), confirmBridge && selectedWallet && confirmAction && confirmTx ? /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ConfirmContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransferContainer2, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.footerContainer,\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fixed: true,\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.footerLinks,\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://renproject.io/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    }, \"Ren Project Site\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://renproject.io/renvm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    }, \"About RenVM\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://docs.renproject.io/darknodes/faq/renbridge-faq\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 19\n      }\n    }, \"FAQs\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://docs.renproject.io/developers/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 19\n      }\n    }, \"Docs\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://github.com/renproject/ren/wiki/Introduction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }, \"Wiki\")), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.footerLinks,\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://twitter.com/renprotocol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Twitter\",\n      className: classes.footerLogo,\n      src: Twitter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://github.com/renproject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Github\",\n      className: classes.footerLogo,\n      src: Github,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://t.me/renproject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Telegram\",\n      className: classes.footerLogo,\n      src: Telegram,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      href: \"https://www.reddit.com/r/renproject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Reddit\",\n      className: classes.footerLogo,\n      src: Reddit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }))))))));\n  }\n\n}\n\nconst AppWrapperComponent = withStore(AppWrapper);\n\nclass App extends React.Component {\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(AppWrapperComponent, {\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default createStore(withStyles(styles)(App), initialState);","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/src/App.tsx"],"names":["React","createStore","withStore","queryString","firebase","ThemeProvider","withStyles","Container","Grid","Typography","BridgeContainer","ConfirmContainer","IntroContainer","NavContainer","TransferContainer2","storeListener","theme","setNetwork","initLocalWeb3","BRIDGE_SYMBOL_MAP","USDT_ADDRESS_TEST","require","config","initializeApp","apiKey","process","env","REACT_APP_FB_KEY","authDomain","window","location","hostname","projectId","REACT_APP_FB_PROJECT","db","firestore","fns","functions","REACT_APP_FB_EMULATOR","useFunctionsEmulator","settings","host","ssl","styles","container","minHeight","contentContainer","flex","breakpoints","down","paddingLeft","spacing","paddingRight","footerContainer","paddingTop","paddingBottom","fontSize","color","marginRight","textDecoration","opacity","footerLogo","height","width","marginLeft","transfersContainer","padding","initialState","USDTAddress","selectedNetwork","queryParams","dataWeb3","localWeb3","localWeb3Address","localWeb3Network","box","space","spaceError","spaceRequesting","walletConnecting","loadingBalances","renELABalance","elausd","btcusd","zecusd","bchusd","ethBalance","gjs","fees","selectedWalletType","selectedBridge","selectedPair","confirmBridge","selectedWallet","selectedTab","selectedAsset","confirmTx","confirmAction","showNetworkMenu","showDepositModal","depositDisclosureChecked","showCancelModal","cancelModalTx","showGatewayModal","gatewayModalTx","showAboutModal","confirmationError","AppWrapper","Component","constructor","props","state","componentDidMount","store","params","parse","search","set","network","render","classes","get","console","log","v","bridge","toLowerCase","pair","footerLinks","Twitter","Github","Telegram","Reddit","AppWrapperComponent","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,qBAA1C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;;;AAMA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,qBAA1C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,iBAAT,QAAqD,mBAArD;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAEA;;;AACAlB,QAAQ,CAACmB,aAAT,CAAuB;AACrBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADC;AAErBC,EAAAA,UAAU,EAAEC,MAAM,CAACC,QAAP,CAAgBC,QAFP;AAGrBC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAAZ,IAAoC;AAH1B,CAAvB;AAKA,MAAMC,EAAE,GAAG9B,QAAQ,CAAC+B,SAAT,EAAX;AACA,MAAMC,GAAG,GAAGhC,QAAQ,CAACiC,SAAT,EAAZ;;AAEA,IAAIZ,OAAO,CAACC,GAAR,CAAYY,qBAAZ,KAAsC,MAA1C,EAAkD;AAChDF,EAAAA,GAAG,CAACG,oBAAJ,CAAyB,uBAAzB;AACAL,EAAAA,EAAE,CAACM,QAAH,CAAY;AACVC,IAAAA,IAAI,EAAE,gBADI;AAEVC,IAAAA,GAAG,EAAE;AAFK,GAAZ;AAID;;AAED,MAAMC,MAAM,GAAG,OAAO;AACpBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GADS;AAIpBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,IAAI,EAAE,CADU;AAEhB,KAAC/B,KAAK,CAACgC,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,WAAW,EAAElC,KAAK,CAACmC,OAAN,CAAc,CAAd,CADiB;AAE9BC,MAAAA,YAAY,EAAEpC,KAAK,CAACmC,OAAN,CAAc,CAAd;AAFgB;AAFhB,GAJE;AAWpBE,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAEtC,KAAK,CAACmC,OAAN,CAAc,CAAd,CADG;AAEfI,IAAAA,aAAa,EAAEvC,KAAK,CAACmC,OAAN,CAAc,CAAd,CAFA;AAGfK,IAAAA,QAAQ,EAAE,EAHK;AAIf,WAAO;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,WAAW,EAAE1C,KAAK,CAACmC,OAAN,CAAc,CAAd,CAFR;AAGLQ,MAAAA,cAAc,EAAE,MAHX;AAIL,iBAAW;AACTC,QAAAA,OAAO,EAAE;AADA;AAJN;AAJQ,GAXG;AAwBpBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,UAAU,EAAEhD,KAAK,CAACmC,OAAN,CAAc,GAAd;AAHF,GAxBQ;AA6BpBc,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,OAAO,EAAElD,KAAK,CAACmC,OAAN,CAAc,CAAd;AADS;AA7BA,CAAP,CAAf;;AAkCA,MAAMgB,YAAY,GAAG;AACnB;AACAC,EAAAA,WAAW,EAAEhD,iBAFM;AAInBiD,EAAAA,eAAe,EAAE,SAJE;AAKnBC,EAAAA,WAAW,EAAE,EALM;AAOnB;AACAC,EAAAA,QAAQ,EAAE,IARS;AASnBC,EAAAA,SAAS,EAAE,IATQ;AAUnBC,EAAAA,gBAAgB,EAAE,EAVC;AAWnBC,EAAAA,gBAAgB,EAAE,EAXC;AAYnBC,EAAAA,GAAG,EAAE,IAZc;AAanBC,EAAAA,KAAK,EAAE,IAbY;AAcnBC,EAAAA,UAAU,EAAE,KAdO;AAenBC,EAAAA,eAAe,EAAE,KAfE;AAgBnBC,EAAAA,gBAAgB,EAAE,KAhBC;AAiBnBC,EAAAA,eAAe,EAAE,IAjBE;AAkBnBC,EAAAA,aAAa,EAAE,CAlBI;AAmBnB;AACAC,EAAAA,MAAM,EAAE,CApBW;AAqBnBC,EAAAA,MAAM,EAAE,CArBW;AAsBnBC,EAAAA,MAAM,EAAE,CAtBW;AAuBnBC,EAAAA,MAAM,EAAE,CAvBW;AAwBnBC,EAAAA,UAAU,EAAE,CAxBO;AAyBnBC,EAAAA,GAAG,EAAE,IAzBc;AA0BnBC,EAAAA,IAAI,EAAE,IA1Ba;AA2BnBC,EAAAA,kBAAkB,EAAE,UA3BD;AA6BnB;AACAC,EAAAA,cAAc,EAAE,KA9BG;AA+BnBC,EAAAA,YAAY,EAAE,KA/BK;AAgCnBC,EAAAA,aAAa,EAAE,KAhCI;AAiCnBC,EAAAA,cAAc,EAAE,KAjCG;AAkCnBC,EAAAA,WAAW,EAAE,CAlCM;AAmCnBC,EAAAA,aAAa,EAAE,KAnCI;AAoCnBC,EAAAA,SAAS,EAAE,IApCQ;AAqCnBC,EAAAA,aAAa,EAAE,EArCI;AAuCnB;AACAC,EAAAA,eAAe,EAAE,KAxCE;AAyCnBC,EAAAA,gBAAgB,EAAE,KAzCC;AA0CnBC,EAAAA,wBAAwB,EAAE,KA1CP;AA2CnBC,EAAAA,eAAe,EAAE,KA3CE;AA4CnBC,EAAAA,aAAa,EAAE,IA5CI;AA6CnBC,EAAAA,gBAAgB,EAAE,KA7CC;AA8CnBC,EAAAA,cAAc,EAAE,IA9CG;AA+CnBC,EAAAA,cAAc,EAAE,KA/CG;AAiDnB;AACAC,EAAAA,iBAAiB,EAAE,IAlDA;AAoDnB;AACA;AACA,kCAAgC,EAtDb;AAuDnB,4CAA0C,EAvDvB;AAwDnB,0BAAwB,EAxDL;AAyDnB,sCAAoC,EAzDjB;AA0DnB,4BAA0B,MA1DP;AA2DnB,+BAA6B,CA3DV;AA4DnB,oBAAkB,EA5DC;AA6DnB,yBAAuB,EA7DJ;AA8DnB,8BAA4B,KA9DT;AA+DnB,qCAAmC,KA/DhB;AAgEnB,kCAAgC,KAhEb;AAiEnB,0BAAwB,EAjEL;AAkEnB,sBAAoB,EAlED;AAmEnB,wBAAsB,EAnEH;AAoEnB,6BAA2B;AApER,CAArB;;AA4EA,MAAMC,UAAN,SAAyB3G,KAAK,CAAC4G,SAA/B,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKH,KAAvB;AACA,UAAMI,MAAM,GAAG/G,WAAW,CAACgH,KAAZ,CAAkBtF,MAAM,CAACC,QAAP,CAAgBsF,MAAlC,CAAf;AAEAH,IAAAA,KAAK,CAACI,GAAN,CAAU,aAAV,EAAyBH,MAAzB;AAEAjG,IAAAA,UAAU,CAACiG,MAAM,CAACI,OAAP,KAAmB,SAAnB,GAA+B,SAA/B,GAA2C,SAA5C,CAAV,CANwB,CAOxB;AACA;;AACApG,IAAAA,aAAa,CAAC,UAAD,CAAb;AACD;;AAEDqG,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA,UAAMC,OAAO,GAAG,KAAKV,KAAL,CAAWU,OAA3B;AACA,UAAMP,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAzB;AACAlG,IAAAA,aAAa,CAACkG,KAAD,CAAb;AAEA,UAAMrB,aAAa,GAAGqB,KAAK,CAACQ,GAAN,CAAU,eAAV,CAAtB;AACA,UAAM/B,cAAc,GAAGuB,KAAK,CAACQ,GAAN,CAAU,gBAAV,CAAvB,CAVO,CAWP;;AACA,UAAM9B,YAAY,GAAGsB,KAAK,CAACQ,GAAN,CAAU,cAAV,CAArB,CAZO,CAaP;;AAEA,UAAMhD,gBAAgB,GAAGwC,KAAK,CAACQ,GAAN,CAAU,kBAAV,CAAzB;AACA,UAAM5B,cAAc,GAAGoB,KAAK,CAACQ,GAAN,CAAU,gBAAV,CAAvB,CAhBO,CAiBP;;AACA,UAAMxB,aAAa,GAAGgB,KAAK,CAACQ,GAAN,CAAU,eAAV,CAAtB;AACA,UAAMzB,SAAS,GAAGiB,KAAK,CAACQ,GAAN,CAAU,WAAV,CAAlB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY/B,aAAZ;AACA8B,IAAAA,OAAO,CAACC,GAAR,CAAYlD,gBAAZ;AACAiD,IAAAA,OAAO,CAACC,GAAR,CAAY1B,aAAZ;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAY3B,SAAZ;AAEA,wBACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEhF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEwG,OAAO,CAAC5E,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAE4E,OAAO,CAAC1E,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAiC,MAAA,UAAU,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC8C,aAAD,iBACC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,MAAM,EAAEzE,iBAAiB,CAACuE,cAAD,CAD3B;AAEE,MAAA,IAAI,EAAEvE,iBAAiB,CAACwE,YAAD,CAFzB;AAGE,MAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAHT;AAIE,MAAA,cAAc,EAAGiC,CAAD,IAAe;AAC7B,cAAMC,MAAM,GAAGD,CAAC,CAACE,WAAF,EAAf;AACAb,QAAAA,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BQ,MAA5B;;AACA,YAAIA,MAAM,IAAIlC,YAAd,EAA4B;AAC1B+B,UAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;;AACA,cAAIE,MAAM,IAAI,KAAd,EAAqB;AACnBZ,YAAAA,KAAK,CAACI,GAAN,CAAU,cAAV,EAA0B,KAA1B;AACD;;AACD,cAAIQ,MAAM,IAAI,KAAd,EAAqB;AACnBZ,YAAAA,KAAK,CAACI,GAAN,CAAU,cAAV,EAA0B,KAA1B;AACD;;AACD,cAAIQ,MAAM,IAAI,KAAd,EAAqB;AACnBZ,YAAAA,KAAK,CAACI,GAAN,CAAU,cAAV,EAA0B,KAA1B;AACD;AACF;AACF,OAnBH;AAoBE,MAAA,YAAY,EAAGO,CAAD,IAAe;AAC3B,cAAMG,IAAI,GAAGH,CAAC,CAACE,WAAF,EAAb;AACAb,QAAAA,KAAK,CAACI,GAAN,CAAU,cAAV,EAA0BU,IAA1B;AACD,OAvBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,EA+BGnC,aAAa,IAAI,CAACC,cAAlB,iBACC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhCJ,EAqCGD,aAAa,IAAIC,cAAjB,IAAmCI,aAAnC,IAAoDD,SAApD,gBACC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,gBAKC,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA1CJ,CADF,CAFF,eAwGE,oBAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAEwB,OAAO,CAACnE,eAFrB;AAGE,MAAA,UAAU,EAAC,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,QAAQ,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,UAAU,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEmE,OAAO,CAACQ,WAA/B;AAA4C,MAAA,OAAO,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAE,wBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAOO,GAPP,eAQE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAE,6BAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EAcO,GAdP,eAeE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EACF,wDAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,EAuBO,GAvBP,eAwBE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAE,wCAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,EA8BO,GA9BP,eA+BE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAE,qDAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF,CADF,eAwCE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAER,OAAO,CAACQ,WAA/B;AAA4C,MAAA,OAAO,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAE,iCAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,GAAG,EAAC,SADN;AAEE,MAAA,SAAS,EAAER,OAAO,CAAC3D,UAFrB;AAGE,MAAA,GAAG,EAAEoE,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,eAYE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAE,+BAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,GAAG,EAAC,QADN;AAEE,MAAA,SAAS,EAAET,OAAO,CAAC3D,UAFrB;AAGE,MAAA,GAAG,EAAEqE,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAZF,eAuBE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAE,yBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,GAAG,EAAC,UADN;AAEE,MAAA,SAAS,EAAEV,OAAO,CAAC3D,UAFrB;AAGE,MAAA,GAAG,EAAEsE,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAvBF,eAkCE;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,IAAI,EAAE,qCAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,GAAG,EAAC,QADN;AAEE,MAAA,SAAS,EAAEX,OAAO,CAAC3D,UAFrB;AAGE,MAAA,GAAG,EAAEuE,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAlCF,CAxCF,CADF,CALF,CAxGF,CAFF,CADF;AA6MD;;AAzP6C;;AA4PhD,MAAMC,mBAAmB,GAAGnI,SAAS,CAACyG,UAAD,CAArC;;AAEA,MAAM2B,GAAN,SAAkBtI,KAAK,CAAC4G,SAAxB,CAAyC;AACvCW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKV,KAAzB;AACA,wBAAO,oBAAC,mBAAD;AAAqB,MAAA,OAAO,EAAEU,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAJsC;;AAOzC,eAAevH,WAAW,CAACK,UAAU,CAACqC,MAAD,CAAV,CAAmB2F,GAAnB,CAAD,EAA0BnE,YAA1B,CAA1B","sourcesContent":["import React from \"react\";\nimport { createStore, withStore } from \"@spyna/react-store\";\nimport queryString from \"query-string\";\nimport firebase from \"firebase\";\nimport { ThemeProvider, withStyles } from \"@material-ui/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Github from \"./assets/github.svg\";\nimport Reddit from \"./assets/reddit.svg\";\nimport Telegram from \"./assets/telegram.svg\";\nimport Twitter from \"./assets/twitter.svg\";\nimport BridgeContainer from \"./containers/BridgeContainer\";\nimport ConfirmContainer from \"./containers/ConfirmContainer\";\nimport IntroContainer from \"./containers/IntroContainer\";\nimport NavContainer from \"./containers/NavContainer\";\nimport NetworkModalContainer from \"./containers/NetworkModalContainer\";\nimport TransferContainer2 from \"./containers/TransferContainer2\";\nimport { storeListener } from \"./services/storeService\";\nimport theme from \"./theme/theme\";\nimport { setNetwork, initLocalWeb3 } from \"./utils/walletUtils\";\nimport { BRIDGE_SYMBOL_MAP } from \"./utils/bridgeUtils\";\nimport { USDT_ADDRESS_TEST, USDT_ADDRESS_MAIN } from \"./utils/web3Utils\";\n\nrequire(\"dotenv\").config();\n\n// Instanitate Firebase\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FB_KEY,\n  authDomain: window.location.hostname,\n  projectId: process.env.REACT_APP_FB_PROJECT || \"ren-bridge\",\n});\nconst db = firebase.firestore();\nconst fns = firebase.functions();\n\nif (process.env.REACT_APP_FB_EMULATOR === \"true\") {\n  fns.useFunctionsEmulator(\"http://localhost:5001\");\n  db.settings({\n    host: \"localhost:8080\",\n    ssl: false,\n  });\n}\n\nconst styles = () => ({\n  container: {\n    minHeight: \"100vh\",\n  },\n  contentContainer: {\n    flex: 1,\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n  },\n  footerContainer: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    fontSize: 10,\n    \"& a\": {\n      color: \"#333\",\n      marginRight: theme.spacing(2),\n      textDecoration: \"none\",\n      \"&:hover\": {\n        opacity: 0.75,\n      },\n    },\n  },\n  footerLogo: {\n    height: 12,\n    width: \"auto\",\n    marginLeft: theme.spacing(0.5),\n  },\n  transfersContainer: {\n    padding: theme.spacing(3),\n  },\n});\n\nconst initialState = {\n  // networking\n  USDTAddress: USDT_ADDRESS_TEST,\n\n  selectedNetwork: \"testnet\",\n  queryParams: {},\n\n  // wallet & web3\n  dataWeb3: null,\n  localWeb3: null,\n  localWeb3Address: \"\",\n  localWeb3Network: \"\",\n  box: null,\n  space: null,\n  spaceError: false,\n  spaceRequesting: false,\n  walletConnecting: false,\n  loadingBalances: true,\n  renELABalance: 0,\n  // renBTCBalance: 0,\n  elausd: 0,\n  btcusd: 0,\n  zecusd: 0,\n  bchusd: 0,\n  ethBalance: 0,\n  gjs: null,\n  fees: null,\n  selectedWalletType: \"injected\",\n\n  // navigation\n  selectedBridge: \"eth\",\n  selectedPair: \"ela\",\n  confirmBridge: false,\n  selectedWallet: false,\n  selectedTab: 1,\n  selectedAsset: \"eth\",\n  confirmTx: null,\n  confirmAction: \"\",\n\n  // modals\n  showNetworkMenu: false,\n  showDepositModal: false,\n  depositDisclosureChecked: false,\n  showCancelModal: false,\n  cancelModalTx: null,\n  showGatewayModal: false,\n  gatewayModalTx: null,\n  showAboutModal: false,\n\n  // confirmation error\n  confirmationError: null as string | null,\n\n  // conversions\n  // 'convert.adapterAddress': ADAPTER_TEST,\n  \"convert.adapterWbtcAllowance\": \"\",\n  \"convert.adapterWbtcAllowanceRequesting\": \"\",\n  \"convert.transactions\": [],\n  \"convert.pendingConvertToEthereum\": [],\n  \"convert.selectedFormat\": \"weth\",\n  \"convert.selectedDirection\": 0,\n  \"convert.amount\": \"\",\n  \"convert.destination\": \"\",\n  \"convert.destinationValid\": false,\n  \"convert.destinationInputFocused\": false,\n  \"convert.showDestinationError\": false,\n  \"convert.exchangeRate\": \"\",\n  \"convert.renVMFee\": \"\",\n  \"convert.networkFee\": \"\",\n  \"convert.conversionTotal\": \"\",\n};\n\ninterface Props {\n  store: any;\n  classes: { [key in string]: string };\n}\n\nclass AppWrapper extends React.Component<Props> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const { store } = this.props;\n    const params = queryString.parse(window.location.search);\n\n    store.set(\"queryParams\", params);\n\n    setNetwork(params.network === \"testnet\" ? \"testnet\" : \"mainnet\");\n    // setBridge(\"eth\", \"ela\");\n    // setNetwork((params.network = \"testnet\"));\n    initLocalWeb3(\"injected\");\n  }\n\n  render() {\n    // window.ethereum.autoRefreshOnNetworkChange = false;\n    // window.ethereum.on(isVersion8 ? 'chainChanged' : 'networkChanged', network => {\n    //     choiceNetwork()\n    // })\n    const classes = this.props.classes;\n    const store = this.props.store;\n    storeListener(store);\n\n    const confirmBridge = store.get(\"confirmBridge\");\n    const selectedBridge = store.get(\"selectedBridge\");\n    // console.log(\"SELECTED BRIDGE\", selectedBridge);\n    const selectedPair = store.get(\"selectedPair\");\n    // console.log(\"SELECTED PAIR\", selectedPair);\n\n    const localWeb3Address = store.get(\"localWeb3Address\");\n    const selectedWallet = store.get(\"selectedWallet\");\n    // const localWeb3Address = false;\n    const confirmAction = store.get(\"confirmAction\");\n    const confirmTx = store.get(\"confirmTx\");\n\n    console.log(confirmBridge);\n    console.log(localWeb3Address);\n    console.log(confirmAction);\n    console.log(confirmTx);\n\n    return (\n      <ThemeProvider theme={theme}>\n        {/* <NetworkModalContainer /> */}\n        <Grid container className={classes.container}>\n          <NavContainer />\n          <Grid item className={classes.contentContainer}>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              {!confirmBridge && (\n                <Grid item xs={12} sm={8} md={6}>\n                  <BridgeContainer\n                    active={BRIDGE_SYMBOL_MAP[selectedBridge]}\n                    pair={BRIDGE_SYMBOL_MAP[selectedPair]}\n                    items={[\"ELA\", \"ETH\", \"TRX\"]}\n                    onBridgeChange={(v: string) => {\n                      const bridge = v.toLowerCase();\n                      store.set(\"selectedBridge\", bridge);\n                      if (bridge == selectedPair) {\n                        console.log(\"Same asset detected switching pair menu\");\n                        if (bridge == \"eth\") {\n                          store.set(\"selectedPair\", \"ela\");\n                        }\n                        if (bridge == \"ela\") {\n                          store.set(\"selectedPair\", \"eth\");\n                        }\n                        if (bridge == \"trx\") {\n                          store.set(\"selectedPair\", \"ela\");\n                        }\n                      }\n                    }}\n                    onPairChange={(v: string) => {\n                      const pair = v.toLowerCase();\n                      store.set(\"selectedPair\", pair);\n                    }}\n                  />\n                </Grid>\n              )}\n\n              {confirmBridge && !selectedWallet && (\n                <Grid item xs={12} sm={8} md={6}>\n                  <IntroContainer />\n                </Grid>\n              )}\n\n              {confirmBridge && selectedWallet && confirmAction && confirmTx ? (\n                <Grid item xs={12} sm={8} md={6}>\n                  <ConfirmContainer />\n                </Grid>\n              ) : (\n                <Grid item xs={12} sm={8} md={6}>\n                  <TransferContainer2 />\n                </Grid>\n              )}\n\n              {/* <Grid item xs={12} sm={8} md={6}>\n                <BridgeContainer\n                  active={BRIDGE_SYMBOL_MAP[selectedBridge]}\n                  pair={BRIDGE_SYMBOL_MAP[selectedPair]}\n                  items={[\"ELA\", \"ETH\", \"TRX\"]}\n                  onBridgeChange={(v: string) => {\n                    const bridge = v.toLowerCase();\n                    store.set(\"selectedBridge\", bridge);\n                    if (bridge == selectedPair) {\n                      console.log(\"Same asset detected switching pair menu\");\n                      if (bridge == \"eth\") {\n                        store.set(\"selectedPair\", \"ela\");\n                      }\n                      if (bridge == \"ela\") {\n                        store.set(\"selectedPair\", \"eth\");\n                      }\n                      if (bridge == \"trx\") {\n                        store.set(\"selectedPair\", \"ela\");\n                      }\n                    }\n                  }}\n                  onPairChange={(v: string) => {\n                    const pair = v.toLowerCase();\n                    store.set(\"selectedPair\", pair);\n                  }}\n                />\n              </Grid>\n\n              {!localWeb3Address ? (\n                <Grid item xs={12} sm={8} md={6}>\n                  <IntroContainer />\n                </Grid>\n              ) : (\n                <Grid item xs={12} sm={8} md={6}>\n                  {confirmAction && confirmTx ? (\n                    <ConfirmContainer />\n                  ) : (\n                    <TransferContainer2 />\n                  )}\n                </Grid>\n              )} */}\n            </Grid>\n          </Grid>\n          {/* <Grid item className={classes.contentContainer}>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item xs={12} sm={8} md={6}>\n                {confirmAction && confirmTx ? (\n                  <ConfirmContainer />\n                ) : (\n                  <TransferContainer2 />\n                )}\n              </Grid>\n            </Grid>\n          </Grid> */}\n          <Grid\n            container\n            className={classes.footerContainer}\n            alignItems=\"flex-end\"\n          >\n            <Container fixed maxWidth=\"lg\">\n              <Grid container alignItems=\"center\" justify=\"space-between\">\n                <Typography className={classes.footerLinks} variant=\"caption\">\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\"https://renproject.io/\"}\n                  >\n                    Ren Project Site\n                  </a>{\" \"}\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\"https://renproject.io/renvm\"}\n                  >\n                    About RenVM\n                  </a>{\" \"}\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\n                      \"https://docs.renproject.io/darknodes/faq/renbridge-faq\"\n                    }\n                  >\n                    FAQs\n                  </a>{\" \"}\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\"https://docs.renproject.io/developers/\"}\n                  >\n                    Docs\n                  </a>{\" \"}\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\"https://github.com/renproject/ren/wiki/Introduction\"}\n                  >\n                    Wiki\n                  </a>\n                </Typography>\n                <Typography className={classes.footerLinks} variant=\"caption\">\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\"https://twitter.com/renprotocol\"}\n                  >\n                    <img\n                      alt=\"Twitter\"\n                      className={classes.footerLogo}\n                      src={Twitter}\n                    />\n                  </a>\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\"https://github.com/renproject\"}\n                  >\n                    <img\n                      alt=\"Github\"\n                      className={classes.footerLogo}\n                      src={Github}\n                    />\n                  </a>\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\"https://t.me/renproject\"}\n                  >\n                    <img\n                      alt=\"Telegram\"\n                      className={classes.footerLogo}\n                      src={Telegram}\n                    />\n                  </a>\n                  <a\n                    rel=\"noreferrer noopener\"\n                    target=\"_blank\"\n                    href={\"https://www.reddit.com/r/renproject\"}\n                  >\n                    <img\n                      alt=\"Reddit\"\n                      className={classes.footerLogo}\n                      src={Reddit}\n                    />\n                  </a>\n                </Typography>\n              </Grid>\n            </Container>\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst AppWrapperComponent = withStore(AppWrapper);\n\nclass App extends React.Component<Props> {\n  render() {\n    const { classes } = this.props;\n    return <AppWrapperComponent classes={classes} />;\n  }\n}\n\nexport default createStore(withStyles(styles)(App), initialState);\n"]},"metadata":{},"sourceType":"module"}