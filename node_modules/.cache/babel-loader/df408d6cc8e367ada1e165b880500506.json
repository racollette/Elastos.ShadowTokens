{"ast":null,"code":"var _jsxFileName = \"/home/ryan/dev/defi/shadowtoken2/src/components/BigCurrencyInput.tsx\";\nimport React from \"react\";\nimport Numeral from \"numeral\";\nimport NumberFormat from \"react-number-format\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = () => ({\n  container: {\n    width: \"100%\",\n    textAlign: \"center\",\n    \"& input\": {\n      fontFamily: \"inherit\",\n      color: \"#3F3F48\"\n    }\n  },\n  large: {\n    \"& input\": {\n      fontSize: 32\n    }\n  },\n  medium: {\n    \"& input\": {\n      fontSize: 24\n    }\n  },\n  small: {\n    \"& input\": {\n      fontSize: 18\n    }\n  },\n  smallest: {\n    \"& input\": {\n      fontSize: 12\n    }\n  },\n  input: {\n    fontSize: 20,\n    width: \"100%\",\n    outline: \"none\",\n    textAlign: \"center\",\n    border: \"0px solid transparent\"\n  },\n  grayText: {\n    color: \"#b8bbc6\"\n  }\n});\n\nclass BigCurrencyInput extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.ref = void 0;\n    this.input = void 0;\n    this.ref = React.createRef();\n    this.input = null;\n  }\n\n  componentDidMount() {\n    const inputRef = this.props.inputRef;\n\n    if (this.props.inputRef) {\n      this.ref = inputRef;\n    }\n\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      className,\n      onChange,\n      symbol,\n      usdValue,\n      value,\n      placeholder\n    } = this.props;\n    const val = value ? String(value) : \"\";\n    const ref = this.ref;\n\n    const change = onChange || (() => {});\n\n    const chars = val.replace(\".\", \"\").replace(` ${symbol}`, \"\");\n    let size = \"large\";\n\n    if (chars.length > 5 && chars.length <= 7) {\n      size = \"medium\";\n    } else if (chars.length > 7 && chars.length <= 9) {\n      size = \"small\";\n    } else if (chars.length > 9) {\n      size = \"smallest\";\n    }\n\n    return (\n      /*#__PURE__*/\n      // <div className={classNames(classes.container, classes[size])}>\n      React.createElement(\"div\", {\n        className: classNames(classes.container),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NumberFormat, {\n        value: val,\n        ref: ref,\n        thousandSeparator: true,\n        allowLeadingZeros: true,\n        allowNegative: false // suffix={\" {\" + Numeral(usdValue).format(\"$0,0.00\") + \"}\"}\n        ,\n        onValueChange: change,\n        getInputRef: input => {\n          this.input = input;\n        },\n        className: classNames(classes.input, className),\n        placeholder: placeholder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        justify: \"flex-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: usdValue ? classes.grayText : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, \"(\", Numeral(usdValue).format(\"$0,0.00\"), \")\")))))\n    );\n  }\n\n}\n\nexport default withStyles(styles)(BigCurrencyInput);","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/src/components/BigCurrencyInput.tsx"],"names":["React","Numeral","NumberFormat","classNames","withStyles","Grid","styles","container","width","textAlign","fontFamily","color","large","fontSize","medium","small","smallest","input","outline","border","grayText","BigCurrencyInput","PureComponent","constructor","props","ref","createRef","componentDidMount","inputRef","focus","render","classes","className","onChange","symbol","usdValue","value","placeholder","val","String","change","chars","replace","size","length","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Numeral from \"numeral\";\nimport NumberFormat from \"react-number-format\";\nimport classNames from \"classnames\";\nimport { Styles, withStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles: Styles<any, any> = () => ({\n  container: {\n    width: \"100%\",\n    textAlign: \"center\",\n    \"& input\": {\n      fontFamily: \"inherit\",\n      color: \"#3F3F48\",\n    },\n  },\n  large: {\n    \"& input\": {\n      fontSize: 32,\n    },\n  },\n  medium: {\n    \"& input\": {\n      fontSize: 24,\n    },\n  },\n  small: {\n    \"& input\": {\n      fontSize: 18,\n    },\n  },\n  smallest: {\n    \"& input\": {\n      fontSize: 12,\n    },\n  },\n  input: {\n    fontSize: 20,\n    width: \"100%\",\n    outline: \"none\",\n    textAlign: \"center\",\n    border: \"0px solid transparent\",\n  },\n  grayText: {\n    color: \"#b8bbc6\",\n  },\n});\n\nclass BigCurrencyInput extends React.PureComponent<any> {\n  ref: React.RefObject<any>;\n  input: any;\n\n  constructor(props: any) {\n    super(props);\n    this.ref = React.createRef();\n    this.input = null;\n  }\n\n  componentDidMount() {\n    const inputRef = this.props.inputRef;\n    if (this.props.inputRef) {\n      this.ref = inputRef;\n    }\n\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      className,\n      onChange,\n      symbol,\n      usdValue,\n      value,\n      placeholder,\n    } = this.props;\n\n    const val = value ? String(value) : \"\";\n    const ref = this.ref;\n    const change = onChange || (() => {});\n\n    const chars = val.replace(\".\", \"\").replace(` ${symbol}`, \"\");\n\n    let size = \"large\";\n    if (chars.length > 5 && chars.length <= 7) {\n      size = \"medium\";\n    } else if (chars.length > 7 && chars.length <= 9) {\n      size = \"small\";\n    } else if (chars.length > 9) {\n      size = \"smallest\";\n    }\n\n    return (\n      // <div className={classNames(classes.container, classes[size])}>\n      <div className={classNames(classes.container)}>\n        <React.Fragment>\n          <Grid container>\n            <Grid item xs={8} justify=\"center\">\n              <NumberFormat\n                value={val}\n                ref={ref}\n                thousandSeparator={true}\n                allowLeadingZeros={true}\n                allowNegative={false}\n                // suffix={\" {\" + Numeral(usdValue).format(\"$0,0.00\") + \"}\"}\n                onValueChange={change}\n                getInputRef={(input: any) => {\n                  this.input = input;\n                }}\n                className={classNames(classes.input, className)}\n                placeholder={placeholder}\n              />\n            </Grid>\n            <Grid item xs={4} justify=\"flex-end\">\n              <p className={usdValue ? classes.grayText : \"\"}>\n                ({Numeral(usdValue).format(\"$0,0.00\")})\n              </p>\n            </Grid>\n          </Grid>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(BigCurrencyInput);\n"]},"metadata":{},"sourceType":"module"}