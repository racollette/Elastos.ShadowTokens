{"ast":null,"code":"'use strict';\n/***\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2018 Matias Alejo Garcia\n * Copyright (c) 2017 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\nvar $ = require('./preconditions');\n/***\n * Charset containing the 32 symbols used in the base32 encoding.\n */\n\n\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n/***\n * Inverted index mapping each symbol into its index within the charset.\n */\n\nvar CHARSET_INVERSE_INDEX = {\n  'q': 0,\n  'p': 1,\n  'z': 2,\n  'r': 3,\n  'y': 4,\n  '9': 5,\n  'x': 6,\n  '8': 7,\n  'g': 8,\n  'f': 9,\n  '2': 10,\n  't': 11,\n  'v': 12,\n  'd': 13,\n  'w': 14,\n  '0': 15,\n  's': 16,\n  '3': 17,\n  'j': 18,\n  'n': 19,\n  '5': 20,\n  '4': 21,\n  'k': 22,\n  'h': 23,\n  'c': 24,\n  'e': 25,\n  '6': 26,\n  'm': 27,\n  'u': 28,\n  'a': 29,\n  '7': 30,\n  'l': 31\n};\n/***\n * Encodes the given array of 5-bit integers as a base32-encoded string.\n *\n * @param {Array} data Array of integers between 0 and 31 inclusive.\n */\n\nfunction encode(data) {\n  $.checkArgument(data instanceof Array, 'Must be Array');\n  var base32 = '';\n\n  for (var i = 0; i < data.length; i++) {\n    var value = data[i];\n    $.checkArgument(0 <= value && value < 32, 'value ' + value);\n    base32 += CHARSET[value];\n  }\n\n  return base32;\n}\n/***\n * Decodes the given base32-encoded string into an array of 5-bit integers.\n *\n * @param {string} base32 \n */\n\n\nfunction decode(base32) {\n  $.checkArgument(typeof base32 === 'string', 'Must be base32-encoded string');\n  var data = [];\n\n  for (var i = 0; i < base32.length; i++) {\n    var value = base32[i];\n    $.checkArgument(value in CHARSET_INVERSE_INDEX, 'value ' + value);\n    data.push(CHARSET_INVERSE_INDEX[value]);\n  }\n\n  return data;\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/node_modules/bitcore-lib-cash/lib/util/base32.js"],"names":["$","require","CHARSET","CHARSET_INVERSE_INDEX","encode","data","checkArgument","Array","base32","i","length","value","decode","push","module","exports"],"mappings":"AAAA;AACA;;;;;;;;AASA,IAAIA,CAAC,GAAGC,OAAO,CAAC,iBAAD,CAAf;AAEA;;;;;AAGA,IAAIC,OAAO,GAAG,kCAAd;AAEA;;;;AAGA,IAAKC,qBAAqB,GAAG;AAC3B,OAAK,CADsB;AACnB,OAAK,CADc;AACX,OAAK,CADM;AACH,OAAK,CADF;AACK,OAAK,CADV;AACa,OAAK,CADlB;AACqB,OAAK,CAD1B;AAC6B,OAAK,CADlC;AAE3B,OAAK,CAFsB;AAEnB,OAAK,CAFc;AAEX,OAAK,EAFM;AAEF,OAAK,EAFH;AAEO,OAAK,EAFZ;AAEgB,OAAK,EAFrB;AAEyB,OAAK,EAF9B;AAEkC,OAAK,EAFvC;AAG3B,OAAK,EAHsB;AAGlB,OAAK,EAHa;AAGT,OAAK,EAHI;AAGA,OAAK,EAHL;AAGS,OAAK,EAHd;AAGkB,OAAK,EAHvB;AAG2B,OAAK,EAHhC;AAGoC,OAAK,EAHzC;AAI3B,OAAK,EAJsB;AAIlB,OAAK,EAJa;AAIT,OAAK,EAJI;AAIA,OAAK,EAJL;AAIS,OAAK,EAJd;AAIkB,OAAK,EAJvB;AAI2B,OAAK,EAJhC;AAIoC,OAAK;AAJzC,CAA7B;AAOA;;;;;;AAKA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpBL,EAAAA,CAAC,CAACM,aAAF,CAAgBD,IAAI,YAAYE,KAAhC,EAAuC,eAAvC;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,IAAI,CAACK,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,QAAIE,KAAK,GAAGN,IAAI,CAACI,CAAD,CAAhB;AACAT,IAAAA,CAAC,CAACM,aAAF,CAAgB,KAAKK,KAAL,IAAcA,KAAK,GAAG,EAAtC,EAA0C,WAAWA,KAArD;AACAH,IAAAA,MAAM,IAAIN,OAAO,CAACS,KAAD,CAAjB;AACD;;AACD,SAAOH,MAAP;AACD;AAED;;;;;;;AAKA,SAASI,MAAT,CAAgBJ,MAAhB,EAAwB;AACtBR,EAAAA,CAAC,CAACM,aAAF,CAAgB,OAAOE,MAAP,KAAkB,QAAlC,EAA4C,+BAA5C;AACA,MAAIH,IAAI,GAAG,EAAX;;AACA,OAAK,IAAII,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,MAAM,CAACE,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,QAAIE,KAAK,GAAGH,MAAM,CAACC,CAAD,CAAlB;AACAT,IAAAA,CAAC,CAACM,aAAF,CAAgBK,KAAK,IAAIR,qBAAzB,EAAgD,WAAUQ,KAA1D;AACAN,IAAAA,IAAI,CAACQ,IAAL,CAAUV,qBAAqB,CAACQ,KAAD,CAA/B;AACD;;AACD,SAAON,IAAP;AACD;;AAEDS,MAAM,CAACC,OAAP,GAAiB;AACfX,EAAAA,MAAM,EAAEA,MADO;AAEfQ,EAAAA,MAAM,EAAEA;AAFO,CAAjB","sourcesContent":["'use strict';\n/***\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2018 Matias Alejo Garcia\n * Copyright (c) 2017 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n\nvar $ = require('./preconditions');\n\n/***\n * Charset containing the 32 symbols used in the base32 encoding.\n */\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\n/***\n * Inverted index mapping each symbol into its index within the charset.\n */\nvar  CHARSET_INVERSE_INDEX = {\n  'q': 0, 'p': 1, 'z': 2, 'r': 3, 'y': 4, '9': 5, 'x': 6, '8': 7,\n  'g': 8, 'f': 9, '2': 10, 't': 11, 'v': 12, 'd': 13, 'w': 14, '0': 15,\n  's': 16, '3': 17, 'j': 18, 'n': 19, '5': 20, '4': 21, 'k': 22, 'h': 23,\n  'c': 24, 'e': 25, '6': 26, 'm': 27, 'u': 28, 'a': 29, '7': 30, 'l': 31,\n};\n\n/***\n * Encodes the given array of 5-bit integers as a base32-encoded string.\n *\n * @param {Array} data Array of integers between 0 and 31 inclusive.\n */\nfunction encode(data) {\n  $.checkArgument(data instanceof Array, 'Must be Array');\n  var base32 = '';\n  for (var i=0; i<data.length; i++) {\n    var value = data[i];\n    $.checkArgument(0 <= value && value < 32, 'value ' + value);\n    base32 += CHARSET[value];\n  }\n  return base32;\n}\n\n/***\n * Decodes the given base32-encoded string into an array of 5-bit integers.\n *\n * @param {string} base32 \n */\nfunction decode(base32) {\n  $.checkArgument(typeof base32 === 'string', 'Must be base32-encoded string');\n  var data = [];\n  for (var i=0; i<base32.length; i++) {\n    var value = base32[i];\n    $.checkArgument(value in CHARSET_INVERSE_INDEX, 'value '+ value);\n    data.push(CHARSET_INVERSE_INDEX[value]);\n  }\n  return data;\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n};\n"]},"metadata":{},"sourceType":"script"}