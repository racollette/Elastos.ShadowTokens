{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Blockstream = void 0;\n\nconst axios_1 = __importDefault(require(\"axios\"));\n\nconst utxo_1 = require(\"../../lib/utxo\");\n\nconst timeout_1 = require(\"./timeout\");\n\n;\n\nconst fetchUTXO = testnet => async (txHash, vOut) => {\n  const apiUrl = `https://blockstream.info/${testnet ? \"testnet/\" : \"\"}api`;\n  const utxo = (await axios_1.default.get(`${apiUrl}/tx/${txHash}`, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  })).data;\n  const heightResponse = (await axios_1.default.get(`${apiUrl}/blocks/tip/height`, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  })).data;\n  const confirmations = utxo.status.confirmed ? Math.max(1 + parseInt(heightResponse, 10) - utxo.status.block_height, 0) : 0;\n  return {\n    txHash,\n    amount: utxo.vout[vOut].value,\n    vOut,\n    confirmations\n  };\n};\n\nconst fetchConfirmations = testnet => async txHash => {\n  const apiUrl = `https://blockstream.info/${testnet ? \"testnet/\" : \"\"}api`;\n  const utxo = (await axios_1.default.get(`${apiUrl}/tx/${txHash}`, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  })).data;\n\n  const heightResponse = () => axios_1.default.get(`${apiUrl}/blocks/tip/height`, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  });\n\n  return utxo.status.confirmed ? Math.max(1 + parseInt((await heightResponse()).data, 10) - utxo.status.block_height, 0) : 0;\n};\n\nconst fetchUTXOs = testnet => async (address, confirmations) => {\n  const apiUrl = `https://blockstream.info/${testnet ? \"testnet/\" : \"\"}api`;\n  const response = await axios_1.default.get(`${apiUrl}/address/${address}/utxo`, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  });\n  const heightResponse = await axios_1.default.get(`${apiUrl}/blocks/tip/height`, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  });\n  return response.data.map(utxo => ({\n    txHash: utxo.txid,\n    amount: utxo.value,\n    vOut: utxo.vout,\n    confirmations: utxo.status.confirmed ? 1 + parseInt(heightResponse.data, 10) - utxo.status.block_height : 0\n  })).filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations).sort(utxo_1.sortUTXOs);\n};\n\nconst broadcastTransaction = testnet => async txHex => {\n  const response = await axios_1.default.post(`https://blockstream.info/${testnet ? \"testnet/\" : \"\"}api/tx`, txHex, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  });\n  return response.data;\n};\n\nexports.Blockstream = {\n  fetchUTXO,\n  fetchUTXOs,\n  fetchConfirmations,\n  broadcastTransaction\n};","map":{"version":3,"sources":["../../../../src/common/apis/blockstream.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,MAAA,MAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAcC;;AAwBD,MAAM,SAAS,GAAI,OAAD,IAAsB,OAAO,MAAP,EAAuB,IAAvB,KAAsD;AAC1F,QAAM,MAAM,GAAG,4BAA4B,OAAO,GAAG,UAAH,GAAgB,EAAE,KAApE;AAEA,QAAM,IAAI,GAAG,CAAC,MAAM,OAAA,CAAA,OAAA,CAAM,GAAN,CAAyB,GAAG,MAAM,OAAO,MAAM,EAA/C,EAAmD;AAAE,IAAA,OAAO,EAAE,SAAA,CAAA;AAAX,GAAnD,CAAP,EAAyF,IAAtG;AAEA,QAAM,cAAc,GAAG,CAAC,MAAM,OAAA,CAAA,OAAA,CAAM,GAAN,CAAkB,GAAG,MAAM,oBAA3B,EAAiD;AAAE,IAAA,OAAO,EAAE,SAAA,CAAA;AAAX,GAAjD,CAAP,EAAuF,IAA9G;AAEA,QAAM,aAAa,GAAG,IAAI,CAAC,MAAL,CAAY,SAAZ,GAAwB,IAAI,CAAC,GAAL,CAAS,IAAI,QAAQ,CAAC,cAAD,EAAiB,EAAjB,CAAZ,GAAmC,IAAI,CAAC,MAAL,CAAY,YAAxD,EAAsE,CAAtE,CAAxB,GAAmG,CAAzH;AAEA,SAAO;AACH,IAAA,MADG;AAEH,IAAA,MAAM,EAAE,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,KAFrB;AAGH,IAAA,IAHG;AAIH,IAAA;AAJG,GAAP;AAMH,CAfD;;AAiBA,MAAM,kBAAkB,GAAI,OAAD,IAAsB,MAAO,MAAP,IAA0C;AACvF,QAAM,MAAM,GAAG,4BAA4B,OAAO,GAAG,UAAH,GAAgB,EAAE,KAApE;AAEA,QAAM,IAAI,GAAG,CAAC,MAAM,OAAA,CAAA,OAAA,CAAM,GAAN,CAAyB,GAAG,MAAM,OAAO,MAAM,EAA/C,EAAmD;AAAE,IAAA,OAAO,EAAE,SAAA,CAAA;AAAX,GAAnD,CAAP,EAAyF,IAAtG;;AAEA,QAAM,cAAc,GAAG,MAAM,OAAA,CAAA,OAAA,CAAM,GAAN,CAAkB,GAAG,MAAM,oBAA3B,EAAiD;AAAE,IAAA,OAAO,EAAE,SAAA,CAAA;AAAX,GAAjD,CAA7B;;AAEA,SAAO,IAAI,CAAC,MAAL,CAAY,SAAZ,GAAwB,IAAI,CAAC,GAAL,CAAS,IAAI,QAAQ,CAAC,CAAC,MAAM,cAAc,EAArB,EAAyB,IAA1B,EAAgC,EAAhC,CAAZ,GAAkD,IAAI,CAAC,MAAL,CAAY,YAAvE,EAAqF,CAArF,CAAxB,GAAkH,CAAzH;AACH,CARD;;AAUA,MAAM,UAAU,GAAI,OAAD,IAAsB,OAAO,OAAP,EAAwB,aAAxB,KAA2E;AAChH,QAAM,MAAM,GAAG,4BAA4B,OAAO,GAAG,UAAH,GAAgB,EAAE,KAApE;AAEA,QAAM,QAAQ,GAAG,MAAM,OAAA,CAAA,OAAA,CAAM,GAAN,CAA0C,GAAG,MAAM,YAAY,OAAO,OAAtE,EAA+E;AAAE,IAAA,OAAO,EAAE,SAAA,CAAA;AAAX,GAA/E,CAAvB;AAEA,QAAM,cAAc,GAAG,MAAM,OAAA,CAAA,OAAA,CAAM,GAAN,CAAkB,GAAG,MAAM,oBAA3B,EAAiD;AAAE,IAAA,OAAO,EAAE,SAAA,CAAA;AAAX,GAAjD,CAA7B;AAEA,SAAO,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAkB,IAAI,KAAK;AAC9B,IAAA,MAAM,EAAE,IAAI,CAAC,IADiB;AAE9B,IAAA,MAAM,EAAE,IAAI,CAAC,KAFiB;AAG9B,IAAA,IAAI,EAAE,IAAI,CAAC,IAHmB;AAI9B,IAAA,aAAa,EAAE,IAAI,CAAC,MAAL,CAAY,SAAZ,GAAwB,IAAI,QAAQ,CAAC,cAAc,CAAC,IAAhB,EAAsB,EAAtB,CAAZ,GAAwC,IAAI,CAAC,MAAL,CAAY,YAA5E,GAA2F;AAJ5E,GAAL,CAAtB,EAMF,MANE,CAMK,IAAI,IAAI,aAAa,KAAK,CAAlB,IAAuB,IAAI,CAAC,aAAL,IAAsB,aAN1D,EAOF,IAPE,CAOG,MAAA,CAAA,SAPH,CAAP;AAQH,CAfD;;AAkBA,MAAM,oBAAoB,GAAI,OAAD,IAAsB,MAAO,KAAP,IAAyC;AACxF,QAAM,QAAQ,GAAG,MAAM,OAAA,CAAA,OAAA,CAAM,IAAN,CAAmB,4BAA4B,OAAO,GAAG,UAAH,GAAgB,EAAE,QAAxE,EAAkF,KAAlF,EAAyF;AAAE,IAAA,OAAO,EAAE,SAAA,CAAA;AAAX,GAAzF,CAAvB;AACA,SAAO,QAAQ,CAAC,IAAhB;AACH,CAHD;;AAKa,OAAA,CAAA,WAAA,GAAc;AACvB,EAAA,SADuB;AAEvB,EAAA,UAFuB;AAGvB,EAAA,kBAHuB;AAIvB,EAAA;AAJuB,CAAd","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Blockstream = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst utxo_1 = require(\"../../lib/utxo\");\nconst timeout_1 = require(\"./timeout\");\n;\nconst fetchUTXO = (testnet) => async (txHash, vOut) => {\n    const apiUrl = `https://blockstream.info/${testnet ? \"testnet/\" : \"\"}api`;\n    const utxo = (await axios_1.default.get(`${apiUrl}/tx/${txHash}`, { timeout: timeout_1.DEFAULT_TIMEOUT })).data;\n    const heightResponse = (await axios_1.default.get(`${apiUrl}/blocks/tip/height`, { timeout: timeout_1.DEFAULT_TIMEOUT })).data;\n    const confirmations = utxo.status.confirmed ? Math.max(1 + parseInt(heightResponse, 10) - utxo.status.block_height, 0) : 0;\n    return {\n        txHash,\n        amount: utxo.vout[vOut].value,\n        vOut,\n        confirmations,\n    };\n};\nconst fetchConfirmations = (testnet) => async (txHash) => {\n    const apiUrl = `https://blockstream.info/${testnet ? \"testnet/\" : \"\"}api`;\n    const utxo = (await axios_1.default.get(`${apiUrl}/tx/${txHash}`, { timeout: timeout_1.DEFAULT_TIMEOUT })).data;\n    const heightResponse = () => axios_1.default.get(`${apiUrl}/blocks/tip/height`, { timeout: timeout_1.DEFAULT_TIMEOUT });\n    return utxo.status.confirmed ? Math.max(1 + parseInt((await heightResponse()).data, 10) - utxo.status.block_height, 0) : 0;\n};\nconst fetchUTXOs = (testnet) => async (address, confirmations) => {\n    const apiUrl = `https://blockstream.info/${testnet ? \"testnet/\" : \"\"}api`;\n    const response = await axios_1.default.get(`${apiUrl}/address/${address}/utxo`, { timeout: timeout_1.DEFAULT_TIMEOUT });\n    const heightResponse = await axios_1.default.get(`${apiUrl}/blocks/tip/height`, { timeout: timeout_1.DEFAULT_TIMEOUT });\n    return response.data.map(utxo => ({\n        txHash: utxo.txid,\n        amount: utxo.value,\n        vOut: utxo.vout,\n        confirmations: utxo.status.confirmed ? 1 + parseInt(heightResponse.data, 10) - utxo.status.block_height : 0,\n    }))\n        .filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations)\n        .sort(utxo_1.sortUTXOs);\n};\nconst broadcastTransaction = (testnet) => async (txHex) => {\n    const response = await axios_1.default.post(`https://blockstream.info/${testnet ? \"testnet/\" : \"\"}api/tx`, txHex, { timeout: timeout_1.DEFAULT_TIMEOUT });\n    return response.data;\n};\nexports.Blockstream = {\n    fetchUTXO,\n    fetchUTXOs,\n    fetchConfirmations,\n    broadcastTransaction,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2tzdHJlYW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tbW9uL2FwaXMvYmxvY2tzdHJlYW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0Esa0RBQTBCO0FBRTFCLHlDQUFpRDtBQUNqRCx1Q0FBNEM7QUFjM0MsQ0FBQztBQXdCRixNQUFNLFNBQVMsR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFjLEVBQUUsSUFBWSxFQUFpQixFQUFFO0lBQzFGLE1BQU0sTUFBTSxHQUFHLDRCQUE0QixPQUFPLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUM7SUFFMUUsTUFBTSxJQUFJLEdBQUcsQ0FBQyxNQUFNLGVBQUssQ0FBQyxHQUFHLENBQWdCLEdBQUcsTUFBTSxPQUFPLE1BQU0sRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLHlCQUFlLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBRTNHLE1BQU0sY0FBYyxHQUFHLENBQUMsTUFBTSxlQUFLLENBQUMsR0FBRyxDQUFTLEdBQUcsTUFBTSxvQkFBb0IsRUFBRSxFQUFFLE9BQU8sRUFBRSx5QkFBZSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUVuSCxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLGNBQWMsRUFBRSxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTNILE9BQU87UUFDSCxNQUFNO1FBQ04sTUFBTSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSztRQUM3QixJQUFJO1FBQ0osYUFBYTtL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"]},"metadata":{},"sourceType":"script"}