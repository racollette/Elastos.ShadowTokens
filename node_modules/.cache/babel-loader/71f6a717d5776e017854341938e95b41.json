{"ast":null,"code":"const createTimerObject = () => {\n  const Timer = class {\n    static setTimeout(cb, ms) {\n      return setTimeout(cb, ms);\n    }\n\n    static clearTimeout(id) {\n      return clearTimeout(id);\n    }\n\n    static setInterval(cb, ms) {\n      return setInterval(cb, ms);\n    }\n\n    static clearInterval(id) {\n      return clearInterval(id);\n    }\n\n    static setImmediate(cb) {\n      if (typeof setImmediate == 'function') {\n        return setImmediate(cb);\n      }\n\n      return setTimeout(cb);\n    }\n\n  };\n  return Timer;\n};\n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nconst _timers = new Map();\n\nconst _SetTimeoutType = 0;\nconst _SetIntervalType = 1;\nconst _SetImmediateType = 2;\nconst _ClearTimeoutType = 3;\nconst _ClearIntervalType = 4;\nlet worker;\nlet _nextId = 0;\n\nconst nextId = function () {\n  if (_nextId == MAX_SAFE_INTEGER) {\n    _nextId = 0;\n  }\n\n  return _nextId++;\n};\n\nclass Timer {\n  static setTimeout(cb, ms) {\n    const id = nextId();\n\n    _timers.set(id, cb);\n\n    worker.postMessage({\n      type: _SetTimeoutType,\n      id: id,\n      ms: ms\n    });\n    return id;\n  }\n\n  static clearTimeout(id) {\n    _timers.delete(id);\n\n    worker.postMessage({\n      type: _ClearTimeoutType,\n      id: id\n    });\n  }\n\n  static setInterval(cb, ms) {\n    const id = nextId();\n\n    _timers.set(id, cb);\n\n    worker.postMessage({\n      type: _SetIntervalType,\n      id: id,\n      ms: ms\n    });\n    return id;\n  }\n\n  static clearInterval(id) {\n    _timers.delete(id);\n\n    worker.postMessage({\n      type: _ClearIntervalType,\n      id: id\n    });\n  }\n\n  static setImmediate(cb) {\n    const id = nextId();\n\n    _timers.set(id, cb);\n\n    worker.postMessage({\n      type: _SetImmediateType,\n      id: id\n    });\n    return id;\n  }\n\n  static onmessage(e) {\n    const cb = _timers.get(e.data.id);\n\n    if (cb !== undefined) {\n      cb.call();\n\n      if (e.data.type !== _SetIntervalType) {\n        _timers.delete(e.data.id);\n      }\n    }\n  }\n\n}\n\nconst workerCode = function () {\n  return '(' + function () {\n    const _wSetTimeoutType = 0;\n    const _wSetIntervalType = 1;\n    const _wSetImmediateType = 2;\n    const _wClearTimeoutType = 3;\n    const _wClearIntervalType = 4;\n    const timers = {};\n\n    self.onmessage = e => {\n      if (e.data.type == _wSetTimeoutType) {\n        timers[e.data.id] = setTimeout(() => self.postMessage(e.data), e.data.ms);\n      } else if (e.data.type == _wSetIntervalType) {\n        timers[e.data.id] = setInterval(() => self.postMessage(e.data), e.data.ms);\n      } else if (e.data.type == _wSetImmediateType) {\n        self.postMessage(e.data);\n      } else if (e.data.type == _wClearTimeoutType) {\n        clearTimeout(timers[e.data.id]);\n        delete timers[e.data.id];\n      } else if (e.data.type == _wClearIntervalType) {\n        clearInterval(timers[e.data.id]);\n        delete timers[e.data.id];\n      }\n    };\n  }.toString() + '());';\n};\n\nconst getTimer = () => {\n  if (typeof navigator !== 'undefined' && (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.userAgent.match(/Trident.*rv:11\\./))) {\n    return createTimerObject();\n  } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope // eslint-disable-line\n  ) {\n      return createTimerObject();\n    } else if (worker === undefined) {\n    const url = URL.createObjectURL(new Blob([workerCode()], {\n      type: 'text/javascript'\n    }));\n    worker = new Worker(url);\n    worker.onmessage = Timer.onmessage;\n    return Timer;\n  }\n};\n\nexport default getTimer();","map":{"version":3,"sources":["/home/ryan/dev/defi/bridge/node_modules/@myetherwallet/mewconnect-web-client/src/connectProvider/web3Provider/helpers/webWorkerTimer/index.js"],"names":["createTimerObject","Timer","setTimeout","cb","ms","clearTimeout","id","setInterval","clearInterval","setImmediate","MAX_SAFE_INTEGER","Number","_timers","Map","_SetTimeoutType","_SetIntervalType","_SetImmediateType","_ClearTimeoutType","_ClearIntervalType","worker","_nextId","nextId","set","postMessage","type","delete","onmessage","e","get","data","undefined","call","workerCode","_wSetTimeoutType","_wSetIntervalType","_wSetImmediateType","_wClearTimeoutType","_wClearIntervalType","timers","self","toString","getTimer","navigator","userAgent","indexOf","match","WorkerGlobalScope","url","URL","createObjectURL","Blob","Worker"],"mappings":"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","sourcesContent":["const createTimerObject = () => {\n  const Timer = class {\n    static setTimeout(cb, ms) {\n      return setTimeout(cb, ms);\n    }\n\n    static clearTimeout(id) {\n      return clearTimeout(id);\n    }\n\n    static setInterval(cb, ms) {\n      return setInterval(cb, ms);\n    }\n\n    static clearInterval(id) {\n      return clearInterval(id);\n    }\n\n    static setImmediate(cb) {\n      if (typeof setImmediate == 'function') {\n        return setImmediate(cb);\n      }\n\n      return setTimeout(cb);\n    }\n  };\n  return Timer;\n};\n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nconst _timers = new Map();\n\nconst _SetTimeoutType = 0;\nconst _SetIntervalType = 1;\nconst _SetImmediateType = 2;\nconst _ClearTimeoutType = 3;\nconst _ClearIntervalType = 4;\n\nlet worker;\n\nlet _nextId = 0;\nconst nextId = function() {\n  if (_nextId == MAX_SAFE_INTEGER) {\n    _nextId = 0;\n  }\n  return _nextId++;\n};\n\nclass Timer {\n  static setTimeout(cb, ms) {\n    const id = nextId();\n    _timers.set(id, cb);\n    worker.postMessage({ type: _SetTimeoutType, id: id, ms: ms });\n    return id;\n  }\n\n  static clearTimeout(id) {\n    _timers.delete(id);\n    worker.postMessage({ type: _ClearTimeoutType, id: id });\n  }\n\n  static setInterval(cb, ms) {\n    const id = nextId();\n    _timers.set(id, cb);\n    worker.postMessage({ type: _SetIntervalType, id: id, ms: ms });\n    return id;\n  }\n\n  static clearInterval(id) {\n    _timers.delete(id);\n    worker.postMessage({ type: _ClearIntervalType, id: id });\n  }\n\n  static setImmediate(cb) {\n    const id = nextId();\n    _timers.set(id, cb);\n    worker.postMessage({ type: _SetImmediateType, id: id });\n    return id;\n  }\n\n  static onmessage(e) {\n    const cb = _timers.get(e.data.id);\n    if (cb !== undefined) {\n      cb.call();\n      if (e.data.type !== _SetIntervalType) {\n        _timers.delete(e.data.id);\n      }\n    }\n  }\n}\n\nconst workerCode = function() {\n  return (\n    '(' +\n    function() {\n      const _wSetTimeoutType = 0;\n      const _wSetIntervalType = 1;\n      const _wSetImmediateType = 2;\n      const _wClearTimeoutType = 3;\n      const _wClearIntervalType = 4;\n      const timers = {};\n      self.onmessage = e => {\n        if (e.data.type == _wSetTimeoutType) {\n          timers[e.data.id] = setTimeout(\n            () => self.postMessage(e.data),\n            e.data.ms\n          );\n        } else if (e.data.type == _wSetIntervalType) {\n          timers[e.data.id] = setInterval(\n            () => self.postMessage(e.data),\n            e.data.ms\n          );\n        } else if (e.data.type == _wSetImmediateType) {\n          self.postMessage(e.data);\n        } else if (e.data.type == _wClearTimeoutType) {\n          clearTimeout(timers[e.data.id]);\n          delete timers[e.data.id];\n        } else if (e.data.type == _wClearIntervalType) {\n          clearInterval(timers[e.data.id]);\n          delete timers[e.data.id];\n        }\n      };\n    }.toString() +\n    '());'\n  );\n};\nconst getTimer = () => {\n  if (\n    typeof navigator !== 'undefined' &&\n    (navigator.userAgent.indexOf('MSIE') !== -1 ||\n      navigator.userAgent.match(/Trident.*rv:11\\./))\n  ) {\n    return createTimerObject();\n  } else if (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope // eslint-disable-line\n  ) {\n    return createTimerObject();\n  } else if (worker === undefined) {\n    const url = URL.createObjectURL(\n      new Blob([workerCode()], { type: 'text/javascript' })\n    );\n    worker = new Worker(url);\n    worker.onmessage = Timer.onmessage;\n    return Timer;\n  }\n};\nexport default getTimer();\n"]},"metadata":{},"sourceType":"module"}