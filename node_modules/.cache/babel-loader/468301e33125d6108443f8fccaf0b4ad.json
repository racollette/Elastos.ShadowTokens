{"ast":null,"code":"var cryptoUtils = require('./crypto/utils');\n\nvar baseX = require('base-x');\n\nvar ALLOWED_CHARS = 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz';\nvar codec = baseX(ALLOWED_CHARS);\nvar regexp = new RegExp('^r[' + ALLOWED_CHARS + ']{27,35}$');\nmodule.exports = {\n  /**\n   * ripple address validation\n   */\n  isValidAddress: function (address) {\n    if (regexp.test(address)) {\n      return this.verifyChecksum(address);\n    }\n\n    return false;\n  },\n  verifyChecksum: function (address) {\n    var bytes = codec.decode(address);\n    var computedChecksum = cryptoUtils.sha256Checksum(cryptoUtils.toHex(bytes.slice(0, -4)));\n    var checksum = cryptoUtils.toHex(bytes.slice(-4));\n    return computedChecksum === checksum;\n  }\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/node_modules/wallet-address-validator/src/ripple_validator.js"],"names":["cryptoUtils","require","baseX","ALLOWED_CHARS","codec","regexp","RegExp","module","exports","isValidAddress","address","test","verifyChecksum","bytes","decode","computedChecksum","sha256Checksum","toHex","slice","checksum"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIE,aAAa,GAAG,4DAApB;AAEA,IAAIC,KAAK,GAAGF,KAAK,CAACC,aAAD,CAAjB;AACA,IAAIE,MAAM,GAAG,IAAIC,MAAJ,CAAW,QAAQH,aAAR,GAAwB,WAAnC,CAAb;AAEAI,MAAM,CAACC,OAAP,GAAiB;AACb;;;AAGAC,EAAAA,cAAc,EAAE,UAAUC,OAAV,EAAmB;AAC/B,QAAIL,MAAM,CAACM,IAAP,CAAYD,OAAZ,CAAJ,EAA0B;AACtB,aAAO,KAAKE,cAAL,CAAoBF,OAApB,CAAP;AACH;;AAED,WAAO,KAAP;AACH,GAVY;AAYbE,EAAAA,cAAc,EAAE,UAAUF,OAAV,EAAmB;AAC/B,QAAIG,KAAK,GAAGT,KAAK,CAACU,MAAN,CAAaJ,OAAb,CAAZ;AACA,QAAIK,gBAAgB,GAAGf,WAAW,CAACgB,cAAZ,CAA2BhB,WAAW,CAACiB,KAAZ,CAAkBJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAlB,CAA3B,CAAvB;AACA,QAAIC,QAAQ,GAAGnB,WAAW,CAACiB,KAAZ,CAAkBJ,KAAK,CAACK,KAAN,CAAY,CAAC,CAAb,CAAlB,CAAf;AAEA,WAAOH,gBAAgB,KAAKI,QAA5B;AACH;AAlBY,CAAjB","sourcesContent":["var cryptoUtils = require('./crypto/utils');\nvar baseX = require('base-x');\n\nvar ALLOWED_CHARS = 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz';\n\nvar codec = baseX(ALLOWED_CHARS);\nvar regexp = new RegExp('^r[' + ALLOWED_CHARS + ']{27,35}$');\n\nmodule.exports = {\n    /**\n     * ripple address validation\n     */\n    isValidAddress: function (address) {\n        if (regexp.test(address)) {\n            return this.verifyChecksum(address);\n        }\n\n        return false;\n    },\n\n    verifyChecksum: function (address) {\n        var bytes = codec.decode(address);\n        var computedChecksum = cryptoUtils.sha256Checksum(cryptoUtils.toHex(bytes.slice(0, -4)));\n        var checksum = cryptoUtils.toHex(bytes.slice(-4));\n\n        return computedChecksum === checksum\n    }\n};\n"]},"metadata":{},"sourceType":"script"}