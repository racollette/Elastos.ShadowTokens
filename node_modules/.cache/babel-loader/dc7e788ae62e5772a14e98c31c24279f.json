{"ast":null,"code":"/* eslint-disable */\nconst platform = require('platform');\n\nimport * as types from './types/index';\nimport * as nodes from './nodes/index';\nlet nodeList = {};\nObject.keys(types).forEach(key => {\n  nodeList[types[key].name] = [];\n});\nObject.keys(nodes).forEach(key => {\n  if (nodes[key].service === nodes['ethmewws'].service) {\n    nodeList[nodes[key].type.name].splice(0, 0, nodes[key]);\n  } else if (nodes[key].service === 'infura.io' && platform.name && platform.name === 'firefox') return; // temp until infura fix https://github.com/INFURA/infura/issues/174\n  else {\n      nodeList[nodes[key].type.name].push(nodes[key]);\n    }\n});\nexport default nodeList;","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/node_modules/@myetherwallet/mewconnect-web-client/src/connectProvider/web3Provider/networks/index.js"],"names":["platform","require","types","nodes","nodeList","Object","keys","forEach","key","name","service","type","splice","push"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACAC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2BC,GAAG,IAAI;AAChCJ,EAAAA,QAAQ,CAACF,KAAK,CAACM,GAAD,CAAL,CAAWC,IAAZ,CAAR,GAA4B,EAA5B;AACD,CAFD;AAIAJ,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2BC,GAAG,IAAI;AAChC,MAAIL,KAAK,CAACK,GAAD,CAAL,CAAWE,OAAX,KAAuBP,KAAK,CAAC,UAAD,CAAL,CAAkBO,OAA7C,EAAsD;AACpDN,IAAAA,QAAQ,CAACD,KAAK,CAACK,GAAD,CAAL,CAAWG,IAAX,CAAgBF,IAAjB,CAAR,CAA+BG,MAA/B,CAAsC,CAAtC,EAAyC,CAAzC,EAA4CT,KAAK,CAACK,GAAD,CAAjD;AACD,GAFD,MAEO,IACLL,KAAK,CAACK,GAAD,CAAL,CAAWE,OAAX,KAAuB,WAAvB,IACAV,QAAQ,CAACS,IADT,IAEAT,QAAQ,CAACS,IAAT,KAAkB,SAHb,EAKL,OALK,CAMP;AANO,OAOF;AACHL,MAAAA,QAAQ,CAACD,KAAK,CAACK,GAAD,CAAL,CAAWG,IAAX,CAAgBF,IAAjB,CAAR,CAA+BI,IAA/B,CAAoCV,KAAK,CAACK,GAAD,CAAzC;AACD;AACF,CAbD;AAeA,eAAeJ,QAAf","sourcesContent":["/* eslint-disable */\nconst platform = require('platform');\nimport * as types from './types/index';\nimport * as nodes from './nodes/index';\n\nlet nodeList = {};\nObject.keys(types).forEach(key => {\n  nodeList[types[key].name] = [];\n});\n\nObject.keys(nodes).forEach(key => {\n  if (nodes[key].service === nodes['ethmewws'].service) {\n    nodeList[nodes[key].type.name].splice(0, 0, nodes[key]);\n  } else if (\n    nodes[key].service === 'infura.io' &&\n    platform.name &&\n    platform.name === 'firefox'\n  )\n    return;\n  // temp until infura fix https://github.com/INFURA/infura/issues/174\n  else {\n    nodeList[nodes[key].type.name].push(nodes[key]);\n  }\n});\n\nexport default nodeList;\n"]},"metadata":{},"sourceType":"module"}