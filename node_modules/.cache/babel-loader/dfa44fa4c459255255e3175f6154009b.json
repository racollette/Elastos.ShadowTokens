{"ast":null,"code":"'use strict';\n\nvar BufferWriter = require('./bufferwriter');\n\nvar BufferReader = require('./bufferreader');\n\nvar BN = require('../crypto/bn');\n\nvar Varint = function Varint(buf) {\n  if (!(this instanceof Varint)) return new Varint(buf);\n\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf;\n  } else if (typeof buf === 'number') {\n    var num = buf;\n    this.fromNumber(num);\n  } else if (buf instanceof BN) {\n    var bn = buf;\n    this.fromBN(bn);\n  } else if (buf) {\n    var obj = buf;\n    this.set(obj);\n  }\n};\n\nVarint.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf;\n  return this;\n};\n\nVarint.prototype.fromString = function (str) {\n  this.set({\n    buf: Buffer.from(str, 'hex')\n  });\n  return this;\n};\n\nVarint.prototype.toString = function () {\n  return this.buf.toString('hex');\n};\n\nVarint.prototype.fromBuffer = function (buf) {\n  this.buf = buf;\n  return this;\n};\n\nVarint.prototype.fromBufferReader = function (br) {\n  this.buf = br.readVarintBuf();\n  return this;\n};\n\nVarint.prototype.fromBN = function (bn) {\n  this.buf = BufferWriter().writeVarintBN(bn).concat();\n  return this;\n};\n\nVarint.prototype.fromNumber = function (num) {\n  this.buf = BufferWriter().writeVarintNum(num).concat();\n  return this;\n};\n\nVarint.prototype.toBuffer = function () {\n  return this.buf;\n};\n\nVarint.prototype.toBN = function () {\n  return BufferReader(this.buf).readVarintBN();\n};\n\nVarint.prototype.toNumber = function () {\n  return BufferReader(this.buf).readVarintNum();\n};\n\nmodule.exports = Varint;","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/node_modules/bitcore-lib-cash/lib/encoding/varint.js"],"names":["BufferWriter","require","BufferReader","BN","Varint","buf","Buffer","isBuffer","num","fromNumber","bn","fromBN","obj","set","prototype","fromString","str","from","toString","fromBuffer","fromBufferReader","br","readVarintBuf","writeVarintBN","concat","writeVarintNum","toBuffer","toBN","readVarintBN","toNumber","readVarintNum","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,cAAD,CAAhB;;AAEA,IAAIG,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAChC,MAAI,EAAE,gBAAgBD,MAAlB,CAAJ,EACE,OAAO,IAAIA,MAAJ,CAAWC,GAAX,CAAP;;AACF,MAAIC,MAAM,CAACC,QAAP,CAAgBF,GAAhB,CAAJ,EAA0B;AACxB,SAAKA,GAAL,GAAWA,GAAX;AACD,GAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC,QAAIG,GAAG,GAAGH,GAAV;AACA,SAAKI,UAAL,CAAgBD,GAAhB;AACD,GAHM,MAGA,IAAIH,GAAG,YAAYF,EAAnB,EAAuB;AAC5B,QAAIO,EAAE,GAAGL,GAAT;AACA,SAAKM,MAAL,CAAYD,EAAZ;AACD,GAHM,MAGA,IAAIL,GAAJ,EAAS;AACd,QAAIO,GAAG,GAAGP,GAAV;AACA,SAAKQ,GAAL,CAASD,GAAT;AACD;AACF,CAfD;;AAiBAR,MAAM,CAACU,SAAP,CAAiBD,GAAjB,GAAuB,UAASD,GAAT,EAAc;AACnC,OAAKP,GAAL,GAAWO,GAAG,CAACP,GAAJ,IAAW,KAAKA,GAA3B;AACA,SAAO,IAAP;AACD,CAHD;;AAKAD,MAAM,CAACU,SAAP,CAAiBC,UAAjB,GAA8B,UAASC,GAAT,EAAc;AAC1C,OAAKH,GAAL,CAAS;AACPR,IAAAA,GAAG,EAAEC,MAAM,CAACW,IAAP,CAAYD,GAAZ,EAAiB,KAAjB;AADE,GAAT;AAGA,SAAO,IAAP;AACD,CALD;;AAOAZ,MAAM,CAACU,SAAP,CAAiBI,QAAjB,GAA4B,YAAW;AACrC,SAAO,KAAKb,GAAL,CAASa,QAAT,CAAkB,KAAlB,CAAP;AACD,CAFD;;AAIAd,MAAM,CAACU,SAAP,CAAiBK,UAAjB,GAA8B,UAASd,GAAT,EAAc;AAC1C,OAAKA,GAAL,GAAWA,GAAX;AACA,SAAO,IAAP;AACD,CAHD;;AAKAD,MAAM,CAACU,SAAP,CAAiBM,gBAAjB,GAAoC,UAASC,EAAT,EAAa;AAC/C,OAAKhB,GAAL,GAAWgB,EAAE,CAACC,aAAH,EAAX;AACA,SAAO,IAAP;AACD,CAHD;;AAKAlB,MAAM,CAACU,SAAP,CAAiBH,MAAjB,GAA0B,UAASD,EAAT,EAAa;AACrC,OAAKL,GAAL,GAAWL,YAAY,GAAGuB,aAAf,CAA6Bb,EAA7B,EAAiCc,MAAjC,EAAX;AACA,SAAO,IAAP;AACD,CAHD;;AAKApB,MAAM,CAACU,SAAP,CAAiBL,UAAjB,GAA8B,UAASD,GAAT,EAAc;AAC1C,OAAKH,GAAL,GAAWL,YAAY,GAAGyB,cAAf,CAA8BjB,GAA9B,EAAmCgB,MAAnC,EAAX;AACA,SAAO,IAAP;AACD,CAHD;;AAKApB,MAAM,CAACU,SAAP,CAAiBY,QAAjB,GAA4B,YAAW;AACrC,SAAO,KAAKrB,GAAZ;AACD,CAFD;;AAIAD,MAAM,CAACU,SAAP,CAAiBa,IAAjB,GAAwB,YAAW;AACjC,SAAOzB,YAAY,CAAC,KAAKG,GAAN,CAAZ,CAAuBuB,YAAvB,EAAP;AACD,CAFD;;AAIAxB,MAAM,CAACU,SAAP,CAAiBe,QAAjB,GAA4B,YAAW;AACrC,SAAO3B,YAAY,CAAC,KAAKG,GAAN,CAAZ,CAAuByB,aAAvB,EAAP;AACD,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB","sourcesContent":["'use strict';\n\nvar BufferWriter = require('./bufferwriter');\nvar BufferReader = require('./bufferreader');\nvar BN = require('../crypto/bn');\n\nvar Varint = function Varint(buf) {\n  if (!(this instanceof Varint))\n    return new Varint(buf);\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf;\n  } else if (typeof buf === 'number') {\n    var num = buf;\n    this.fromNumber(num);\n  } else if (buf instanceof BN) {\n    var bn = buf;\n    this.fromBN(bn);\n  } else if (buf) {\n    var obj = buf;\n    this.set(obj);\n  }\n};\n\nVarint.prototype.set = function(obj) {\n  this.buf = obj.buf || this.buf;\n  return this;\n};\n\nVarint.prototype.fromString = function(str) {\n  this.set({\n    buf: Buffer.from(str, 'hex')\n  });\n  return this;\n};\n\nVarint.prototype.toString = function() {\n  return this.buf.toString('hex');\n};\n\nVarint.prototype.fromBuffer = function(buf) {\n  this.buf = buf;\n  return this;\n};\n\nVarint.prototype.fromBufferReader = function(br) {\n  this.buf = br.readVarintBuf();\n  return this;\n};\n\nVarint.prototype.fromBN = function(bn) {\n  this.buf = BufferWriter().writeVarintBN(bn).concat();\n  return this;\n};\n\nVarint.prototype.fromNumber = function(num) {\n  this.buf = BufferWriter().writeVarintNum(num).concat();\n  return this;\n};\n\nVarint.prototype.toBuffer = function() {\n  return this.buf;\n};\n\nVarint.prototype.toBN = function() {\n  return BufferReader(this.buf).readVarintBN();\n};\n\nVarint.prototype.toNumber = function() {\n  return BufferReader(this.buf).readVarintNum();\n};\n\nmodule.exports = Varint;\n"]},"metadata":{},"sourceType":"script"}