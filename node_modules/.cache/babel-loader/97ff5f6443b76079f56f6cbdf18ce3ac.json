{"ast":null,"code":"'use strict';\n\nvar bech32 = require('bech32');\n\nvar decode = function (str) {\n  if (typeof str !== 'string') {\n    throw new Error('Input should be a string');\n  }\n\n  var decoded = bech32.decode(str);\n  return {\n    prefix: decoded.prefix,\n    data: Buffer.from(bech32.fromWords(decoded.words.slice(1))),\n    version: decoded.words[0]\n  };\n};\n\nvar encode = function (prefix, version, data) {\n  if (typeof prefix !== 'string') {\n    throw new Error('Prefix should be a string');\n  }\n\n  if (typeof version !== 'number') {\n    throw new Error('version should be a number');\n  }\n\n  var words = bech32.toWords(data);\n  words.unshift(version);\n  return bech32.encode(prefix, words);\n};\n\nmodule.exports = {\n  decode: decode,\n  encode: encode\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/bridge/node_modules/bitcore-lib/lib/encoding/bech32.js"],"names":["bech32","require","decode","str","Error","decoded","prefix","data","Buffer","from","fromWords","words","slice","version","encode","toWords","unshift","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,MAAM,GAAG,UAASC,GAAT,EAAc;AACzB,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,MAAIC,OAAO,GAAGL,MAAM,CAACE,MAAP,CAAcC,GAAd,CAAd;AACA,SAAO;AACLG,IAAAA,MAAM,EAAED,OAAO,CAACC,MADX;AAELC,IAAAA,IAAI,EAAEC,MAAM,CAACC,IAAP,CAAYT,MAAM,CAACU,SAAP,CAAiBL,OAAO,CAACM,KAAR,CAAcC,KAAd,CAAoB,CAApB,CAAjB,CAAZ,CAFD;AAGLC,IAAAA,OAAO,EAAER,OAAO,CAACM,KAAR,CAAc,CAAd;AAHJ,GAAP;AAKD,CAVD;;AAYA,IAAIG,MAAM,GAAG,UAASR,MAAT,EAAiBO,OAAjB,EAA0BN,IAA1B,EAAgC;AAC5C,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC/B,UAAM,IAAIF,KAAJ,CAAU,2BAAV,CAAN;AACA;;AACD,MAAI,OAAOS,OAAP,KAAmB,QAAvB,EAAiC;AAChC,UAAM,IAAIT,KAAJ,CAAU,4BAAV,CAAN;AACA;;AACA,MAAIO,KAAK,GAAGX,MAAM,CAACe,OAAP,CAAeR,IAAf,CAAZ;AACAI,EAAAA,KAAK,CAACK,OAAN,CAAcH,OAAd;AACD,SAAOb,MAAM,CAACc,MAAP,CAAcR,MAAd,EAAsBK,KAAtB,CAAP;AACA,CAVD;;AAYAM,MAAM,CAACC,OAAP,GAAiB;AAAEhB,EAAAA,MAAM,EAAEA,MAAV;AAAkBY,EAAAA,MAAM,EAAEA;AAA1B,CAAjB","sourcesContent":["'use strict';\n\nvar bech32 = require('bech32');\n\nvar decode = function(str) {\n  if (typeof str !== 'string') {\n    throw new Error('Input should be a string');\n  }\n  var decoded = bech32.decode(str);\n  return {\n    prefix: decoded.prefix,\n    data: Buffer.from(bech32.fromWords(decoded.words.slice(1))),\n    version: decoded.words[0]\n  };\n};\n\nvar encode = function(prefix, version, data) {\n\tif (typeof prefix !== 'string') {\n\t\tthrow new Error('Prefix should be a string');\n\t}\n\tif (typeof version !== 'number') {\n\t\tthrow new Error('version should be a number');\n\t}\n  var words = bech32.toWords(data);\n  words.unshift(version);\n\treturn bech32.encode(prefix, words);\n}\n\nmodule.exports = { decode: decode, encode: encode };\n"]},"metadata":{},"sourceType":"script"}