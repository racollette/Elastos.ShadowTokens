{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar BN = require('../crypto/bn');\n\nvar buffer = require('buffer');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar BufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js'); // Sapling note magic values, copied from src/zcash/Zcash.h\n\n\nvar NOTEENCRYPTION_AUTH_BYTES = 16;\nvar ZC_NOTEPLAINTEXT_LEADING = 1;\nvar ZC_V_SIZE = 8;\nvar ZC_RHO_SIZE = 32;\nvar ZC_R_SIZE = 32;\nvar ZC_MEMO_SIZE = 512;\nvar ZC_DIVERSIFIER_SIZE = 11;\nvar ZC_JUBJUB_POINT_SIZE = 32;\nvar ZC_JUBJUB_SCALAR_SIZE = 32;\nvar ZC_NOTEPLAINTEXT_SIZE = ZC_NOTEPLAINTEXT_LEADING + ZC_V_SIZE + ZC_RHO_SIZE + ZC_R_SIZE + ZC_MEMO_SIZE;\nvar ZC_SAPLING_ENCPLAINTEXT_SIZE = ZC_NOTEPLAINTEXT_LEADING + ZC_DIVERSIFIER_SIZE + ZC_V_SIZE + ZC_R_SIZE + ZC_MEMO_SIZE;\nvar ZC_SAPLING_OUTPLAINTEXT_SIZE = ZC_JUBJUB_POINT_SIZE + ZC_JUBJUB_SCALAR_SIZE;\nvar ZC_SAPLING_ENCCIPHERTEXT_SIZE = ZC_SAPLING_ENCPLAINTEXT_SIZE + NOTEENCRYPTION_AUTH_BYTES;\nvar ZC_SAPLING_OUTCIPHERTEXT_SIZE = ZC_SAPLING_OUTPLAINTEXT_SIZE + NOTEENCRYPTION_AUTH_BYTES;\n\nfunction OutputDescription(params) {\n  if (!(this instanceof OutputDescription)) {\n    return new OutputDescription(params);\n  }\n\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nOutputDescription.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj));\n  var outputdesc = new OutputDescription();\n  return outputdesc._fromObject(obj);\n};\n\nOutputDescription.prototype._fromObject = function (params) {\n  // TODO: Populate from parameters, but for now it's ok to do nothing.\n  return this;\n};\n\nOutputDescription.prototype.toObject = OutputDescription.prototype.toJSON = function toObject() {\n  // TODO: Populate JSON object, but for now it's ok to return a placeholder.\n  var obj = {};\n  return obj;\n};\n\nOutputDescription.fromBufferReader = function (br) {\n  var obj = new OutputDescription();\n  obj.cv = br.read(32);\n  obj.cmu = br.read(32);\n  obj.ephemeralKey = br.read(32);\n  obj.encCipherText = br.read(ZC_SAPLING_ENCCIPHERTEXT_SIZE);\n  obj.outCipherText = br.read(ZC_SAPLING_OUTCIPHERTEXT_SIZE);\n  obj.proof = br.read(48 + 96 + 48);\n  return obj;\n};\n\nOutputDescription.prototype.toBufferWriter = function (writer) {\n  var i;\n\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  writer.write(this.cv);\n  writer.write(this.cmu);\n  writer.write(this.ephemeralKey);\n  writer.write(this.encCipherText);\n  writer.write(this.outCipherText);\n  writer.write(this.proof);\n  return writer;\n};\n\nmodule.exports = OutputDescription;","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken/node_modules/bitcore-lib-zcash/lib/transaction/outputdescription.js"],"names":["_","require","$","BN","buffer","BufferWriter","BufferUtil","JSUtil","NOTEENCRYPTION_AUTH_BYTES","ZC_NOTEPLAINTEXT_LEADING","ZC_V_SIZE","ZC_RHO_SIZE","ZC_R_SIZE","ZC_MEMO_SIZE","ZC_DIVERSIFIER_SIZE","ZC_JUBJUB_POINT_SIZE","ZC_JUBJUB_SCALAR_SIZE","ZC_NOTEPLAINTEXT_SIZE","ZC_SAPLING_ENCPLAINTEXT_SIZE","ZC_SAPLING_OUTPLAINTEXT_SIZE","ZC_SAPLING_ENCCIPHERTEXT_SIZE","ZC_SAPLING_OUTCIPHERTEXT_SIZE","OutputDescription","params","_fromObject","fromObject","obj","checkArgument","isObject","outputdesc","prototype","toObject","toJSON","fromBufferReader","br","cv","read","cmu","ephemeralKey","encCipherText","outCipherText","proof","toBufferWriter","writer","i","write","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar BN = require('../crypto/bn');\nvar buffer = require('buffer');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar BufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\n\n// Sapling note magic values, copied from src/zcash/Zcash.h\nvar NOTEENCRYPTION_AUTH_BYTES = 16;\nvar ZC_NOTEPLAINTEXT_LEADING = 1;\nvar ZC_V_SIZE = 8;\nvar ZC_RHO_SIZE = 32;\nvar ZC_R_SIZE = 32;\nvar ZC_MEMO_SIZE = 512;\nvar ZC_DIVERSIFIER_SIZE = 11;\nvar ZC_JUBJUB_POINT_SIZE = 32;\nvar ZC_JUBJUB_SCALAR_SIZE = 32;\nvar ZC_NOTEPLAINTEXT_SIZE = ZC_NOTEPLAINTEXT_LEADING + ZC_V_SIZE + ZC_RHO_SIZE + ZC_R_SIZE + ZC_MEMO_SIZE;\nvar ZC_SAPLING_ENCPLAINTEXT_SIZE = ZC_NOTEPLAINTEXT_LEADING + ZC_DIVERSIFIER_SIZE + ZC_V_SIZE + ZC_R_SIZE + ZC_MEMO_SIZE;\nvar ZC_SAPLING_OUTPLAINTEXT_SIZE = ZC_JUBJUB_POINT_SIZE + ZC_JUBJUB_SCALAR_SIZE;\nvar ZC_SAPLING_ENCCIPHERTEXT_SIZE = ZC_SAPLING_ENCPLAINTEXT_SIZE + NOTEENCRYPTION_AUTH_BYTES;\nvar ZC_SAPLING_OUTCIPHERTEXT_SIZE = ZC_SAPLING_OUTPLAINTEXT_SIZE + NOTEENCRYPTION_AUTH_BYTES;\n\nfunction OutputDescription(params) {\n  if (!(this instanceof OutputDescription)) {\n    return new OutputDescription(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nOutputDescription.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var outputdesc = new OutputDescription();\n  return outputdesc._fromObject(obj);\n};\n\nOutputDescription.prototype._fromObject = function(params) {\n  // TODO: Populate from parameters, but for now it's ok to do nothing.\n  return this;\n};\n\nOutputDescription.prototype.toObject = OutputDescription.prototype.toJSON = function toObject() {\n  // TODO: Populate JSON object, but for now it's ok to return a placeholder.\n  var obj = {};\n  return obj;\n};\n\nOutputDescription.fromBufferReader = function(br) {\n  var obj = new OutputDescription();\n  obj.cv = br.read(32);\n  obj.cmu = br.read(32);\n  obj.ephemeralKey = br.read(32);\n  obj.encCipherText = br.read(ZC_SAPLING_ENCCIPHERTEXT_SIZE);\n  obj.outCipherText = br.read(ZC_SAPLING_OUTCIPHERTEXT_SIZE);\n  obj.proof = br.read(48 + 96 + 48);\n  return obj;\n};\n\nOutputDescription.prototype.toBufferWriter = function(writer) {\n  var i;\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.write(this.cv);\n  writer.write(this.cmu);\n  writer.write(this.ephemeralKey);\n  writer.write(this.encCipherText);\n  writer.write(this.outCipherText);\n  writer.write(this.proof);\n  return writer;\n};\n\nmodule.exports = OutputDescription;\n"]},"metadata":{},"sourceType":"script"}