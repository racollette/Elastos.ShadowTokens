{"ast":null,"code":"var cryptoUtils = require('./crypto/utils');\n\nvar baseX = require('base-x');\n\nvar ALLOWED_CHARS = '13456789abcdefghijkmnopqrstuwxyz';\nvar codec = baseX(ALLOWED_CHARS); // https://github.com/nanocurrency/raiblocks/wiki/Accounts,-Keys,-Seeds,-and-Wallet-Identifiers\n\nvar regexp = new RegExp('^(xrb|nano)_([' + ALLOWED_CHARS + ']{60})$');\nmodule.exports = {\n  isValidAddress: function (address) {\n    if (regexp.test(address)) {\n      return this.verifyChecksum(address);\n    }\n\n    return false;\n  },\n  verifyChecksum: function (address) {\n    var bytes = codec.decode(regexp.exec(address)[2]).slice(-37); // https://github.com/nanocurrency/raiblocks/blob/master/rai/lib/numbers.cpp#L73\n\n    var computedChecksum = cryptoUtils.blake2b(cryptoUtils.toHex(bytes.slice(0, -5)), 5);\n    var checksum = cryptoUtils.toHex(bytes.slice(-5).reverse());\n    return computedChecksum === checksum;\n  }\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/node_modules/wallet-address-validator/src/nano_validator.js"],"names":["cryptoUtils","require","baseX","ALLOWED_CHARS","codec","regexp","RegExp","module","exports","isValidAddress","address","test","verifyChecksum","bytes","decode","exec","slice","computedChecksum","blake2b","toHex","checksum","reverse"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIE,aAAa,GAAG,kCAApB;AAEA,IAAIC,KAAK,GAAGF,KAAK,CAACC,aAAD,CAAjB,C,CACA;;AACA,IAAIE,MAAM,GAAG,IAAIC,MAAJ,CAAW,mBAAmBH,aAAnB,GAAmC,SAA9C,CAAb;AAEAI,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,cAAc,EAAE,UAAUC,OAAV,EAAmB;AAC/B,QAAIL,MAAM,CAACM,IAAP,CAAYD,OAAZ,CAAJ,EAA0B;AACtB,aAAO,KAAKE,cAAL,CAAoBF,OAApB,CAAP;AACH;;AAED,WAAO,KAAP;AACH,GAPY;AASbE,EAAAA,cAAc,EAAE,UAAUF,OAAV,EAAmB;AAC/B,QAAIG,KAAK,GAAGT,KAAK,CAACU,MAAN,CAAaT,MAAM,CAACU,IAAP,CAAYL,OAAZ,EAAqB,CAArB,CAAb,EAAsCM,KAAtC,CAA4C,CAAC,EAA7C,CAAZ,CAD+B,CAE/B;;AACA,QAAIC,gBAAgB,GAAGjB,WAAW,CAACkB,OAAZ,CAAoBlB,WAAW,CAACmB,KAAZ,CAAkBN,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAlB,CAApB,EAA2D,CAA3D,CAAvB;AACA,QAAII,QAAQ,GAAGpB,WAAW,CAACmB,KAAZ,CAAkBN,KAAK,CAACG,KAAN,CAAY,CAAC,CAAb,EAAgBK,OAAhB,EAAlB,CAAf;AAEA,WAAOJ,gBAAgB,KAAKG,QAA5B;AACH;AAhBY,CAAjB","sourcesContent":["var cryptoUtils = require('./crypto/utils');\nvar baseX = require('base-x');\n\nvar ALLOWED_CHARS = '13456789abcdefghijkmnopqrstuwxyz';\n\nvar codec = baseX(ALLOWED_CHARS);\n// https://github.com/nanocurrency/raiblocks/wiki/Accounts,-Keys,-Seeds,-and-Wallet-Identifiers\nvar regexp = new RegExp('^(xrb|nano)_([' + ALLOWED_CHARS + ']{60})$');\n\nmodule.exports = {\n    isValidAddress: function (address) {\n        if (regexp.test(address)) {\n            return this.verifyChecksum(address);\n        }\n\n        return false;\n    },\n\n    verifyChecksum: function (address) {\n        var bytes = codec.decode(regexp.exec(address)[2]).slice(-37);\n        // https://github.com/nanocurrency/raiblocks/blob/master/rai/lib/numbers.cpp#L73\n        var computedChecksum = cryptoUtils.blake2b(cryptoUtils.toHex(bytes.slice(0, -5)), 5);\n        var checksum = cryptoUtils.toHex(bytes.slice(-5).reverse());\n\n        return computedChecksum === checksum\n    }\n};\n"]},"metadata":{},"sourceType":"script"}