{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUTXO = exports.getConfirmations = exports.getUTXOs = exports.BTCHandler = exports._apiFallbacks = void 0;\n\nconst bitcoin = __importStar(require(\"bitgo-utxo-lib\"));\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nconst immutable_1 = require(\"immutable\");\n\nconst blockchair_1 = require(\"../../common/apis/blockchair\");\n\nconst blockstream_1 = require(\"../../common/apis/blockstream\");\n\nconst sochain_1 = require(\"../../common/apis/sochain\");\n\nconst bitgoUtxoLib_1 = require(\"../../common/libraries/bitgoUtxoLib\");\n\nconst confirmations_1 = require(\"../../lib/confirmations\");\n\nconst promiEvent_1 = require(\"../../lib/promiEvent\");\n\nconst retry_1 = require(\"../../lib/retry\");\n\nconst utils_1 = require(\"../../lib/utils\");\n\nexports._apiFallbacks = {\n  fetchConfirmations: (testnet, txHash) => [...utils_1.shuffleArray([() => blockstream_1.Blockstream.fetchConfirmations(testnet)(txHash), () => blockchair_1.Blockchair.fetchConfirmations(testnet ? blockchair_1.Blockchair.networks.BITCOIN_TESTNET : blockchair_1.Blockchair.networks.BITCOIN)(txHash)])],\n  fetchUTXO: (testnet, txHash, vOut) => [...utils_1.shuffleArray([() => blockstream_1.Blockstream.fetchUTXO(testnet)(txHash, vOut), () => blockchair_1.Blockchair.fetchUTXO(testnet ? blockchair_1.Blockchair.networks.BITCOIN_TESTNET : blockchair_1.Blockchair.networks.BITCOIN)(txHash, vOut)])],\n  fetchUTXOs: (testnet, address, confirmations) => [...utils_1.shuffleArray([() => blockstream_1.Blockstream.fetchUTXOs(testnet)(address, confirmations), () => blockchair_1.Blockchair.fetchUTXOs(testnet ? blockchair_1.Blockchair.networks.BITCOIN_TESTNET : blockchair_1.Blockchair.networks.BITCOIN)(address, confirmations)]), () => sochain_1.Sochain.fetchUTXOs(testnet ? \"BTCTEST\" : \"BTC\")(address, confirmations)],\n  broadcastTransaction: (testnet, hex) => [...utils_1.shuffleArray([() => blockstream_1.Blockstream.broadcastTransaction(testnet)(hex), () => blockchair_1.Blockchair.broadcastTransaction(testnet ? blockchair_1.Blockchair.networks.BITCOIN_TESTNET : blockchair_1.Blockchair.networks.BITCOIN)(hex)]), () => sochain_1.Sochain.broadcastTransaction(testnet ? \"BTCTEST\" : \"BTC\")(hex)]\n};\n\nclass BTCHandler {\n  constructor(privateKey, network) {\n    this.decimals = 8; // Returns whether or not this can handle the asset\n\n    this.handlesAsset = asset => typeof asset === \"string\" && [\"BTC\", \"BITCOIN\"].indexOf(asset.toUpperCase()) !== -1;\n\n    this.address = async (asset, options) => this.privateKey.getAddress(); // Balance\n\n\n    this.getBalance = async (asset, options) => (await this.getBalanceInSats(asset, options)).dividedBy(new bignumber_js_1.default(10).exponentiatedBy(this.decimals));\n\n    this.getBalanceInSats = async (asset, options) => {\n      const utxos = await exports.getUTXOs(this.testnet, Object.assign(Object.assign({}, options), {\n        address: options && options.address || (await this.address(asset))\n      }));\n      return utxos.reduce((sum, utxo) => sum.plus(utxo.amount), new bignumber_js_1.default(0));\n    }; // Transfer\n\n\n    this.send = (to, value, asset, options) => this.sendSats(to, value.times(new bignumber_js_1.default(10).exponentiatedBy(this.decimals)), asset, options);\n\n    this.sendSats = (to, valueIn, asset, options) => {\n      const promiEvent = promiEvent_1.newPromiEvent();\n      let txHash;\n      let errored;\n      (async () => {\n        const fromAddress = await this.address(asset);\n        const changeAddress = fromAddress;\n        const utxos = immutable_1.List(await exports.getUTXOs(this.testnet, Object.assign(Object.assign({}, options), {\n          address: fromAddress\n        }))).sortBy(utxo => utxo.amount).reverse().toArray();\n        const built = await bitgoUtxoLib_1.BitgoUTXOLib.buildUTXO(this.testnet ? bitcoin.networks.testnet : bitcoin.networks.bitcoin, this.privateKey, changeAddress, to, valueIn, utxos, options);\n        txHash = await retry_1.retryNTimes(() => retry_1.fallback(exports._apiFallbacks.broadcastTransaction(this.testnet, built.toHex())), 3);\n        promiEvent.emit('transactionHash', txHash);\n        promiEvent.resolve(txHash);\n      })().catch(error => {\n        errored = true;\n        promiEvent.reject(error);\n      });\n      confirmations_1.subscribeToConfirmations(promiEvent, () => errored, async () => txHash ? this._getConfirmations(txHash) : 0);\n      return promiEvent;\n    };\n\n    this._getConfirmations = txHash => retry_1.retryNTimes(() => retry_1.fallback(exports._apiFallbacks.fetchConfirmations(this.testnet, txHash)), 2);\n\n    this.testnet = network !== \"mainnet\";\n    this.privateKey = bitgoUtxoLib_1.BitgoUTXOLib.loadPrivateKey(this.testnet ? bitcoin.networks.testnet : bitcoin.networks.bitcoin, privateKey);\n  }\n\n}\n\nexports.BTCHandler = BTCHandler;\n\nexports.getUTXOs = async (testnet, options) => {\n  const confirmations = options && options.confirmations !== undefined ? options.confirmations : 0;\n\n  const endpoints = exports._apiFallbacks.fetchUTXOs(testnet, options.address, confirmations);\n\n  return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};\n\nexports.getConfirmations = async (testnet, txHash) => {\n  const endpoints = exports._apiFallbacks.fetchConfirmations(testnet, txHash);\n\n  return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};\n\nexports.getUTXO = async (testnet, txHash, vOut) => {\n  const endpoints = exports._apiFallbacks.fetchUTXO(testnet, txHash, vOut);\n\n  return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};","map":{"version":3,"sources":["../../../../src/handlers/BTC/BTCHandler.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUTXO = exports.getConfirmations = exports.getUTXOs = exports.BTCHandler = exports._apiFallbacks = void 0;\nconst bitcoin = __importStar(require(\"bitgo-utxo-lib\"));\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst immutable_1 = require(\"immutable\");\nconst blockchair_1 = require(\"../../common/apis/blockchair\");\nconst blockstream_1 = require(\"../../common/apis/blockstream\");\nconst sochain_1 = require(\"../../common/apis/sochain\");\nconst bitgoUtxoLib_1 = require(\"../../common/libraries/bitgoUtxoLib\");\nconst confirmations_1 = require(\"../../lib/confirmations\");\nconst promiEvent_1 = require(\"../../lib/promiEvent\");\nconst retry_1 = require(\"../../lib/retry\");\nconst utils_1 = require(\"../../lib/utils\");\nexports._apiFallbacks = {\n    fetchConfirmations: (testnet, txHash) => [\n        ...utils_1.shuffleArray([\n            () => blockstream_1.Blockstream.fetchConfirmations(testnet)(txHash),\n            () => blockchair_1.Blockchair.fetchConfirmations(testnet ? blockchair_1.Blockchair.networks.BITCOIN_TESTNET : blockchair_1.Blockchair.networks.BITCOIN)(txHash),\n        ]),\n    ],\n    fetchUTXO: (testnet, txHash, vOut) => [\n        ...utils_1.shuffleArray([\n            () => blockstream_1.Blockstream.fetchUTXO(testnet)(txHash, vOut),\n            () => blockchair_1.Blockchair.fetchUTXO(testnet ? blockchair_1.Blockchair.networks.BITCOIN_TESTNET : blockchair_1.Blockchair.networks.BITCOIN)(txHash, vOut),\n        ]),\n    ],\n    fetchUTXOs: (testnet, address, confirmations) => [\n        ...utils_1.shuffleArray([\n            () => blockstream_1.Blockstream.fetchUTXOs(testnet)(address, confirmations),\n            () => blockchair_1.Blockchair.fetchUTXOs(testnet ? blockchair_1.Blockchair.networks.BITCOIN_TESTNET : blockchair_1.Blockchair.networks.BITCOIN)(address, confirmations),\n        ]),\n        () => sochain_1.Sochain.fetchUTXOs(testnet ? \"BTCTEST\" : \"BTC\")(address, confirmations),\n    ],\n    broadcastTransaction: (testnet, hex) => [\n        ...utils_1.shuffleArray([\n            () => blockstream_1.Blockstream.broadcastTransaction(testnet)(hex),\n            () => blockchair_1.Blockchair.broadcastTransaction(testnet ? blockchair_1.Blockchair.networks.BITCOIN_TESTNET : blockchair_1.Blockchair.networks.BITCOIN)(hex),\n        ]),\n        () => sochain_1.Sochain.broadcastTransaction(testnet ? \"BTCTEST\" : \"BTC\")(hex),\n    ],\n};\nclass BTCHandler {\n    constructor(privateKey, network) {\n        this.decimals = 8;\n        // Returns whether or not this can handle the asset\n        this.handlesAsset = (asset) => typeof asset === \"string\" && [\"BTC\", \"BITCOIN\"].indexOf(asset.toUpperCase()) !== -1;\n        this.address = async (asset, options) => this.privateKey.getAddress();\n        // Balance\n        this.getBalance = async (asset, options) => (await this.getBalanceInSats(asset, options)).dividedBy(new bignumber_js_1.default(10).exponentiatedBy(this.decimals));\n        this.getBalanceInSats = async (asset, options) => {\n            const utxos = await exports.getUTXOs(this.testnet, Object.assign(Object.assign({}, options), { address: options && options.address || await this.address(asset) }));\n            return utxos.reduce((sum, utxo) => sum.plus(utxo.amount), new bignumber_js_1.default(0));\n        };\n        // Transfer\n        this.send = (to, value, asset, options) => this.sendSats(to, value.times(new bignumber_js_1.default(10).exponentiatedBy(this.decimals)), asset, options);\n        this.sendSats = (to, valueIn, asset, options) => {\n            const promiEvent = promiEvent_1.newPromiEvent();\n            let txHash;\n            let errored;\n            (async () => {\n                const fromAddress = await this.address(asset);\n                const changeAddress = fromAddress;\n                const utxos = immutable_1.List(await exports.getUTXOs(this.testnet, Object.assign(Object.assign({}, options), { address: fromAddress }))).sortBy(utxo => utxo.amount).reverse().toArray();\n                const built = await bitgoUtxoLib_1.BitgoUTXOLib.buildUTXO(this.testnet ? bitcoin.networks.testnet : bitcoin.networks.bitcoin, this.privateKey, changeAddress, to, valueIn, utxos, options);\n                txHash = await retry_1.retryNTimes(() => retry_1.fallback(exports._apiFallbacks.broadcastTransaction(this.testnet, built.toHex())), 3);\n                promiEvent.emit('transactionHash', txHash);\n                promiEvent.resolve(txHash);\n            })().catch((error) => { errored = true; promiEvent.reject(error); });\n            confirmations_1.subscribeToConfirmations(promiEvent, () => errored, async () => txHash ? this._getConfirmations(txHash) : 0);\n            return promiEvent;\n        };\n        this._getConfirmations = (txHash) => retry_1.retryNTimes(() => retry_1.fallback(exports._apiFallbacks.fetchConfirmations(this.testnet, txHash)), 2);\n        this.testnet = network !== \"mainnet\";\n        this.privateKey = bitgoUtxoLib_1.BitgoUTXOLib.loadPrivateKey(this.testnet ? bitcoin.networks.testnet : bitcoin.networks.bitcoin, privateKey);\n    }\n}\nexports.BTCHandler = BTCHandler;\nexports.getUTXOs = async (testnet, options) => {\n    const confirmations = options && options.confirmations !== undefined ? options.confirmations : 0;\n    const endpoints = exports._apiFallbacks.fetchUTXOs(testnet, options.address, confirmations);\n    return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};\nexports.getConfirmations = async (testnet, txHash) => {\n    const endpoints = exports._apiFallbacks.fetchConfirmations(testnet, txHash);\n    return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};\nexports.getUTXO = async (testnet, txHash, vOut) => {\n    const endpoints = exports._apiFallbacks.fetchUTXO(testnet, txHash, vOut);\n    return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQlRDSGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9oYW5kbGVycy9CVEMvQlRDSGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsd0RBQTBDO0FBRTFDLGdFQUFxQztBQUNyQyx5Q0FBaUM7QUFFakMsNkRBQTBEO0FBQzFELCtEQUE0RDtBQUM1RCx1REFBb0Q7QUFDcEQsc0VBQW1FO0FBQ25FLDJEQUFtRTtBQUNuRSxxREFBaUU7QUFDakUsMkNBQXdEO0FBQ3hELDJDQUErQztBQWNsQyxRQUFBLGFBQWEsR0FBRztJQUN6QixrQkFBa0IsRUFBRSxDQUFDLE9BQWdCLEVBQUUsTUFBYyxFQUFFLEVBQUUsQ0FBQztRQUN0RCxHQUFHLG9CQUFZLENBQUM7WUFDWixHQUFHLEVBQUUsQ0FBQyx5QkFBVyxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQztZQUNyRCxHQUFHLEVBQUUsQ0FBQyx1QkFBVSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsdUJBQVUsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyx1QkFBVSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUM7U0FDM0gsQ0FBQztLQUNMO0lBRUQsU0FBUyxFQUFFLENBQUMsT0FBZ0IsRUFBRSxNQUFjLEVBQUUsSUFBWSxFQUFFLEVBQUUsQ0FBQztRQUMzRCxHQUFHLG9CQUFZLENBQUM7WUFDWixHQUFHLEVBQUUsQ0FBQyx5QkFBVyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDO1lBQ2xELEdBQUcsRUFBRSxDQUFDLHVCQUFVLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsdUJBQVUsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyx1QkFBVSxD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"]},"metadata":{},"sourceType":"script"}