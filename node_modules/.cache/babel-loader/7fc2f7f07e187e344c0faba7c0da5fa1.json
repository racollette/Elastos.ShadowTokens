{"ast":null,"code":"import { renChaosnet, renDevnet, renLocalnet, renMainnet, renTestnet } from \"@renproject/contracts\";\nexport const stringToNetwork = network => {\n  if (typeof network === \"string\") {\n    switch (network.toLowerCase()) {\n      case \"\":\n      case \"mainnet\":\n        return renMainnet;\n\n      case \"chaosnet\":\n        return renChaosnet;\n\n      case \"testnet\":\n        return renTestnet;\n\n      case \"devnet\":\n        return renDevnet;\n      // case \"localnet\":\n      //     return localnet;\n\n      default:\n        throw new Error(`Unsupported network \"${network}\"`);\n    }\n  } else if (network === undefined || network === null) {\n    return renMainnet;\n  } else {\n    return network;\n  }\n};\nexport const NetworkDetails = {\n  Mainnet: renMainnet,\n  Chaosnet: renChaosnet,\n  Testnet: renTestnet,\n  Devnet: renDevnet,\n  Localnet: renLocalnet,\n  stringToNetwork\n};","map":{"version":3,"sources":["../../src/networks.ts"],"names":[],"mappings":"AAAA,SACI,WADJ,EAEI,SAFJ,EAGI,WAHJ,EAII,UAJJ,EAMI,UANJ,QAOO,uBAPP;AASA,OAAO,MAAM,eAAe,GACxB,OAD2B,IAER;AACnB,MAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,YAAQ,OAAO,CAAC,WAAR,EAAR;AACI,WAAK,EAAL;AACA,WAAK,SAAL;AACI,eAAO,UAAP;;AACJ,WAAK,UAAL;AACI,eAAO,WAAP;;AACJ,WAAK,SAAL;AACI,eAAO,UAAP;;AACJ,WAAK,QAAL;AACI,eAAO,SAAP;AACJ;AACA;;AACA;AACI,cAAM,IAAI,KAAJ,CAAU,wBAAwB,OAAO,GAAzC,CAAN;AAbR;AAeH,GAhBD,MAgBO,IAAI,OAAO,KAAK,SAAZ,IAAyB,OAAO,KAAK,IAAzC,EAA+C;AAClD,WAAO,UAAP;AACH,GAFM,MAEA;AACH,WAAO,OAAP;AACH;AACJ,CAxBM;AAmCP,OAAO,MAAM,cAAc,GAAmB;AAC1C,EAAA,OAAO,EAAE,UADiC;AAE1C,EAAA,QAAQ,EAAE,WAFgC;AAG1C,EAAA,OAAO,EAAE,UAHiC;AAI1C,EAAA,MAAM,EAAE,SAJkC;AAK1C,EAAA,QAAQ,EAAE,WALgC;AAO1C,EAAA;AAP0C,CAAvC","sourceRoot":"","sourcesContent":["import { renChaosnet, renDevnet, renLocalnet, renMainnet, renTestnet, } from \"@renproject/contracts\";\nexport const stringToNetwork = (network) => {\n    if (typeof network === \"string\") {\n        switch (network.toLowerCase()) {\n            case \"\":\n            case \"mainnet\":\n                return renMainnet;\n            case \"chaosnet\":\n                return renChaosnet;\n            case \"testnet\":\n                return renTestnet;\n            case \"devnet\":\n                return renDevnet;\n            // case \"localnet\":\n            //     return localnet;\n            default:\n                throw new Error(`Unsupported network \"${network}\"`);\n        }\n    }\n    else if (network === undefined || network === null) {\n        return renMainnet;\n    }\n    else {\n        return network;\n    }\n};\nexport const NetworkDetails = {\n    Mainnet: renMainnet,\n    Chaosnet: renChaosnet,\n    Testnet: renTestnet,\n    Devnet: renDevnet,\n    Localnet: renLocalnet,\n    stringToNetwork,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV0d29ya3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbmV0d29ya3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILFdBQVcsRUFDWCxTQUFTLEVBQ1QsV0FBVyxFQUNYLFVBQVUsRUFFVixVQUFVLEdBQ2IsTUFBTSx1QkFBdUIsQ0FBQztBQUUvQixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsQ0FDM0IsT0FBdUQsRUFDdEMsRUFBRTtJQUNuQixJQUFJLE9BQU8sT0FBTyxLQUFLLFFBQVEsRUFBRTtRQUM3QixRQUFRLE9BQU8sQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUMzQixLQUFLLEVBQUUsQ0FBQztZQUNSLEtBQUssU0FBUztnQkFDVixPQUFPLFVBQVUsQ0FBQztZQUN0QixLQUFLLFVBQVU7Z0JBQ1gsT0FBTyxXQUFXLENBQUM7WUFDdkIsS0FBSyxTQUFTO2dCQUNWLE9BQU8sVUFBVSxDQUFDO1lBQ3RCLEtBQUssUUFBUTtnQkFDVCxPQUFPLFNBQVMsQ0FBQztZQUNyQixtQkFBbUI7WUFDbkIsdUJBQXVCO1lBQ3ZCO2dCQUNJLE1BQU0sSUFBSSxLQUFLLENBQUMsd0JBQXdCLE9BQU8sR0FBRyxDQUFDLENBQUM7U0FDM0Q7S0FDSjtTQUFNLElBQUksT0FBTyxLQUFLLFNBQVMsSUFBSSxPQUFPLEtBQUssSUFBSSxFQUFFO1FBQ2xELE9BQU8sVUFBVSxDQUFDO0tBQ3JCO1NBQU07UUFDSCxPQUFPLE9BQU8sQ0FBQztLQUNsQjtBQUNMLENBQUMsQ0FBQztBQVdGLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBbUI7SUFDMUMsT0FBTyxFQUFFLFVBQVU7SUFDbkIsUUFBUSxFQUFFLFdBQVc7SUFDckIsT0FBTyxFQUFFLFVBQVU7SUFDbkIsTUFBTSxFQUFFLFNBQVM7SUFDakIsUUFBUSxFQUFFLFdBQVc7SUFFckIsZUFBZTtDQUNsQixDQUFDIn0="]},"metadata":{},"sourceType":"module"}