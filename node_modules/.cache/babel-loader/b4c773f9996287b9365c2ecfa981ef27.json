{"ast":null,"code":"import * as Sentry from \"@sentry/react\";\nimport Web3 from \"web3\";\nimport GatewayJS from \"@renproject/gateway\"; // import Box from '3box'\n\nimport Web3Modal from \"web3modal\";\nimport firebase from \"firebase\";\nimport MEWconnect from \"@myetherwallet/mewconnect-web-client\";\nimport BCH from \"../assets/bch.png\";\nimport BTC from \"../assets/btc.png\";\nimport DAI from \"../assets/dai.png\";\nimport ETH from \"../assets/eth.png\";\nimport RENBCH from \"../assets/renBCH.svg\";\nimport RENBTC from \"../assets/renBTC.svg\";\nimport RENZEC from \"../assets/renZEC.svg\";\nimport USDC from \"../assets/usdc.png\";\nimport WBTC from \"../assets/wbtc.png\";\nimport ZEC from \"../assets/zec.svg\";\nimport { getStore } from \"../services/storeService\";\nimport erc20ABI from \"./erc20ABI.json\";\nimport { recoverTrades } from \"./txUtils\";\nimport { RENBCH_MAIN, RENBCH_TEST, RENBTC_MAIN, RENBTC_TEST, RENZEC_MAIN, RENZEC_TEST } from \"./web3Utils\"; // used for montoring balances\n\nlet walletDataInterval = null;\nexport const ASSETS = [\"BTC\", \"WBTC\"];\nexport const NAME_MAP = {\n  btc: \"Bitcoin\",\n  eth: \"Ethereum\",\n  zec: \"Zcash\",\n  bch: \"Bitcoin Cash\",\n  dai: \"DAI\",\n  usdc: \"USDC\",\n  wbtc: \"Wrapped Bitcoin\",\n  renbtc: \"Ren Bitcoin\",\n  renzec: \"Ren Zcash\",\n  renbch: \"Ren Bitcoin Cash\"\n};\nexport const SYMBOL_MAP = {\n  btc: \"BTC\",\n  eth: \"ETH\",\n  zec: \"ZEC\",\n  bch: \"BCH\",\n  dai: \"DAI\",\n  usdc: \"USDC\",\n  wbtc: \"WBTC\",\n  renbtc: \"renBTC\",\n  renzec: \"renZEC\",\n  renbch: \"renBCH\"\n};\nexport const NETWORK_MAP = {\n  btc: \"bitcoin\",\n  eth: \"ethereum\",\n  zec: \"zcash\",\n  bch: \"bitcoin-cash\",\n  dai: \"ethereum\",\n  usdc: \"ethereum\",\n  wbtc: \"ethereum\",\n  renbtc: \"ethereum\",\n  renzec: \"ethereum\",\n  renbch: \"ethereum\"\n};\nexport const MINI_ICON_MAP = {\n  btc: BTC,\n  eth: ETH,\n  zec: ZEC,\n  bch: BCH,\n  dai: DAI,\n  usdc: USDC,\n  wbtc: WBTC,\n  renbtc: RENBTC,\n  renzec: RENZEC,\n  renbch: RENBCH\n};\nexport const abbreviateAddress = function (walletAddress) {\n  if (!walletAddress || typeof walletAddress !== \"string\") {\n    return \"\";\n  } else {\n    return walletAddress.slice(0, 5) + \"...\" + walletAddress.slice(walletAddress.length - 5);\n  }\n};\n/**\n * Get External Data for Fees, Balances, etc.\n */\n\nexport const updateFees = async function () {\n  const store = getStore();\n\n  try {\n    const fees = await fetch(\"https://lightnode-mainnet.herokuapp.com\", {\n      method: \"POST\",\n      // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: 67,\n        jsonrpc: \"2.0\",\n        method: \"ren_queryFees\",\n        params: {}\n      })\n    });\n    const data = (await fees.json()).result;\n    store.set(\"fees\", data);\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"updating fees\");\n      Sentry.captureException(e);\n    });\n  }\n};\nexport const updateMarketData = async function () {\n  const store = getStore();\n\n  try {\n    const btc = await fetch(`https://api.coincap.io/v2/assets/bitcoin`, {\n      method: \"GET\"\n    });\n    store.set(\"btcusd\", (await btc.json()).data.priceUsd);\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"updating market data\");\n      Sentry.captureException(e);\n    });\n  }\n\n  try {\n    const zec = await fetch(`https://api.coincap.io/v2/assets/zcash`, {\n      method: \"GET\"\n    });\n    store.set(\"zecusd\", (await zec.json()).data.priceUsd);\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"updating market data\");\n      Sentry.captureException(e);\n    });\n  }\n\n  try {\n    const bch = await fetch(`https://api.coincap.io/v2/assets/bitcoin-cash`, {\n      method: \"GET\"\n    });\n    store.set(\"bchusd\", (await bch.json()).data.priceUsd);\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"updating market data\");\n      Sentry.captureException(e);\n    });\n  }\n};\nexport const updateBalance = async function () {\n  const store = getStore();\n  const web3 = store.get(\"localWeb3\");\n  const walletAddress = store.get(\"localWeb3Address\");\n  const renBTCAddress = store.get(\"renBTCAddress\");\n  const renZECAddress = store.get(\"renZECAddress\");\n  const renBCHAddress = store.get(\"renBCHAddress\");\n\n  if (!web3 || !walletAddress) {\n    return;\n  }\n\n  const renBTC = new web3.eth.Contract(erc20ABI, renBTCAddress);\n  const renZEC = new web3.eth.Contract(erc20ABI, renZECAddress);\n  const renBCH = new web3.eth.Contract(erc20ABI, renBCHAddress);\n  const renBTCBalance = await renBTC.methods.balanceOf(walletAddress).call();\n  const renZECBalance = await renZEC.methods.balanceOf(walletAddress).call();\n  const renBCHBalance = await renBCH.methods.balanceOf(walletAddress).call();\n  const ethBal = await web3.eth.getBalance(walletAddress);\n  store.set(\"ethBalance\", Number(web3.utils.fromWei(ethBal)).toFixed(8));\n  store.set(\"renBTCBalance\", Number(parseInt(renBTCBalance.toString()) / 10 ** 8).toFixed(8));\n  store.set(\"renZECBalance\", Number(parseInt(renZECBalance.toString()) / 10 ** 8).toFixed(8));\n  store.set(\"renBCHBalance\", Number(parseInt(renBCHBalance.toString()) / 10 ** 8).toFixed(8));\n  store.set(\"loadingBalances\", false);\n  updateMarketData();\n};\nexport const watchWalletData = async function () {\n  const store = getStore();\n\n  if (walletDataInterval) {\n    clearInterval(walletDataInterval);\n  } // await updateAllowance()\n\n\n  await updateBalance();\n  walletDataInterval = setInterval(async () => {\n    // await updateAllowance()\n    await updateBalance();\n  }, 10 * 1000);\n};\nexport const initDataWeb3 = async function () {\n  const store = getStore();\n  const network = store.get(\"selectedNetwork\");\n  store.set(\"dataWeb3\", new Web3(`https://${network === \"testnet\" ? \"kovan\" : \"mainnet\"}.infura.io/v3/7117ca7a3c7b4b94b24944c1ef0ecec9`));\n};\n/**\n * Connecting to Local Web3 Wallet\n */\n\nexport const initLocalWeb3 = async function (type) {\n  const store = getStore();\n  store.set(\"walletConnecting\", true); // already connected\n\n  if (store.get(\"localWeb3Address\")) {\n    return;\n  }\n\n  store.set(\"spaceError\", false);\n  const selectedNetwork = store.get(\"selectedNetwork\");\n  let web3;\n  let currentProvider;\n  let accounts = [];\n  let network = \"\";\n\n  try {\n    if (type === \"injected\" || !type) {\n      const providerOptions = {};\n      const web3Modal = new Web3Modal({\n        network: selectedNetwork === \"testnet\" ? \"kovan\" : \"mainnet\",\n        cacheProvider: false,\n        providerOptions\n      });\n      const web3Provider = await web3Modal.connect();\n      web3 = new Web3(web3Provider);\n      currentProvider = web3.currentProvider;\n      if (typeof currentProvider === \"string\") return;\n      if (!currentProvider) return;\n      accounts = await web3.eth.getAccounts();\n      const netId = await web3.eth.net.getId();\n\n      if (netId === 1) {\n        network = \"mainnet\";\n      } else if (netId === 42) {\n        network = \"testnet\";\n      }\n    } else if (type === \"mew-connect\") {\n      const chainId = selectedNetwork === \"testnet\" ? 42 : 1;\n      const jsonRpcUrl = `wss://${selectedNetwork === \"testnet\" ? \"kovan\" : \"mainnet\"}.infura.io/ws/v3/7117ca7a3c7b4b94b24944c1ef0ecec9`;\n      const mewConnect = new MEWconnect.Provider({\n        windowClosedError: true\n      });\n      const web3Provider = mewConnect.makeWeb3Provider(chainId, jsonRpcUrl, true);\n      web3 = new Web3(web3Provider);\n      currentProvider = web3.currentProvider;\n      if (typeof currentProvider === \"string\") return;\n      if (!currentProvider) return;\n      accounts = await web3Provider.enable();\n      network = selectedNetwork;\n    } else {\n      console.error(\"Invalid wallet type.\");\n      store.set(\"spaceError\", true);\n      store.set(\"spaceRequesting\", false);\n      store.set(\"walletConnecting\", false);\n      return;\n    }\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"web3 init\");\n      Sentry.captureException(e);\n    });\n    store.set(\"spaceError\", true);\n    store.set(\"spaceRequesting\", false);\n    store.set(\"walletConnecting\", false);\n    return;\n  }\n\n  const address = accounts[0];\n  const addressLowerCase = address.toLowerCase();\n  const db = store.get(\"db\");\n  const fns = store.get(\"fns\");\n\n  if (selectedNetwork !== network) {\n    store.set(\"showNetworkModal\", true);\n    store.set(\"spaceError\", true);\n    store.set(\"spaceRequesting\", false);\n    store.set(\"walletConnecting\", false);\n    return;\n  }\n\n  try {\n    ///////////////////////////////////////////////////////\n    // Firebase Sign In or Sign Up\n    //////////////////////////////////////////////////////\n    let signature = \"\";\n    let rawSig = \"\"; // get from local storage if user has signed in already\n\n    const localSigMap = localStorage.getItem(\"sigMap\");\n    const localRawSigMap = JSON.parse(localStorage.getItem(\"rawSigMap\") || \"{}\");\n    const localSigMapData = localSigMap ? JSON.parse(localSigMap) : {};\n\n    if (localSigMapData[addressLowerCase] && localRawSigMap[addressLowerCase]) {\n      signature = localSigMapData[addressLowerCase];\n      rawSig = localRawSigMap[addressLowerCase];\n    } else {\n      // get unique wallet signature for firebase backup\n      // @ts-ignore\n      rawSig = await web3.eth.personal.sign(web3.utils.utf8ToHex(\"Signing in to RenBridge\"), addressLowerCase);\n      signature = web3.utils.sha3(rawSig);\n      localSigMapData[addressLowerCase] = signature;\n      localStorage.setItem(\"sigMap\", JSON.stringify(localSigMapData));\n      localRawSigMap[addressLowerCase] = rawSig;\n      localStorage.setItem(\"rawSigMap\", JSON.stringify(localRawSigMap));\n    }\n\n    store.set(\"fsSignature\", signature);\n    let token = null;\n\n    try {\n      const res = await fns.httpsCallable(\"authenticate\")({\n        signed: rawSig,\n        account: addressLowerCase\n      });\n      token = res.data.token;\n\n      if (!token) {\n        throw new Error(\"missing token\");\n      }\n    } catch (e) {\n      console.log(\"No token auth, falling back to email / sig\");\n    } // auth with firestore\n\n\n    const bridgeId = `${addressLowerCase}@renproject.io`;\n    const currentFsUser = firebase.auth().currentUser;\n    let fsUser;\n\n    if (!currentFsUser || currentFsUser.email !== bridgeId) {\n      try {\n        fsUser = token ? (await firebase.auth().signInWithCustomToken(token)).user : (await firebase.auth().signInWithEmailAndPassword(bridgeId, signature)).user;\n      } catch (e) {\n        console.error(e); // We can register this user as they do not exist\n\n        if (e.message.includes(\"There is no user record\")) {\n          fsUser = (await firebase.auth().createUserWithEmailAndPassword(bridgeId, signature)).user;\n        } else {\n          console.error(e);\n          Sentry.withScope(function (scope) {\n            scope.setTag(\"error-hint\", \"web3 init\");\n            Sentry.captureException(e);\n          });\n        }\n      }\n    } else {\n      fsUser = currentFsUser;\n    }\n\n    store.set(\"fsUser\", fsUser);\n\n    if (fsUser) {\n      // update user collection\n      const doc = await db.collection(\"users\").doc(fsUser.uid);\n      const docData = await doc.get();\n\n      if (docData.exists) {\n        const data = docData.data();\n\n        if (data.signatures.indexOf(signature) < 0) {\n          // add a new signature if needed\n          await doc.update({\n            signatures: data.signatures.concat([signature]),\n            updated: firebase.firestore.Timestamp.fromDate(new Date(Date.now()))\n          });\n        }\n      } else {\n        // create user\n        await doc.set({\n          uid: fsUser.uid,\n          updated: firebase.firestore.Timestamp.fromDate(new Date(Date.now())),\n          signatures: [signature]\n        });\n      }\n    }\n\n    store.set(\"fsEnabled\", true); ///////////////////////////////////////////////////////\n    // Recover Transactions\n    //////////////////////////////////////////////////////\n\n    store.set(\"localWeb3\", web3);\n    store.set(\"localWeb3Address\", accounts[0]);\n    store.set(\"localWeb3Network\", network);\n    store.set(\"spaceRequesting\", false);\n    store.set(\"walletConnecting\", false);\n    recoverTrades();\n    updateBalance();\n    if ((!currentProvider).on) return; // FIXME: provide propper provider type\n\n    const listeningProvider = currentProvider;\n\n    if (listeningProvider.on) {\n      // listen for changes\n      listeningProvider.on(\"accountsChanged\", async () => {\n        window.location.reload();\n      });\n      listeningProvider.on(\"chainChanged\", async () => {\n        window.location.reload();\n      });\n      listeningProvider.on(\"networkChanged\", async () => {\n        window.location.reload();\n      });\n      listeningProvider.on(\"disconnected\", async () => {\n        window.location.reload();\n      });\n    }\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"main initialization\");\n      Sentry.captureException(e);\n    });\n    store.set(\"spaceError\", true);\n    store.set(\"spaceRequesting\", false);\n    store.set(\"walletConnecting\", false);\n  }\n\n  return;\n};\nexport const setAddresses = async function () {\n  const store = getStore();\n  const network = store.get(\"selectedNetwork\");\n\n  if (network === \"testnet\") {\n    store.set(\"renBTCAddress\", RENBTC_TEST);\n    store.set(\"renZECAddress\", RENZEC_TEST);\n    store.set(\"renBCHAddress\", RENBCH_TEST);\n  } else {\n    store.set(\"renBTCAddress\", RENBTC_MAIN);\n    store.set(\"renZECAddress\", RENZEC_MAIN);\n    store.set(\"renBCHAddress\", RENBCH_MAIN);\n  }\n};\nexport const setNetwork = async function (network) {\n  const store = getStore();\n  store.set(\"selectedNetwork\", network);\n  store.set(\"gjs\", new GatewayJS(network, {// If we want to test against gatewayjs staging, we should change the endpoint\n    // manually in a PR, which does not get merged, and check the preview build\n    // endpoint: \"https://ren-gatewayjs-staging.netlify.app/\",\n  })); // @ts-ignore\n\n  setAddresses.bind(this)();\n};\nexport default {};","map":{"version":3,"sources":["/home/ryan/dev/defi/bridge/src/utils/walletUtils.ts"],"names":["Sentry","Web3","GatewayJS","Web3Modal","firebase","MEWconnect","BCH","BTC","DAI","ETH","USDC","WBTC","getStore","erc20ABI","recoverTrades","RENBCH_MAIN","RENBCH_TEST","RENBTC_MAIN","RENBTC_TEST","RENZEC_MAIN","RENZEC_TEST","walletDataInterval","ASSETS","NAME_MAP","btc","eth","zec","bch","dai","usdc","wbtc","renbtc","renzec","renbch","SYMBOL_MAP","NETWORK_MAP","MINI_ICON_MAP","ZEC","RENBTC","RENZEC","RENBCH","abbreviateAddress","walletAddress","slice","length","updateFees","store","fees","fetch","method","headers","body","JSON","stringify","id","jsonrpc","params","data","json","result","set","e","console","error","withScope","scope","setTag","captureException","updateMarketData","priceUsd","updateBalance","web3","get","renBTCAddress","renZECAddress","renBCHAddress","renBTC","Contract","renZEC","renBCH","renBTCBalance","methods","balanceOf","call","renZECBalance","renBCHBalance","ethBal","getBalance","Number","utils","fromWei","toFixed","parseInt","toString","watchWalletData","clearInterval","setInterval","initDataWeb3","network","initLocalWeb3","type","selectedNetwork","currentProvider","accounts","providerOptions","web3Modal","cacheProvider","web3Provider","connect","getAccounts","netId","net","getId","chainId","jsonRpcUrl","mewConnect","Provider","windowClosedError","makeWeb3Provider","enable","address","addressLowerCase","toLowerCase","db","fns","signature","rawSig","localSigMap","localStorage","getItem","localRawSigMap","parse","localSigMapData","personal","sign","utf8ToHex","sha3","setItem","token","res","httpsCallable","signed","account","Error","log","bridgeId","currentFsUser","auth","currentUser","fsUser","email","signInWithCustomToken","user","signInWithEmailAndPassword","message","includes","createUserWithEmailAndPassword","doc","collection","uid","docData","exists","signatures","indexOf","update","concat","updated","firestore","Timestamp","fromDate","Date","now","on","listeningProvider","window","location","reload","setAddresses","setNetwork","bind"],"mappings":"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","sourcesContent":["import * as Sentry from \"@sentry/react\";\n\nimport Web3 from \"web3\";\nimport GatewayJS from \"@renproject/gateway\";\n// import Box from '3box'\nimport Web3Modal from \"web3modal\";\nimport firebase from \"firebase\";\nimport MEWconnect from \"@myetherwallet/mewconnect-web-client\";\n\nimport BCH from \"../assets/bch.png\";\nimport BTC from \"../assets/btc.png\";\nimport DAI from \"../assets/dai.png\";\nimport ETH from \"../assets/eth.png\";\nimport RENBCH from \"../assets/renBCH.svg\";\nimport RENBTC from \"../assets/renBTC.svg\";\nimport RENZEC from \"../assets/renZEC.svg\";\nimport USDC from \"../assets/usdc.png\";\nimport WBTC from \"../assets/wbtc.png\";\nimport ZEC from \"../assets/zec.svg\";\nimport { getStore } from \"../services/storeService\";\nimport erc20ABI from \"./erc20ABI.json\";\nimport { recoverTrades } from \"./txUtils\";\nimport {\n  RENBCH_MAIN,\n  RENBCH_TEST,\n  RENBTC_MAIN,\n  RENBTC_TEST,\n  RENZEC_MAIN,\n  RENZEC_TEST,\n} from \"./web3Utils\";\n\n// used for montoring balances\nlet walletDataInterval: any = null;\n\nexport const ASSETS = [\"BTC\", \"WBTC\"];\n\nexport const NAME_MAP = {\n  btc: \"Bitcoin\",\n  eth: \"Ethereum\",\n  zec: \"Zcash\",\n  bch: \"Bitcoin Cash\",\n  dai: \"DAI\",\n  usdc: \"USDC\",\n  wbtc: \"Wrapped Bitcoin\",\n  renbtc: \"Ren Bitcoin\",\n  renzec: \"Ren Zcash\",\n  renbch: \"Ren Bitcoin Cash\",\n};\n\nexport const SYMBOL_MAP = {\n  btc: \"BTC\",\n  eth: \"ETH\",\n  zec: \"ZEC\",\n  bch: \"BCH\",\n  dai: \"DAI\",\n  usdc: \"USDC\",\n  wbtc: \"WBTC\",\n  renbtc: \"renBTC\",\n  renzec: \"renZEC\",\n  renbch: \"renBCH\",\n};\n\nexport const NETWORK_MAP = {\n  btc: \"bitcoin\",\n  eth: \"ethereum\",\n  zec: \"zcash\",\n  bch: \"bitcoin-cash\",\n  dai: \"ethereum\",\n  usdc: \"ethereum\",\n  wbtc: \"ethereum\",\n  renbtc: \"ethereum\",\n  renzec: \"ethereum\",\n  renbch: \"ethereum\",\n};\n\nexport const MINI_ICON_MAP: { [key in string]: string } = {\n  btc: BTC,\n  eth: ETH,\n  zec: ZEC,\n  bch: BCH,\n  dai: DAI,\n  usdc: USDC,\n  wbtc: WBTC,\n  renbtc: RENBTC,\n  renzec: RENZEC,\n  renbch: RENBCH,\n};\n\nexport const abbreviateAddress = function (walletAddress: string) {\n  if (!walletAddress || typeof walletAddress !== \"string\") {\n    return \"\";\n  } else {\n    return (\n      walletAddress.slice(0, 5) +\n      \"...\" +\n      walletAddress.slice(walletAddress.length - 5)\n    );\n  }\n};\n\n/**\n * Get External Data for Fees, Balances, etc.\n */\nexport const updateFees = async function () {\n  const store = getStore();\n  try {\n    const fees = await fetch(\"https://lightnode-mainnet.herokuapp.com\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: 67,\n        jsonrpc: \"2.0\",\n        method: \"ren_queryFees\",\n        params: {},\n      }),\n    });\n    const data = (await fees.json()).result;\n    store.set(\"fees\", data);\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"updating fees\");\n      Sentry.captureException(e);\n    });\n  }\n};\n\nexport const updateMarketData = async function () {\n  const store = getStore();\n\n  try {\n    const btc = await fetch(`https://api.coincap.io/v2/assets/bitcoin`, {\n      method: \"GET\",\n    });\n\n    store.set(\"btcusd\", (await btc.json()).data.priceUsd);\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"updating market data\");\n      Sentry.captureException(e);\n    });\n  }\n\n  try {\n    const zec = await fetch(`https://api.coincap.io/v2/assets/zcash`, {\n      method: \"GET\",\n    });\n\n    store.set(\"zecusd\", (await zec.json()).data.priceUsd);\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"updating market data\");\n      Sentry.captureException(e);\n    });\n  }\n\n  try {\n    const bch = await fetch(`https://api.coincap.io/v2/assets/bitcoin-cash`, {\n      method: \"GET\",\n    });\n\n    store.set(\"bchusd\", (await bch.json()).data.priceUsd);\n  } catch (e) {\n    console.error(e);\n\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"updating market data\");\n      Sentry.captureException(e);\n    });\n  }\n};\n\nexport const updateBalance = async function () {\n  const store = getStore();\n\n  const web3 = store.get(\"localWeb3\");\n  const walletAddress = store.get(\"localWeb3Address\");\n  const renBTCAddress = store.get(\"renBTCAddress\");\n  const renZECAddress = store.get(\"renZECAddress\");\n  const renBCHAddress = store.get(\"renBCHAddress\");\n\n  if (!web3 || !walletAddress) {\n    return;\n  }\n\n  const renBTC = new web3.eth.Contract(erc20ABI, renBTCAddress);\n  const renZEC = new web3.eth.Contract(erc20ABI, renZECAddress);\n  const renBCH = new web3.eth.Contract(erc20ABI, renBCHAddress);\n  const renBTCBalance = await renBTC.methods.balanceOf(walletAddress).call();\n  const renZECBalance = await renZEC.methods.balanceOf(walletAddress).call();\n  const renBCHBalance = await renBCH.methods.balanceOf(walletAddress).call();\n  const ethBal = await web3.eth.getBalance(walletAddress);\n\n  store.set(\"ethBalance\", Number(web3.utils.fromWei(ethBal)).toFixed(8));\n  store.set(\n    \"renBTCBalance\",\n    Number(parseInt(renBTCBalance.toString()) / 10 ** 8).toFixed(8)\n  );\n  store.set(\n    \"renZECBalance\",\n    Number(parseInt(renZECBalance.toString()) / 10 ** 8).toFixed(8)\n  );\n  store.set(\n    \"renBCHBalance\",\n    Number(parseInt(renBCHBalance.toString()) / 10 ** 8).toFixed(8)\n  );\n  store.set(\"loadingBalances\", false);\n\n  updateMarketData();\n};\n\nexport const watchWalletData = async function () {\n  const store = getStore();\n  if (walletDataInterval) {\n    clearInterval(walletDataInterval);\n  }\n  // await updateAllowance()\n  await updateBalance();\n  walletDataInterval = setInterval(async () => {\n    // await updateAllowance()\n    await updateBalance();\n  }, 10 * 1000);\n};\n\nexport const initDataWeb3 = async function () {\n  const store = getStore();\n  const network = store.get(\"selectedNetwork\");\n  store.set(\n    \"dataWeb3\",\n    new Web3(\n      `https://${\n        network === \"testnet\" ? \"kovan\" : \"mainnet\"\n      }.infura.io/v3/7117ca7a3c7b4b94b24944c1ef0ecec9`\n    )\n  );\n};\n\n/**\n * Connecting to Local Web3 Wallet\n */\nexport const initLocalWeb3 = async function (type: any) {\n  const store = getStore();\n  store.set(\"walletConnecting\", true);\n\n  // already connected\n  if (store.get(\"localWeb3Address\")) {\n    return;\n  }\n\n  store.set(\"spaceError\", false);\n  const selectedNetwork = store.get(\"selectedNetwork\");\n\n  let web3;\n  let currentProvider;\n  let accounts = [];\n  let network = \"\";\n\n  try {\n    if (type === \"injected\" || !type) {\n      const providerOptions = {};\n      const web3Modal = new Web3Modal({\n        network: selectedNetwork === \"testnet\" ? \"kovan\" : \"mainnet\",\n        cacheProvider: false,\n        providerOptions,\n      });\n      const web3Provider = await web3Modal.connect();\n\n      web3 = new Web3(web3Provider);\n      currentProvider = web3.currentProvider;\n      if (typeof currentProvider === \"string\") return;\n      if (!currentProvider) return;\n      accounts = await web3.eth.getAccounts();\n      const netId = await web3.eth.net.getId();\n      if (netId === 1) {\n        network = \"mainnet\";\n      } else if (netId === 42) {\n        network = \"testnet\";\n      }\n    } else if (type === \"mew-connect\") {\n      const chainId = selectedNetwork === \"testnet\" ? 42 : 1;\n      const jsonRpcUrl = `wss://${\n        selectedNetwork === \"testnet\" ? \"kovan\" : \"mainnet\"\n      }.infura.io/ws/v3/7117ca7a3c7b4b94b24944c1ef0ecec9`;\n\n      const mewConnect = new MEWconnect.Provider({\n        windowClosedError: true,\n      });\n      const web3Provider = mewConnect.makeWeb3Provider(\n        chainId,\n        jsonRpcUrl,\n        true\n      );\n\n      web3 = new Web3(web3Provider);\n      currentProvider = web3.currentProvider;\n\n      if (typeof currentProvider === \"string\") return;\n      if (!currentProvider) return;\n\n      accounts = await web3Provider.enable();\n      network = selectedNetwork;\n    } else {\n      console.error(\"Invalid wallet type.\");\n      store.set(\"spaceError\", true);\n      store.set(\"spaceRequesting\", false);\n      store.set(\"walletConnecting\", false);\n      return;\n    }\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"web3 init\");\n      Sentry.captureException(e);\n    });\n    store.set(\"spaceError\", true);\n    store.set(\"spaceRequesting\", false);\n    store.set(\"walletConnecting\", false);\n    return;\n  }\n\n  const address = accounts[0];\n  const addressLowerCase = address.toLowerCase();\n  const db = store.get(\"db\");\n  const fns = store.get(\"fns\");\n\n  if (selectedNetwork !== network) {\n    store.set(\"showNetworkModal\", true);\n    store.set(\"spaceError\", true);\n    store.set(\"spaceRequesting\", false);\n    store.set(\"walletConnecting\", false);\n    return;\n  }\n\n  try {\n    ///////////////////////////////////////////////////////\n    // Firebase Sign In or Sign Up\n    //////////////////////////////////////////////////////\n\n    let signature = \"\";\n    let rawSig = \"\";\n\n    // get from local storage if user has signed in already\n    const localSigMap = localStorage.getItem(\"sigMap\");\n    const localRawSigMap = JSON.parse(\n      localStorage.getItem(\"rawSigMap\") || \"{}\"\n    );\n    const localSigMapData = localSigMap ? JSON.parse(localSigMap) : {};\n    if (localSigMapData[addressLowerCase] && localRawSigMap[addressLowerCase]) {\n      signature = localSigMapData[addressLowerCase];\n      rawSig = localRawSigMap[addressLowerCase];\n    } else {\n      // get unique wallet signature for firebase backup\n      // @ts-ignore\n      rawSig = await web3.eth.personal.sign(\n        web3.utils.utf8ToHex(\"Signing in to RenBridge\"),\n        addressLowerCase\n      );\n      signature = web3.utils.sha3(rawSig)!;\n      localSigMapData[addressLowerCase] = signature;\n      localStorage.setItem(\"sigMap\", JSON.stringify(localSigMapData));\n\n      localRawSigMap[addressLowerCase] = rawSig;\n      localStorage.setItem(\"rawSigMap\", JSON.stringify(localRawSigMap));\n    }\n\n    store.set(\"fsSignature\", signature);\n\n    let token: string | null = null;\n    try {\n      const res = await fns.httpsCallable(\"authenticate\")({\n        signed: rawSig,\n        account: addressLowerCase,\n      });\n\n      token = res.data.token;\n      if (!token) {\n        throw new Error(\"missing token\");\n      }\n    } catch (e) {\n      console.log(\"No token auth, falling back to email / sig\");\n    }\n\n    // auth with firestore\n    const bridgeId = `${addressLowerCase}@renproject.io`;\n    const currentFsUser = firebase.auth().currentUser;\n    let fsUser;\n\n    if (!currentFsUser || currentFsUser.email !== bridgeId) {\n      try {\n        fsUser = token\n          ? (await firebase.auth().signInWithCustomToken(token)).user\n          : (\n              await firebase\n                .auth()\n                .signInWithEmailAndPassword(bridgeId, signature)\n            ).user;\n      } catch (e) {\n        console.error(e);\n        // We can register this user as they do not exist\n        if (e.message.includes(\"There is no user record\")) {\n          fsUser = (\n            await firebase\n              .auth()\n              .createUserWithEmailAndPassword(bridgeId, signature)\n          ).user;\n        } else {\n          console.error(e);\n          Sentry.withScope(function (scope) {\n            scope.setTag(\"error-hint\", \"web3 init\");\n            Sentry.captureException(e);\n          });\n        }\n      }\n    } else {\n      fsUser = currentFsUser;\n    }\n\n    store.set(\"fsUser\", fsUser);\n\n    if (fsUser) {\n      // update user collection\n      const doc = await db.collection(\"users\").doc(fsUser.uid);\n      const docData = await doc.get();\n\n      if (docData.exists) {\n        const data = docData.data();\n        if (data.signatures.indexOf(signature) < 0) {\n          // add a new signature if needed\n          await doc.update({\n            signatures: data.signatures.concat([signature]),\n            updated: firebase.firestore.Timestamp.fromDate(\n              new Date(Date.now())\n            ),\n          });\n        }\n      } else {\n        // create user\n        await doc.set({\n          uid: fsUser.uid,\n          updated: firebase.firestore.Timestamp.fromDate(new Date(Date.now())),\n          signatures: [signature],\n        });\n      }\n    }\n\n    store.set(\"fsEnabled\", true);\n\n    ///////////////////////////////////////////////////////\n    // Recover Transactions\n    //////////////////////////////////////////////////////\n\n    store.set(\"localWeb3\", web3);\n    store.set(\"localWeb3Address\", accounts[0]);\n    store.set(\"localWeb3Network\", network);\n    store.set(\"spaceRequesting\", false);\n    store.set(\"walletConnecting\", false);\n\n    recoverTrades();\n    updateBalance();\n\n    if ((!currentProvider as any).on) return;\n    // FIXME: provide propper provider type\n    const listeningProvider: any = currentProvider;\n    if (listeningProvider.on) {\n      // listen for changes\n      listeningProvider.on(\"accountsChanged\", async () => {\n        window.location.reload();\n      });\n\n      listeningProvider.on(\"chainChanged\", async () => {\n        window.location.reload();\n      });\n\n      listeningProvider.on(\"networkChanged\", async () => {\n        window.location.reload();\n      });\n\n      listeningProvider.on(\"disconnected\", async () => {\n        window.location.reload();\n      });\n    }\n  } catch (e) {\n    console.error(e);\n    Sentry.withScope(function (scope) {\n      scope.setTag(\"error-hint\", \"main initialization\");\n      Sentry.captureException(e);\n    });\n    store.set(\"spaceError\", true);\n    store.set(\"spaceRequesting\", false);\n    store.set(\"walletConnecting\", false);\n  }\n\n  return;\n};\n\nexport const setAddresses = async function () {\n  const store = getStore();\n  const network = store.get(\"selectedNetwork\");\n  if (network === \"testnet\") {\n    store.set(\"renBTCAddress\", RENBTC_TEST);\n    store.set(\"renZECAddress\", RENZEC_TEST);\n    store.set(\"renBCHAddress\", RENBCH_TEST);\n  } else {\n    store.set(\"renBTCAddress\", RENBTC_MAIN);\n    store.set(\"renZECAddress\", RENZEC_MAIN);\n    store.set(\"renBCHAddress\", RENBCH_MAIN);\n  }\n};\n\nexport const setNetwork = async function (network: any) {\n  const store = getStore();\n  store.set(\"selectedNetwork\", network);\n  store.set(\n    \"gjs\",\n    new GatewayJS(network, {\n      // If we want to test against gatewayjs staging, we should change the endpoint\n      // manually in a PR, which does not get merged, and check the preview build\n      // endpoint: \"https://ren-gatewayjs-staging.netlify.app/\",\n    })\n  );\n  // @ts-ignore\n  setAddresses.bind(this)();\n};\n\nexport default {};\n"]},"metadata":{},"sourceType":"module"}