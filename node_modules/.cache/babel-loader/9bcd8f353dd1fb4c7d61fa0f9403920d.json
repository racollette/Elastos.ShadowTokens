{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Blockchair = exports.broadcastTransaction = void 0;\n\nconst axios_1 = __importDefault(require(\"axios\"));\n\nconst utxo_1 = require(\"../../lib/utxo\");\n\nconst timeout_1 = require(\"./timeout\");\n\nconst fetchUTXO = network => async (txHash, vOut) => {\n  const url = `https://api.blockchair.com/${network}/dashboards/transaction/${txHash}`;\n  const response = (await axios_1.default.get(`${url}`, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  })).data;\n\n  if (!response.data[txHash]) {\n    throw new Error(`Transaction not found.`);\n  }\n\n  const tx = response.data[txHash];\n  const txBlock = tx.transaction.block_id;\n  let latestBlock = response.context.state;\n\n  if (latestBlock === 0) {\n    const statsUrl = `https://api.blockchair.com/${network}/stats`;\n    const statsResponse = (await axios_1.default.get(statsUrl)).data;\n    latestBlock = statsResponse.data.blocks - 1;\n  }\n\n  const confirmations = txBlock === -1 ? 0 : Math.max(latestBlock - txBlock + 1, 0);\n  return {\n    txHash,\n    vOut,\n    amount: tx.outputs[vOut].value,\n    confirmations\n  };\n};\n\nconst fetchConfirmations = network => async txHash => {\n  const url = `https://api.blockchair.com/${network}/dashboards/transaction/${txHash}`;\n  const response = (await axios_1.default.get(`${url}`, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  })).data;\n\n  if (!response.data[txHash]) {\n    throw new Error(`Transaction not found.`);\n  }\n\n  const txBlock = response.data[txHash].transaction.block_id;\n  let latestBlock = response.context.state;\n\n  if (latestBlock === 0) {\n    const statsUrl = `https://api.blockchair.com/${network}/stats`;\n    const statsResponse = (await axios_1.default.get(statsUrl)).data;\n    latestBlock = statsResponse.data.blocks - 1;\n  }\n\n  return txBlock === -1 ? 0 : Math.max(latestBlock - txBlock + 1, 0);\n};\n\nconst fetchUTXOs = network => async (address, confirmations) => {\n  const url = `https://api.blockchair.com/${network}/dashboards/address/${address}?limit=0,100`;\n  const response = (await axios_1.default.get(url, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  })).data;\n  let latestBlock = response.context.state;\n\n  if (latestBlock === 0) {\n    const statsUrl = `https://api.blockchair.com/${network}/stats`;\n    const statsResponse = (await axios_1.default.get(statsUrl)).data;\n    latestBlock = statsResponse.data.blocks - 1;\n  }\n\n  return response.data[address].utxo.map(utxo => ({\n    txHash: utxo.transaction_hash,\n    amount: utxo.value,\n    vOut: utxo.index,\n    confirmations: utxo.block_id === -1 ? 0 : latestBlock - utxo.block_id + 1\n  })).filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations).sort(utxo_1.sortUTXOs);\n};\n\nexports.broadcastTransaction = network => async txHex => {\n  const url = `https://api.blockchair.com/${network}/push/transaction`;\n  const response = await axios_1.default.post(url, {\n    data: txHex\n  }, {\n    timeout: timeout_1.DEFAULT_TIMEOUT\n  });\n\n  if (response.data.error) {\n    throw new Error(response.data.error);\n  }\n\n  return response.data.data.transaction_hash;\n};\n\nvar Networks;\n\n(function (Networks) {\n  Networks[\"BITCOIN\"] = \"bitcoin\";\n  Networks[\"BITCOIN_CASH\"] = \"bitcoin-cash\";\n  Networks[\"LITECOIN\"] = \"litecoin\";\n  Networks[\"BITCOIN_SV\"] = \"bitcoin-sv\";\n  Networks[\"DOGECOIN\"] = \"dogecoin\";\n  Networks[\"DASH\"] = \"dash\";\n  Networks[\"GROESTLCOIN\"] = \"groestlcoin\";\n  Networks[\"BITCOIN_TESTNET\"] = \"bitcoin/testnet\";\n})(Networks || (Networks = {}));\n\nexports.Blockchair = {\n  networks: Networks,\n  fetchUTXO,\n  fetchUTXOs,\n  fetchConfirmations,\n  broadcastTransaction: exports.broadcastTransaction\n};\n;\n;","map":{"version":3,"sources":["../../../../src/common/apis/blockchair.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Blockchair = exports.broadcastTransaction = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst utxo_1 = require(\"../../lib/utxo\");\nconst timeout_1 = require(\"./timeout\");\nconst fetchUTXO = (network) => async (txHash, vOut) => {\n    const url = `https://api.blockchair.com/${network}/dashboards/transaction/${txHash}`;\n    const response = (await axios_1.default.get(`${url}`, { timeout: timeout_1.DEFAULT_TIMEOUT })).data;\n    if (!response.data[txHash]) {\n        throw new Error(`Transaction not found.`);\n    }\n    const tx = response.data[txHash];\n    const txBlock = tx.transaction.block_id;\n    let latestBlock = response.context.state;\n    if (latestBlock === 0) {\n        const statsUrl = `https://api.blockchair.com/${network}/stats`;\n        const statsResponse = (await axios_1.default.get(statsUrl)).data;\n        latestBlock = statsResponse.data.blocks - 1;\n    }\n    const confirmations = txBlock === -1 ? 0 : Math.max(latestBlock - txBlock + 1, 0);\n    return {\n        txHash,\n        vOut,\n        amount: tx.outputs[vOut].value,\n        confirmations,\n    };\n};\nconst fetchConfirmations = (network) => async (txHash) => {\n    const url = `https://api.blockchair.com/${network}/dashboards/transaction/${txHash}`;\n    const response = (await axios_1.default.get(`${url}`, { timeout: timeout_1.DEFAULT_TIMEOUT })).data;\n    if (!response.data[txHash]) {\n        throw new Error(`Transaction not found.`);\n    }\n    const txBlock = response.data[txHash].transaction.block_id;\n    let latestBlock = response.context.state;\n    if (latestBlock === 0) {\n        const statsUrl = `https://api.blockchair.com/${network}/stats`;\n        const statsResponse = (await axios_1.default.get(statsUrl)).data;\n        latestBlock = statsResponse.data.blocks - 1;\n    }\n    return txBlock === -1 ? 0 : Math.max(latestBlock - txBlock + 1, 0);\n};\nconst fetchUTXOs = (network) => async (address, confirmations) => {\n    const url = `https://api.blockchair.com/${network}/dashboards/address/${address}?limit=0,100`;\n    const response = (await axios_1.default.get(url, { timeout: timeout_1.DEFAULT_TIMEOUT })).data;\n    let latestBlock = response.context.state;\n    if (latestBlock === 0) {\n        const statsUrl = `https://api.blockchair.com/${network}/stats`;\n        const statsResponse = (await axios_1.default.get(statsUrl)).data;\n        latestBlock = statsResponse.data.blocks - 1;\n    }\n    return response.data[address].utxo.map(utxo => ({\n        txHash: utxo.transaction_hash,\n        amount: utxo.value,\n        vOut: utxo.index,\n        confirmations: utxo.block_id === -1 ? 0 : latestBlock - utxo.block_id + 1,\n    }))\n        .filter(utxo => confirmations === 0 || utxo.confirmations >= confirmations)\n        .sort(utxo_1.sortUTXOs);\n};\nexports.broadcastTransaction = (network) => async (txHex) => {\n    const url = `https://api.blockchair.com/${network}/push/transaction`;\n    const response = await axios_1.default.post(url, { data: txHex }, { timeout: timeout_1.DEFAULT_TIMEOUT });\n    if (response.data.error) {\n        throw new Error(response.data.error);\n    }\n    return response.data.data.transaction_hash;\n};\nvar Networks;\n(function (Networks) {\n    Networks[\"BITCOIN\"] = \"bitcoin\";\n    Networks[\"BITCOIN_CASH\"] = \"bitcoin-cash\";\n    Networks[\"LITECOIN\"] = \"litecoin\";\n    Networks[\"BITCOIN_SV\"] = \"bitcoin-sv\";\n    Networks[\"DOGECOIN\"] = \"dogecoin\";\n    Networks[\"DASH\"] = \"dash\";\n    Networks[\"GROESTLCOIN\"] = \"groestlcoin\";\n    Networks[\"BITCOIN_TESTNET\"] = \"bitcoin/testnet\";\n})(Networks || (Networks = {}));\nexports.Blockchair = {\n    networks: Networks,\n    fetchUTXO,\n    fetchUTXOs,\n    fetchConfirmations,\n    broadcastTransaction: exports.broadcastTransaction,\n};\n;\n;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2tjaGFpci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21tb24vYXBpcy9ibG9ja2NoYWlyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGtEQUEwQjtBQUUxQix5Q0FBaUQ7QUFDakQsdUNBQTRDO0FBRTVDLE1BQU0sU0FBUyxHQUFHLENBQUMsT0FBZSxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBYyxFQUFFLElBQVksRUFBaUIsRUFBRTtJQUN6RixNQUFNLEdBQUcsR0FBRyw4QkFBOEIsT0FBTywyQkFBMkIsTUFBTSxFQUFFLENBQUM7SUFFckYsTUFBTSxRQUFRLEdBQUcsQ0FBQyxNQUFNLGVBQUssQ0FBQyxHQUFHLENBQXNCLEdBQUcsR0FBRyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUseUJBQWUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFFckcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDeEIsTUFBTSxJQUFJLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0tBQzdDO0lBRUQsTUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNqQyxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQztJQUV4QyxJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUN6QyxJQUFJLFdBQVcsS0FBSyxDQUFDLEVBQUU7UUFDbkIsTUFBTSxRQUFRLEdBQUcsOEJBQThCLE9BQU8sUUFBUSxDQUFDO1FBQy9ELE1BQU0sYUFBYSxHQUFHLENBQUMsTUFBTSxlQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ3ZELFdBQVcsR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENB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"]},"metadata":{},"sourceType":"script"}