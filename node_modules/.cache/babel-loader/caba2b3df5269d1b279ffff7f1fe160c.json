{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nexports.__esModule = true;\n\nvar ERC20_json_1 = __importDefault(require(\"@renproject/sol/build/erc/ERC20.json\"));\n\nvar BasicAdapter_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/BasicAdapter.json\"));\n\nvar BCHGateway_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/BCHGateway.json\"));\n\nvar BTCGateway_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/BTCGateway.json\"));\n\nvar DarknodePayment_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodePayment.json\"));\n\nvar DarknodePaymentStore_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodePaymentStore.json\"));\n\nvar DarknodeRegistryLogicV1_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodeRegistryLogicV1.json\"));\n\nvar DarknodeRegistryProxy_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodeRegistryProxy.json\"));\n\nvar DarknodeRegistryStore_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodeRegistryStore.json\"));\n\nvar DarknodeSlasher_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodeSlasher.json\"));\n\nvar GatewayLogicV1_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/GatewayLogicV1.json\"));\n\nvar GatewayRegistry_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/GatewayRegistry.json\"));\n\nvar ProtocolLogicV1_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/ProtocolLogicV1.json\"));\n\nvar ProtocolProxy_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/ProtocolProxy.json\"));\n\nvar RenBCH_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/RenBCH.json\"));\n\nvar RenBTC_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/RenBTC.json\"));\n\nvar RenToken_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/RenToken.json\"));\n\nvar RenZEC_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/RenZEC.json\"));\n\nvar ZECGateway_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/ZECGateway.json\"));\n\nvar network_1 = require(\"./network\");\n\nvar networkID = 1; // mintAuthority is generated by\n// > utils.toChecksumAddress(utils.pubToAddress(\"... public key ...\", true).toString(\"hex\"))\n\nexports[\"default\"] = network_1.CastNetwork({\n  version: \"1.0.0\",\n  name: \"mainnet\",\n  chain: \"main\",\n  isTestnet: false,\n  label: \"Mainnet\",\n  chainLabel: \"Mainnet\",\n  networkID: networkID,\n  infura: \"https://mainnet.infura.io\",\n  etherscan: \"https://etherscan.io\",\n  lightnode: \"https://lightnode-mainnet.herokuapp.com\",\n  addresses: {\n    ren: {\n      Protocol: {\n        address: ProtocolProxy_json_1[\"default\"].networks[networkID].address,\n        abi: ProtocolLogicV1_json_1[\"default\"].abi,\n        artifact: ProtocolProxy_json_1[\"default\"]\n      },\n      DarknodeSlasher: {\n        address: DarknodeSlasher_json_1[\"default\"].networks[networkID].address,\n        abi: DarknodeSlasher_json_1[\"default\"].abi,\n        artifact: DarknodeSlasher_json_1[\"default\"]\n      },\n      DarknodeRegistry: {\n        address: DarknodeRegistryProxy_json_1[\"default\"].networks[networkID].address,\n        abi: DarknodeRegistryLogicV1_json_1[\"default\"].abi,\n        artifact: DarknodeRegistryLogicV1_json_1[\"default\"],\n        block: 9828748\n      },\n      DarknodeRegistryStore: {\n        address: DarknodeRegistryStore_json_1[\"default\"].networks[networkID].address,\n        abi: DarknodeRegistryStore_json_1[\"default\"].abi,\n        artifact: DarknodeRegistryStore_json_1[\"default\"]\n      },\n      DarknodePayment: {\n        address: DarknodePayment_json_1[\"default\"].networks[networkID].address,\n        abi: DarknodePayment_json_1[\"default\"].abi,\n        artifact: DarknodePayment_json_1[\"default\"]\n      },\n      DarknodePaymentStore: {\n        address: DarknodePaymentStore_json_1[\"default\"].networks[networkID].address,\n        abi: DarknodePaymentStore_json_1[\"default\"].abi,\n        artifact: DarknodePaymentStore_json_1[\"default\"]\n      }\n    },\n    gateways: {\n      GatewayRegistry: {\n        address: GatewayRegistry_json_1[\"default\"].networks[networkID].address,\n        abi: GatewayRegistry_json_1[\"default\"].abi,\n        artifact: GatewayRegistry_json_1[\"default\"]\n      },\n      RenBTC: {\n        _address: RenBTC_json_1[\"default\"].networks[networkID].address,\n        abi: RenBTC_json_1[\"default\"].abi,\n        artifact: RenBTC_json_1[\"default\"],\n        description: \"gatewayRegistry.getTokenBySymbol(\\\"BTC\\\")\"\n      },\n      BTCGateway: {\n        _address: BTCGateway_json_1[\"default\"].networks[networkID].address,\n        abi: GatewayLogicV1_json_1[\"default\"].abi,\n        artifact: GatewayLogicV1_json_1[\"default\"],\n        description: \"gatewayRegistry.getGatewayBySymbol(\\\"BTC\\\")\"\n      },\n      RenZEC: {\n        _address: RenZEC_json_1[\"default\"].networks[networkID].address,\n        abi: RenZEC_json_1[\"default\"].abi,\n        artifact: RenZEC_json_1[\"default\"],\n        description: \"gatewayRegistry.getTokenBySymbol(\\\"ZEC\\\")\"\n      },\n      ZECGateway: {\n        _address: ZECGateway_json_1[\"default\"].networks[networkID].address,\n        abi: GatewayLogicV1_json_1[\"default\"].abi,\n        artifact: GatewayLogicV1_json_1[\"default\"],\n        description: \"gatewayRegistry.getGatewayBySymbol(\\\"ZEC\\\")\"\n      },\n      RenBCH: {\n        _address: RenBCH_json_1[\"default\"].networks[networkID].address,\n        abi: RenBCH_json_1[\"default\"].abi,\n        artifact: RenBCH_json_1[\"default\"],\n        description: \"gatewayRegistry.getTokenBySymbol(\\\"BCH\\\")\"\n      },\n      BCHGateway: {\n        _address: BCHGateway_json_1[\"default\"].networks[networkID].address,\n        abi: GatewayLogicV1_json_1[\"default\"].abi,\n        artifact: GatewayLogicV1_json_1[\"default\"],\n        description: \"gatewayRegistry.getGatewayBySymbol(\\\"BCH\\\")\"\n      },\n      BasicAdapter: {\n        address: BasicAdapter_json_1[\"default\"].networks[networkID].address,\n        abi: BasicAdapter_json_1[\"default\"].abi,\n        artifact: BasicAdapter_json_1[\"default\"]\n      }\n    },\n    tokens: {\n      DAI: {\n        address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        decimals: 18\n      },\n      BTC: {\n        address: RenBTC_json_1[\"default\"].networks[networkID].address,\n        abi: RenBTC_json_1[\"default\"].abi,\n        artifact: RenBTC_json_1[\"default\"],\n        decimals: 8\n      },\n      ZEC: {\n        address: RenZEC_json_1[\"default\"].networks[networkID].address,\n        abi: RenZEC_json_1[\"default\"].abi,\n        artifact: RenZEC_json_1[\"default\"],\n        decimals: 8\n      },\n      BCH: {\n        address: RenBCH_json_1[\"default\"].networks[networkID].address,\n        abi: RenBCH_json_1[\"default\"].abi,\n        artifact: RenBCH_json_1[\"default\"],\n        decimals: 8\n      },\n      REN: {\n        address: RenToken_json_1[\"default\"].networks[networkID].address,\n        abi: RenToken_json_1[\"default\"].abi,\n        artifact: RenToken_json_1[\"default\"],\n        decimals: 18\n      },\n      ETH: {\n        address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n        decimals: 18\n      }\n    },\n    erc: {\n      ERC20: {\n        abi: ERC20_json_1[\"default\"].abi,\n        artifact: ERC20_json_1[\"default\"]\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/home/ryan/dev/defi/bridge/node_modules/@renproject/contracts/dist/src/networks/mainnet.js"],"names":["__importDefault","mod","__esModule","exports","ERC20_json_1","require","BasicAdapter_json_1","BCHGateway_json_1","BTCGateway_json_1","DarknodePayment_json_1","DarknodePaymentStore_json_1","DarknodeRegistryLogicV1_json_1","DarknodeRegistryProxy_json_1","DarknodeRegistryStore_json_1","DarknodeSlasher_json_1","GatewayLogicV1_json_1","GatewayRegistry_json_1","ProtocolLogicV1_json_1","ProtocolProxy_json_1","RenBCH_json_1","RenBTC_json_1","RenToken_json_1","RenZEC_json_1","ZECGateway_json_1","network_1","networkID","CastNetwork","version","name","chain","isTestnet","label","chainLabel","infura","etherscan","lightnode","addresses","ren","Protocol","address","networks","abi","artifact","DarknodeSlasher","DarknodeRegistry","block","DarknodeRegistryStore","DarknodePayment","DarknodePaymentStore","gateways","GatewayRegistry","RenBTC","_address","description","BTCGateway","RenZEC","ZECGateway","RenBCH","BCHGateway","BasicAdapter","tokens","DAI","decimals","BTC","ZEC","BCH","REN","ETH","erc","ERC20"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar ERC20_json_1 = __importDefault(require(\"@renproject/sol/build/erc/ERC20.json\"));\nvar BasicAdapter_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/BasicAdapter.json\"));\nvar BCHGateway_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/BCHGateway.json\"));\nvar BTCGateway_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/BTCGateway.json\"));\nvar DarknodePayment_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodePayment.json\"));\nvar DarknodePaymentStore_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodePaymentStore.json\"));\nvar DarknodeRegistryLogicV1_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodeRegistryLogicV1.json\"));\nvar DarknodeRegistryProxy_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodeRegistryProxy.json\"));\nvar DarknodeRegistryStore_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodeRegistryStore.json\"));\nvar DarknodeSlasher_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/DarknodeSlasher.json\"));\nvar GatewayLogicV1_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/GatewayLogicV1.json\"));\nvar GatewayRegistry_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/GatewayRegistry.json\"));\nvar ProtocolLogicV1_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/ProtocolLogicV1.json\"));\nvar ProtocolProxy_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/ProtocolProxy.json\"));\nvar RenBCH_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/RenBCH.json\"));\nvar RenBTC_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/RenBTC.json\"));\nvar RenToken_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/RenToken.json\"));\nvar RenZEC_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/RenZEC.json\"));\nvar ZECGateway_json_1 = __importDefault(require(\"@renproject/sol/build/mainnet/ZECGateway.json\"));\nvar network_1 = require(\"./network\");\nvar networkID = 1;\n// mintAuthority is generated by\n// > utils.toChecksumAddress(utils.pubToAddress(\"... public key ...\", true).toString(\"hex\"))\nexports[\"default\"] = network_1.CastNetwork({\n    version: \"1.0.0\",\n    name: \"mainnet\",\n    chain: \"main\",\n    isTestnet: false,\n    label: \"Mainnet\",\n    chainLabel: \"Mainnet\",\n    networkID: networkID,\n    infura: \"https://mainnet.infura.io\",\n    etherscan: \"https://etherscan.io\",\n    lightnode: \"https://lightnode-mainnet.herokuapp.com\",\n    addresses: {\n        ren: {\n            Protocol: {\n                address: ProtocolProxy_json_1[\"default\"].networks[networkID].address,\n                abi: ProtocolLogicV1_json_1[\"default\"].abi,\n                artifact: ProtocolProxy_json_1[\"default\"]\n            },\n            DarknodeSlasher: {\n                address: DarknodeSlasher_json_1[\"default\"].networks[networkID].address,\n                abi: DarknodeSlasher_json_1[\"default\"].abi,\n                artifact: DarknodeSlasher_json_1[\"default\"]\n            },\n            DarknodeRegistry: {\n                address: DarknodeRegistryProxy_json_1[\"default\"].networks[networkID].address,\n                abi: DarknodeRegistryLogicV1_json_1[\"default\"].abi,\n                artifact: DarknodeRegistryLogicV1_json_1[\"default\"],\n                block: 9828748\n            },\n            DarknodeRegistryStore: {\n                address: DarknodeRegistryStore_json_1[\"default\"].networks[networkID].address,\n                abi: DarknodeRegistryStore_json_1[\"default\"].abi,\n                artifact: DarknodeRegistryStore_json_1[\"default\"]\n            },\n            DarknodePayment: {\n                address: DarknodePayment_json_1[\"default\"].networks[networkID].address,\n                abi: DarknodePayment_json_1[\"default\"].abi,\n                artifact: DarknodePayment_json_1[\"default\"]\n            },\n            DarknodePaymentStore: {\n                address: DarknodePaymentStore_json_1[\"default\"].networks[networkID].address,\n                abi: DarknodePaymentStore_json_1[\"default\"].abi,\n                artifact: DarknodePaymentStore_json_1[\"default\"]\n            }\n        },\n        gateways: {\n            GatewayRegistry: {\n                address: GatewayRegistry_json_1[\"default\"].networks[networkID].address,\n                abi: GatewayRegistry_json_1[\"default\"].abi,\n                artifact: GatewayRegistry_json_1[\"default\"]\n            },\n            RenBTC: {\n                _address: RenBTC_json_1[\"default\"].networks[networkID].address,\n                abi: RenBTC_json_1[\"default\"].abi,\n                artifact: RenBTC_json_1[\"default\"],\n                description: \"gatewayRegistry.getTokenBySymbol(\\\"BTC\\\")\"\n            },\n            BTCGateway: {\n                _address: BTCGateway_json_1[\"default\"].networks[networkID].address,\n                abi: GatewayLogicV1_json_1[\"default\"].abi,\n                artifact: GatewayLogicV1_json_1[\"default\"],\n                description: \"gatewayRegistry.getGatewayBySymbol(\\\"BTC\\\")\"\n            },\n            RenZEC: {\n                _address: RenZEC_json_1[\"default\"].networks[networkID].address,\n                abi: RenZEC_json_1[\"default\"].abi,\n                artifact: RenZEC_json_1[\"default\"],\n                description: \"gatewayRegistry.getTokenBySymbol(\\\"ZEC\\\")\"\n            },\n            ZECGateway: {\n                _address: ZECGateway_json_1[\"default\"].networks[networkID].address,\n                abi: GatewayLogicV1_json_1[\"default\"].abi,\n                artifact: GatewayLogicV1_json_1[\"default\"],\n                description: \"gatewayRegistry.getGatewayBySymbol(\\\"ZEC\\\")\"\n            },\n            RenBCH: {\n                _address: RenBCH_json_1[\"default\"].networks[networkID].address,\n                abi: RenBCH_json_1[\"default\"].abi,\n                artifact: RenBCH_json_1[\"default\"],\n                description: \"gatewayRegistry.getTokenBySymbol(\\\"BCH\\\")\"\n            },\n            BCHGateway: {\n                _address: BCHGateway_json_1[\"default\"].networks[networkID].address,\n                abi: GatewayLogicV1_json_1[\"default\"].abi,\n                artifact: GatewayLogicV1_json_1[\"default\"],\n                description: \"gatewayRegistry.getGatewayBySymbol(\\\"BCH\\\")\"\n            },\n            BasicAdapter: {\n                address: BasicAdapter_json_1[\"default\"].networks[networkID].address,\n                abi: BasicAdapter_json_1[\"default\"].abi,\n                artifact: BasicAdapter_json_1[\"default\"]\n            }\n        },\n        tokens: {\n            DAI: {\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n                decimals: 18\n            },\n            BTC: {\n                address: RenBTC_json_1[\"default\"].networks[networkID].address,\n                abi: RenBTC_json_1[\"default\"].abi,\n                artifact: RenBTC_json_1[\"default\"],\n                decimals: 8\n            },\n            ZEC: {\n                address: RenZEC_json_1[\"default\"].networks[networkID].address,\n                abi: RenZEC_json_1[\"default\"].abi,\n                artifact: RenZEC_json_1[\"default\"],\n                decimals: 8\n            },\n            BCH: {\n                address: RenBCH_json_1[\"default\"].networks[networkID].address,\n                abi: RenBCH_json_1[\"default\"].abi,\n                artifact: RenBCH_json_1[\"default\"],\n                decimals: 8\n            },\n            REN: {\n                address: RenToken_json_1[\"default\"].networks[networkID].address,\n                abi: RenToken_json_1[\"default\"].abi,\n                artifact: RenToken_json_1[\"default\"],\n                decimals: 18\n            },\n            ETH: {\n                address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n                decimals: 18\n            }\n        },\n        erc: {\n            ERC20: {\n                abi: ERC20_json_1[\"default\"].abi,\n                artifact: ERC20_json_1[\"default\"]\n            }\n        }\n    }\n});\n"]},"metadata":{},"sourceType":"script"}