{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\n\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n} // Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\n\n\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n\n  proto.addEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n\n    var wrappedCallback = function (e) {\n      var modifiedEvent = wrapper(e);\n\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName, wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n\n  proto.removeEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName, unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function () {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function (cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap, this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n\n      if (cb) {\n        this.addEventListener(eventNameToWrap, this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n} // Utility methods.\n\n\nmodule.exports = {\n  extractVersion: extractVersion,\n  wrapPeerConnectionEvent: wrapPeerConnectionEvent,\n  disableLog: function (bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool + '. Please use a boolean.');\n    }\n\n    logDisabled_ = bool;\n    return bool ? 'adapter.js logging disabled' : 'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function (bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool + '. Please use a boolean.');\n    }\n\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n  log: function () {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function (oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod + ' instead.');\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function (window) {\n    var navigator = window && window.navigator; // Returned result object.\n\n    var result = {};\n    result.browser = null;\n    result.version = null; // Fail early if it's not a browser\n\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    if (navigator.mozGetUserMedia) {\n      // Firefox.\n      result.browser = 'firefox';\n      result.version = extractVersion(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera.\n      // Version matches Chrome/WebRTC version.\n      result.browser = 'chrome';\n      result.version = extractVersion(navigator.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n      // Edge.\n      result.browser = 'edge';\n      result.version = extractVersion(navigator.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (window.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n      // Safari.\n      result.browser = 'safari';\n      result.version = extractVersion(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n    } else {\n      // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  }\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/node_modules/@myetherwallet/mewconnect-web-client/node_modules/webrtc-adapter/src/js/utils.js"],"names":["logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","match","length","parseInt","wrapPeerConnectionEvent","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","arguments","wrappedCallback","e","modifiedEvent","_eventMap","nativeRemoveEventListener","removeEventListener","unwrappedCb","Object","defineProperty","get","set","enumerable","configurable","module","exports","disableLog","bool","Error","disableWarnings","log","console","deprecated","oldMethod","newMethod","warn","detectBrowser","navigator","result","browser","version","mozGetUserMedia","userAgent","webkitGetUserMedia","mediaDevices"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function(e) {\n      var modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\n// Utility methods.\nmodule.exports = {\n  extractVersion: extractVersion,\n  wrapPeerConnectionEvent: wrapPeerConnectionEvent,\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n        ' instead.');\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function(window) {\n    var navigator = window && window.navigator;\n\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    if (navigator.mozGetUserMedia) { // Firefox.\n      result.browser = 'firefox';\n      result.version = extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera.\n      // Version matches Chrome/WebRTC version.\n      result.browser = 'chrome';\n      result.version = extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (window.RTCPeerConnection &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n      result.browser = 'safari';\n      result.version = extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}