{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n\nvar filterIceServers = require('./filtericeservers');\n\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function (window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function (args) {\n          return args;\n        };\n      }\n\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function (args) {\n          return args;\n        };\n      } // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n\n\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function (value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    } // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n\n\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function () {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n\n          return this._dtmf;\n        }\n      });\n    } // Edge currently only implements the RTCDtmfSender, not the\n    // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n\n\n    if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n      window.RTCDTMFSender = window.RTCDtmfSender;\n    }\n\n    var RTCPeerConnectionShim = shimRTCPeerConnection(window, browserDetails.version);\n\n    window.RTCPeerConnection = function (config) {\n      if (config && config.iceServers) {\n        config.iceServers = filterIceServers(config.iceServers);\n      }\n\n      return new RTCPeerConnectionShim(config);\n    };\n\n    window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n  },\n  shimReplaceTrack: function (window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender && !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack = window.RTCRtpSender.prototype.setTrack;\n    }\n  },\n  shimGetDisplayMedia: function (window, preferredMediaSource) {\n    if (!('getDisplayMedia' in window.navigator) || !window.navigator.mediaDevices || 'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n\n    var origGetDisplayMedia = window.navigator.getDisplayMedia;\n\n    window.navigator.mediaDevices.getDisplayMedia = function (constraints) {\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n\n    window.navigator.getDisplayMedia = function (constraints) {\n      utils.deprecated('navigator.getDisplayMedia', 'navigator.mediaDevices.getDisplayMedia');\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n  }\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken/node_modules/@myetherwallet/mewconnect-web-client/node_modules/webrtc-adapter/src/js/edge/edge_shim.js"],"names":["utils","require","filterIceServers","shimRTCPeerConnection","module","exports","shimGetUserMedia","shimPeerConnection","window","browserDetails","detectBrowser","RTCIceGatherer","RTCIceCandidate","args","RTCSessionDescription","version","origMSTEnabled","Object","getOwnPropertyDescriptor","MediaStreamTrack","prototype","defineProperty","set","value","call","ev","Event","enabled","dispatchEvent","RTCRtpSender","get","_dtmf","undefined","track","kind","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","RTCPeerConnection","config","iceServers","shimReplaceTrack","replaceTrack","setTrack","shimGetDisplayMedia","preferredMediaSource","navigator","mediaDevices","origGetDisplayMedia","getDisplayMedia","constraints","deprecated"],"mappings":"AAAA;;;;;;;;AAOC;AACD;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,wBAAD,CAAnC;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,gBAAgB,EAAEL,OAAO,CAAC,gBAAD,CADV;AAEfM,EAAAA,kBAAkB,EAAE,UAASC,MAAT,EAAiB;AACnC,QAAIC,cAAc,GAAGT,KAAK,CAACU,aAAN,CAAoBF,MAApB,CAArB;;AAEA,QAAIA,MAAM,CAACG,cAAX,EAA2B;AACzB,UAAI,CAACH,MAAM,CAACI,eAAZ,EAA6B;AAC3BJ,QAAAA,MAAM,CAACI,eAAP,GAAyB,UAASC,IAAT,EAAe;AACtC,iBAAOA,IAAP;AACD,SAFD;AAGD;;AACD,UAAI,CAACL,MAAM,CAACM,qBAAZ,EAAmC;AACjCN,QAAAA,MAAM,CAACM,qBAAP,GAA+B,UAASD,IAAT,EAAe;AAC5C,iBAAOA,IAAP;AACD,SAFD;AAGD,OAVwB,CAWzB;AACA;AACA;;;AACA,UAAIJ,cAAc,CAACM,OAAf,GAAyB,KAA7B,EAAoC;AAClC,YAAIC,cAAc,GAAGC,MAAM,CAACC,wBAAP,CACjBV,MAAM,CAACW,gBAAP,CAAwBC,SADP,EACkB,SADlB,CAArB;AAEAH,QAAAA,MAAM,CAACI,cAAP,CAAsBb,MAAM,CAACW,gBAAP,CAAwBC,SAA9C,EAAyD,SAAzD,EAAoE;AAClEE,UAAAA,GAAG,EAAE,UAASC,KAAT,EAAgB;AACnBP,YAAAA,cAAc,CAACM,GAAf,CAAmBE,IAAnB,CAAwB,IAAxB,EAA8BD,KAA9B;AACA,gBAAIE,EAAE,GAAG,IAAIC,KAAJ,CAAU,SAAV,CAAT;AACAD,YAAAA,EAAE,CAACE,OAAH,GAAaJ,KAAb;AACA,iBAAKK,aAAL,CAAmBH,EAAnB;AACD;AANiE,SAApE;AAQD;AACF,KA7BkC,CA+BnC;AACA;;;AACA,QAAIjB,MAAM,CAACqB,YAAP,IAAuB,EAAE,UAAUrB,MAAM,CAACqB,YAAP,CAAoBT,SAAhC,CAA3B,EAAuE;AACrEH,MAAAA,MAAM,CAACI,cAAP,CAAsBb,MAAM,CAACqB,YAAP,CAAoBT,SAA1C,EAAqD,MAArD,EAA6D;AAC3DU,QAAAA,GAAG,EAAE,YAAW;AACd,cAAI,KAAKC,KAAL,KAAeC,SAAnB,EAA8B;AAC5B,gBAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,OAAxB,EAAiC;AAC/B,mBAAKH,KAAL,GAAa,IAAIvB,MAAM,CAAC2B,aAAX,CAAyB,IAAzB,CAAb;AACD,aAFD,MAEO,IAAI,KAAKF,KAAL,CAAWC,IAAX,KAAoB,OAAxB,EAAiC;AACtC,mBAAKH,KAAL,GAAa,IAAb;AACD;AACF;;AACD,iBAAO,KAAKA,KAAZ;AACD;AAV0D,OAA7D;AAYD,KA9CkC,CA+CnC;AACA;;;AACA,QAAIvB,MAAM,CAAC2B,aAAP,IAAwB,CAAC3B,MAAM,CAAC4B,aAApC,EAAmD;AACjD5B,MAAAA,MAAM,CAAC4B,aAAP,GAAuB5B,MAAM,CAAC2B,aAA9B;AACD;;AAED,QAAIE,qBAAqB,GAAGlC,qBAAqB,CAACK,MAAD,EAC7CC,cAAc,CAACM,OAD8B,CAAjD;;AAEAP,IAAAA,MAAM,CAAC8B,iBAAP,GAA2B,UAASC,MAAT,EAAiB;AAC1C,UAAIA,MAAM,IAAIA,MAAM,CAACC,UAArB,EAAiC;AAC/BD,QAAAA,MAAM,CAACC,UAAP,GAAoBtC,gBAAgB,CAACqC,MAAM,CAACC,UAAR,CAApC;AACD;;AACD,aAAO,IAAIH,qBAAJ,CAA0BE,MAA1B,CAAP;AACD,KALD;;AAMA/B,IAAAA,MAAM,CAAC8B,iBAAP,CAAyBlB,SAAzB,GAAqCiB,qBAAqB,CAACjB,SAA3D;AACD,GAhEc;AAiEfqB,EAAAA,gBAAgB,EAAE,UAASjC,MAAT,EAAiB;AACjC;AACA,QAAIA,MAAM,CAACqB,YAAP,IACA,EAAE,kBAAkBrB,MAAM,CAACqB,YAAP,CAAoBT,SAAxC,CADJ,EACwD;AACtDZ,MAAAA,MAAM,CAACqB,YAAP,CAAoBT,SAApB,CAA8BsB,YAA9B,GACIlC,MAAM,CAACqB,YAAP,CAAoBT,SAApB,CAA8BuB,QADlC;AAED;AACF,GAxEc;AAyEfC,EAAAA,mBAAmB,EAAE,UAASpC,MAAT,EAAiBqC,oBAAjB,EAAuC;AAC1D,QAAI,EAAE,qBAAqBrC,MAAM,CAACsC,SAA9B,KACA,CAACtC,MAAM,CAACsC,SAAP,CAAiBC,YADlB,IAEA,qBAAqBvC,MAAM,CAACsC,SAAP,CAAiBC,YAF1C,EAEwD;AACtD;AACD;;AACD,QAAIC,mBAAmB,GAAGxC,MAAM,CAACsC,SAAP,CAAiBG,eAA3C;;AACAzC,IAAAA,MAAM,CAACsC,SAAP,CAAiBC,YAAjB,CAA8BE,eAA9B,GAAgD,UAASC,WAAT,EAAsB;AACpE,aAAOF,mBAAmB,CAACxB,IAApB,CAAyBhB,MAAM,CAACsC,SAAhC,EAA2CI,WAA3C,CAAP;AACD,KAFD;;AAGA1C,IAAAA,MAAM,CAACsC,SAAP,CAAiBG,eAAjB,GAAmC,UAASC,WAAT,EAAsB;AACvDlD,MAAAA,KAAK,CAACmD,UAAN,CAAiB,2BAAjB,EACI,wCADJ;AAEA,aAAOH,mBAAmB,CAACxB,IAApB,CAAyBhB,MAAM,CAACsC,SAAhC,EAA2CI,WAA3C,CAAP;AACD,KAJD;AAKD;AAxFc,CAAjB","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar filterIceServers = require('./filtericeservers');\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\n            window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    }\n\n    // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n    // Edge currently only implements the RTCDtmfSender, not the\n    // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n    if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n      window.RTCDTMFSender = window.RTCDtmfSender;\n    }\n\n    var RTCPeerConnectionShim = shimRTCPeerConnection(window,\n        browserDetails.version);\n    window.RTCPeerConnection = function(config) {\n      if (config && config.iceServers) {\n        config.iceServers = filterIceServers(config.iceServers);\n      }\n      return new RTCPeerConnectionShim(config);\n    };\n    window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n  },\n  shimReplaceTrack: function(window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender &&\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack =\n          window.RTCRtpSender.prototype.setTrack;\n    }\n  },\n  shimGetDisplayMedia: function(window, preferredMediaSource) {\n    if (!('getDisplayMedia' in window.navigator) ||\n        !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    var origGetDisplayMedia = window.navigator.getDisplayMedia;\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"script"}