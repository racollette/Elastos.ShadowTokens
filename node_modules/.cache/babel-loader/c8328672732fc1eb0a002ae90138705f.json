{"ast":null,"code":"var createHash = require('create-hash');\n\nvar crypto = require('crypto');\n\nfunction ripemd160(buffer) {\n  var hash = 'rmd160';\n  var supportedHashes = crypto.getHashes(); // some environments (electron) only support the long alias\n\n  if (supportedHashes.indexOf(hash) === -1 && supportedHashes.indexOf('ripemd160') !== -1) {\n    hash = 'ripemd160';\n  }\n\n  return createHash(hash).update(buffer).digest();\n}\n\nfunction sha1(buffer) {\n  return createHash('sha1').update(buffer).digest();\n}\n\nfunction sha256(buffer) {\n  return createHash('sha256').update(buffer).digest();\n}\n\nfunction hash160(buffer) {\n  return ripemd160(sha256(buffer));\n}\n\nfunction hash256(buffer) {\n  return sha256(sha256(buffer));\n}\n\nmodule.exports = {\n  hash160: hash160,\n  hash256: hash256,\n  ripemd160: ripemd160,\n  sha1: sha1,\n  sha256: sha256\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/node_modules/bitgo-utxo-lib/src/crypto.js"],"names":["createHash","require","crypto","ripemd160","buffer","hash","supportedHashes","getHashes","indexOf","update","digest","sha1","sha256","hash160","hash256","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEA,SAASE,SAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAIC,IAAI,GAAG,QAAX;AACA,MAAIC,eAAe,GAAGJ,MAAM,CAACK,SAAP,EAAtB,CAF0B,CAG1B;;AACA,MAAID,eAAe,CAACE,OAAhB,CAAwBH,IAAxB,MAAkC,CAAC,CAAnC,IAAwCC,eAAe,CAACE,OAAhB,CAAwB,WAAxB,MAAyC,CAAC,CAAtF,EAAyF;AACvFH,IAAAA,IAAI,GAAG,WAAP;AACD;;AAED,SAAOL,UAAU,CAACK,IAAD,CAAV,CAAiBI,MAAjB,CAAwBL,MAAxB,EAAgCM,MAAhC,EAAP;AACD;;AAED,SAASC,IAAT,CAAeP,MAAf,EAAuB;AACrB,SAAOJ,UAAU,CAAC,MAAD,CAAV,CAAmBS,MAAnB,CAA0BL,MAA1B,EAAkCM,MAAlC,EAAP;AACD;;AAED,SAASE,MAAT,CAAiBR,MAAjB,EAAyB;AACvB,SAAOJ,UAAU,CAAC,QAAD,CAAV,CAAqBS,MAArB,CAA4BL,MAA5B,EAAoCM,MAApC,EAAP;AACD;;AAED,SAASG,OAAT,CAAkBT,MAAlB,EAA0B;AACxB,SAAOD,SAAS,CAACS,MAAM,CAACR,MAAD,CAAP,CAAhB;AACD;;AAED,SAASU,OAAT,CAAkBV,MAAlB,EAA0B;AACxB,SAAOQ,MAAM,CAACA,MAAM,CAACR,MAAD,CAAP,CAAb;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,OAAO,EAAEA,OADM;AAEfC,EAAAA,OAAO,EAAEA,OAFM;AAGfX,EAAAA,SAAS,EAAEA,SAHI;AAIfQ,EAAAA,IAAI,EAAEA,IAJS;AAKfC,EAAAA,MAAM,EAAEA;AALO,CAAjB","sourcesContent":["var createHash = require('create-hash')\nvar crypto = require('crypto')\n\nfunction ripemd160 (buffer) {\n  var hash = 'rmd160'\n  var supportedHashes = crypto.getHashes()\n  // some environments (electron) only support the long alias\n  if (supportedHashes.indexOf(hash) === -1 && supportedHashes.indexOf('ripemd160') !== -1) {\n    hash = 'ripemd160'\n  }\n\n  return createHash(hash).update(buffer).digest()\n}\n\nfunction sha1 (buffer) {\n  return createHash('sha1').update(buffer).digest()\n}\n\nfunction sha256 (buffer) {\n  return createHash('sha256').update(buffer).digest()\n}\n\nfunction hash160 (buffer) {\n  return ripemd160(sha256(buffer))\n}\n\nfunction hash256 (buffer) {\n  return sha256(sha256(buffer))\n}\n\nmodule.exports = {\n  hash160: hash160,\n  hash256: hash256,\n  ripemd160: ripemd160,\n  sha1: sha1,\n  sha256: sha256\n}\n"]},"metadata":{},"sourceType":"script"}