{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.typed-array.float32-array\";\nimport \"core-js/modules/es.typed-array.float64-array\";\nimport \"core-js/modules/es.typed-array.int8-array\";\nimport \"core-js/modules/es.typed-array.int16-array\";\nimport \"core-js/modules/es.typed-array.int32-array\";\nimport \"core-js/modules/es.typed-array.uint8-array\";\nimport \"core-js/modules/es.typed-array.uint8-clamped-array\";\nimport \"core-js/modules/es.typed-array.uint16-array\";\nimport \"core-js/modules/es.typed-array.uint32-array\";\nimport \"core-js/modules/es.typed-array.from\";\nimport \"core-js/modules/es.typed-array.of\";\nimport \"core-js/modules/web.immediate\";\nimport \"core-js/modules/web.url\";\nimport \"core-js/modules/web.url.to-json\";\nimport \"core-js/modules/web.url-search-params\";\n// INITIATOR CLIENT\n// The initiator client is the integration end of the connection,\n// and sends the connection details to\n// the signal server which then waits for a corresponding receiver connection.\n// CRYPTO\n// the crypto constructor is a collection of methods used by both the initiator and receiver\n// in creating the direct connection\nimport MewConnectClient from './connectClient/index';\nimport MewConnectProvider from './connectProvider/index';\nexport default {\n  Initiator: MewConnectClient.Initiator,\n  Crypto: MewConnectClient.Crypto,\n  Client: MewConnectClient,\n  Provider: MewConnectProvider\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken/node_modules/@myetherwallet/mewconnect-web-client/src/index.js"],"names":["MewConnectClient","MewConnectProvider","Initiator","Crypto","Client","Provider"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA,OAAOA,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AAEA,eAAe;AACbC,EAAAA,SAAS,EAAEF,gBAAgB,CAACE,SADf;AAEbC,EAAAA,MAAM,EAAEH,gBAAgB,CAACG,MAFZ;AAGbC,EAAAA,MAAM,EAAEJ,gBAHK;AAIbK,EAAAA,QAAQ,EAAEJ;AAJG,CAAf","sourcesContent":["// INITIATOR CLIENT\n// The initiator client is the integration end of the connection,\n// and sends the connection details to\n// the signal server which then waits for a corresponding receiver connection.\n\n// CRYPTO\n// the crypto constructor is a collection of methods used by both the initiator and receiver\n// in creating the direct connection\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport MewConnectClient from './connectClient/index';\nimport MewConnectProvider from './connectProvider/index';\n\nexport default {\n  Initiator: MewConnectClient.Initiator,\n  Crypto: MewConnectClient.Crypto,\n  Client: MewConnectClient,\n  Provider: MewConnectProvider\n};\n"]},"metadata":{},"sourceType":"module"}