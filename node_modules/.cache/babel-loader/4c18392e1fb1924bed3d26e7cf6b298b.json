{"ast":null,"code":"const signalV1 = {\n  attemptingTurn: 'attemptingTurn',\n  turnToken: 'turnToken',\n  tryTurn: 'tryTurn',\n  connection: 'connection',\n  connect: 'connect',\n  signature: 'signature',\n  offerSignal: 'offerSignal',\n  offer: 'offer',\n  answerSignal: 'answerSignal',\n  answer: 'answer',\n  rtcConnected: 'rtcConnected',\n  disconnect: 'disconnect',\n  handshake: 'handshake',\n  confirmation: 'confirmation',\n  invalidConnection: 'InvalidConnection',\n  confirmationFailedBusy: 'confirmationFailedBusy',\n  confirmationFailed: 'confirmationFailed'\n};\nconst signalV2 = {\n  //V1 (ish)\n  attemptingTurn: 'attemptingturn',\n  turnToken: 'turntoken',\n  tryTurn: 'tryturn',\n  connect: 'connect',\n  connection: 'connection',\n  signature: 'signature',\n  offerSignal: 'offersignal',\n  offer: 'offer',\n  answerSignal: 'answersignal',\n  answer: 'answer',\n  rtcConnected: 'rtcconnected',\n  disconnect: 'disconnect',\n  handshake: 'handshake',\n  confirmation: 'confirmation',\n  invalidConnection: 'InvalidConnection',\n  confirmationFailedBusy: 'confirmationFailedBusy',\n  confirmationFailed: 'confirmationFailed',\n  // V2\n  initiated: 'initiated',\n  socketTimeout: 'socketTimeout',\n  receivedSignal: 'receivedSignal',\n  error: 'error'\n};\nexport { signalV1, signalV2 };","map":{"version":3,"sources":["/home/ryan/dev/defi/bridge/node_modules/@myetherwallet/mewconnect-web-client/src/connectClient/constants/signals.js"],"names":["signalV1","attemptingTurn","turnToken","tryTurn","connection","connect","signature","offerSignal","offer","answerSignal","answer","rtcConnected","disconnect","handshake","confirmation","invalidConnection","confirmationFailedBusy","confirmationFailed","signalV2","initiated","socketTimeout","receivedSignal","error"],"mappings":"AAAA,MAAMA,QAAQ,GAAG;AACfC,EAAAA,cAAc,EAAE,gBADD;AAEfC,EAAAA,SAAS,EAAE,WAFI;AAGfC,EAAAA,OAAO,EAAE,SAHM;AAIfC,EAAAA,UAAU,EAAE,YAJG;AAKfC,EAAAA,OAAO,EAAE,SALM;AAMfC,EAAAA,SAAS,EAAE,WANI;AAOfC,EAAAA,WAAW,EAAE,aAPE;AAQfC,EAAAA,KAAK,EAAE,OARQ;AASfC,EAAAA,YAAY,EAAE,cATC;AAUfC,EAAAA,MAAM,EAAE,QAVO;AAWfC,EAAAA,YAAY,EAAE,cAXC;AAYfC,EAAAA,UAAU,EAAE,YAZG;AAafC,EAAAA,SAAS,EAAE,WAbI;AAcfC,EAAAA,YAAY,EAAE,cAdC;AAefC,EAAAA,iBAAiB,EAAE,mBAfJ;AAgBfC,EAAAA,sBAAsB,EAAE,wBAhBT;AAiBfC,EAAAA,kBAAkB,EAAE;AAjBL,CAAjB;AAoBA,MAAMC,QAAQ,GAAG;AACf;AACAjB,EAAAA,cAAc,EAAE,gBAFD;AAGfC,EAAAA,SAAS,EAAE,WAHI;AAIfC,EAAAA,OAAO,EAAE,SAJM;AAKfE,EAAAA,OAAO,EAAE,SALM;AAMfD,EAAAA,UAAU,EAAE,YANG;AAOfE,EAAAA,SAAS,EAAE,WAPI;AAQfC,EAAAA,WAAW,EAAE,aARE;AASfC,EAAAA,KAAK,EAAE,OATQ;AAUfC,EAAAA,YAAY,EAAE,cAVC;AAWfC,EAAAA,MAAM,EAAE,QAXO;AAYfC,EAAAA,YAAY,EAAE,cAZC;AAafC,EAAAA,UAAU,EAAE,YAbG;AAcfC,EAAAA,SAAS,EAAE,WAdI;AAefC,EAAAA,YAAY,EAAE,cAfC;AAgBfC,EAAAA,iBAAiB,EAAE,mBAhBJ;AAiBfC,EAAAA,sBAAsB,EAAE,wBAjBT;AAkBfC,EAAAA,kBAAkB,EAAE,oBAlBL;AAmBf;AACAE,EAAAA,SAAS,EAAE,WApBI;AAqBfC,EAAAA,aAAa,EAAE,eArBA;AAsBfC,EAAAA,cAAc,EAAE,gBAtBD;AAuBfC,EAAAA,KAAK,EAAE;AAvBQ,CAAjB;AA0BA,SAAStB,QAAT,EAAmBkB,QAAnB","sourcesContent":["const signalV1 = {\n  attemptingTurn: 'attemptingTurn',\n  turnToken: 'turnToken',\n  tryTurn: 'tryTurn',\n  connection: 'connection',\n  connect: 'connect',\n  signature: 'signature',\n  offerSignal: 'offerSignal',\n  offer: 'offer',\n  answerSignal: 'answerSignal',\n  answer: 'answer',\n  rtcConnected: 'rtcConnected',\n  disconnect: 'disconnect',\n  handshake: 'handshake',\n  confirmation: 'confirmation',\n  invalidConnection: 'InvalidConnection',\n  confirmationFailedBusy: 'confirmationFailedBusy',\n  confirmationFailed: 'confirmationFailed'\n};\n\nconst signalV2 = {\n  //V1 (ish)\n  attemptingTurn: 'attemptingturn',\n  turnToken: 'turntoken',\n  tryTurn: 'tryturn',\n  connect: 'connect',\n  connection: 'connection',\n  signature: 'signature',\n  offerSignal: 'offersignal',\n  offer: 'offer',\n  answerSignal: 'answersignal',\n  answer: 'answer',\n  rtcConnected: 'rtcconnected',\n  disconnect: 'disconnect',\n  handshake: 'handshake',\n  confirmation: 'confirmation',\n  invalidConnection: 'InvalidConnection',\n  confirmationFailedBusy: 'confirmationFailedBusy',\n  confirmationFailed: 'confirmationFailed',\n  // V2\n  initiated: 'initiated',\n  socketTimeout: 'socketTimeout',\n  receivedSignal: 'receivedSignal',\n  error: 'error'\n};\n\nexport { signalV1, signalV2 };\n"]},"metadata":{},"sourceType":"module"}