{"ast":null,"code":"var _jsxFileName = \"/home/ryan/dev/defi/shadowtoken/src/containers/NetworkModalContainer.tsx\";\nimport React from \"react\";\nimport { withStore } from \"@spyna/react-store\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst styles = theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2),\n    [theme.breakpoints.down(\"xs\")]: {\n      overflowY: \"scroll\",\n      overflowX: \"hidden\",\n      alignItems: \"flex-start\"\n    }\n  },\n  modalContent: {\n    backgroundColor: \"#fff\",\n    width: 360,\n    maxWidth: \"100%\",\n    padding: theme.spacing(2)\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2)\n  },\n  titleContainer: {\n    marginBottom: theme.spacing(3)\n  },\n  content: {\n    fontSize: 14,\n    width: \"100%\"\n  }\n});\n\nclass NetworkModalContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.store.getState();\n  }\n\n  render() {\n    const {\n      classes,\n      store\n    } = this.props;\n    const showNetworkModal = store.get(\"showNetworkModal\");\n    const selectedNetwork = store.get(\"selectedNetwork\");\n    return /*#__PURE__*/React.createElement(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: showNetworkModal,\n      onClose: () => {\n        store.set(\"showNetworkModal\", false);\n      },\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Fade, {\n      in: showNetworkModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.modalContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Switch Network\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Please connect wallet to the\", \" \", selectedNetwork === \"testnet\" ? \"Rinkeby\" : \"mainnet\", \" network.\"))));\n  }\n\n}\n\nexport default withStyles(styles)(withStore(NetworkModalContainer));","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken/src/containers/NetworkModalContainer.tsx"],"names":["React","withStore","withStyles","Grid","Typography","Modal","Backdrop","Fade","styles","theme","modal","display","alignItems","justifyContent","padding","spacing","breakpoints","down","overflowY","overflowX","modalContent","backgroundColor","width","maxWidth","title","marginBottom","titleContainer","content","fontSize","NetworkModalContainer","Component","constructor","props","state","store","getState","render","classes","showNetworkModal","get","selectedNetwork","set","timeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStore } from \"@spyna/react-store\";\nimport { Styles, withStyles } from \"@material-ui/styles\";\nimport theme from \"../theme/theme\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst styles: Styles<typeof theme, any> = (theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2),\n    [theme.breakpoints.down(\"xs\")]: {\n      overflowY: \"scroll\",\n      overflowX: \"hidden\",\n      alignItems: \"flex-start\",\n    },\n  },\n  modalContent: {\n    backgroundColor: \"#fff\",\n    width: 360,\n    maxWidth: \"100%\",\n    padding: theme.spacing(2),\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n  },\n  titleContainer: {\n    marginBottom: theme.spacing(3),\n  },\n  content: {\n    fontSize: 14,\n    width: \"100%\",\n  },\n});\n\nclass NetworkModalContainer extends React.Component<any> {\n  constructor(props: any) {\n    super(props);\n    this.state = props.store.getState();\n  }\n\n  render() {\n    const { classes, store } = this.props;\n\n    const showNetworkModal = store.get(\"showNetworkModal\");\n    const selectedNetwork = store.get(\"selectedNetwork\");\n\n    return (\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={showNetworkModal}\n        onClose={() => {\n          store.set(\"showNetworkModal\", false);\n        }}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={showNetworkModal}>\n          <Grid container className={classes.modalContent}>\n            <Typography variant=\"subtitle1\" className={classes.title}>\n              Switch Network\n            </Typography>\n            <Typography variant=\"body1\" className={classes.content}>\n              Please connect wallet to the{\" \"}\n              {selectedNetwork === \"testnet\" ? \"Rinkeby\" : \"mainnet\"} network.\n            </Typography>\n          </Grid>\n        </Fade>\n      </Modal>\n    );\n  }\n}\n\nexport default withStyles(styles)(withStore(NetworkModalContainer));\n"]},"metadata":{},"sourceType":"module"}