{"ast":null,"code":"import { toPayload } from '../jsonrpc';\nimport EthCalls from '../web3Calls';\nimport BigNumber from 'bignumber.js';\nimport Misc from '../../helpers/misc';\nexport default (async ({\n  payload,\n  store,\n  requestManager\n}, res, next) => {\n  if (payload.method !== 'eth_getTransactionCount') return next();\n  const ethCalls = new EthCalls(requestManager);\n  const addr = payload.params[0];\n  let cached = {};\n\n  if (store.nonceCache === undefined) {\n    cached = {\n      nonce: '0x00',\n      timestamp: 0\n    };\n  } else {\n    cached = store.nonceCache;\n  }\n\n  const timeDiff = Math.round((new Date().getTime() - cached.timestamp) / 1000) / 60;\n\n  if (timeDiff > 1) {\n    const liveNonce = await ethCalls.getTransactionCount(addr);\n    const liveNonceBN = new BigNumber(liveNonce);\n    const cachedNonceBN = new BigNumber(cached.nonce);\n\n    if (timeDiff > 15) {\n      cached = {\n        nonce: Misc.sanitizeHex(liveNonceBN.toString(16)),\n        timestamp: +new Date()\n      };\n    } else if (liveNonceBN.isGreaterThan(cachedNonceBN)) {\n      cached = {\n        nonce: Misc.sanitizeHex(liveNonceBN.toString(16)),\n        timestamp: +new Date()\n      };\n    }\n\n    store.nonceCache = cached;\n  }\n\n  res(null, toPayload(payload.id, cached.nonce));\n});","map":{"version":3,"sources":["/home/ryan/dev/defi/bridge/node_modules/@myetherwallet/mewconnect-web-client/src/connectProvider/web3Provider/web3-provider/methods/eth_getTransactionCount.js"],"names":["toPayload","EthCalls","BigNumber","Misc","payload","store","requestManager","res","next","method","ethCalls","addr","params","cached","nonceCache","undefined","nonce","timestamp","timeDiff","Math","round","Date","getTime","liveNonce","getTransactionCount","liveNonceBN","cachedNonceBN","sanitizeHex","toString","isGreaterThan","id"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,gBAAe,OAAO;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAP,EAA2CC,GAA3C,EAAgDC,IAAhD,KAAyD;AACtE,MAAIJ,OAAO,CAACK,MAAR,KAAmB,yBAAvB,EAAkD,OAAOD,IAAI,EAAX;AAClD,QAAME,QAAQ,GAAG,IAAIT,QAAJ,CAAaK,cAAb,CAAjB;AACA,QAAMK,IAAI,GAAGP,OAAO,CAACQ,MAAR,CAAe,CAAf,CAAb;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIR,KAAK,CAACS,UAAN,KAAqBC,SAAzB,EAAoC;AAClCF,IAAAA,MAAM,GAAG;AACPG,MAAAA,KAAK,EAAE,MADA;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KAAT;AAID,GALD,MAKO;AACLJ,IAAAA,MAAM,GAAGR,KAAK,CAACS,UAAf;AACD;;AACD,QAAMI,QAAQ,GACZC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAIC,IAAJ,GAAWC,OAAX,KAAuBT,MAAM,CAACI,SAA/B,IAA4C,IAAvD,IAA+D,EADjE;;AAEA,MAAIC,QAAQ,GAAG,CAAf,EAAkB;AAChB,UAAMK,SAAS,GAAG,MAAMb,QAAQ,CAACc,mBAAT,CAA6Bb,IAA7B,CAAxB;AACA,UAAMc,WAAW,GAAG,IAAIvB,SAAJ,CAAcqB,SAAd,CAApB;AACA,UAAMG,aAAa,GAAG,IAAIxB,SAAJ,CAAcW,MAAM,CAACG,KAArB,CAAtB;;AACA,QAAIE,QAAQ,GAAG,EAAf,EAAmB;AACjBL,MAAAA,MAAM,GAAG;AACPG,QAAAA,KAAK,EAAEb,IAAI,CAACwB,WAAL,CAAiBF,WAAW,CAACG,QAAZ,CAAqB,EAArB,CAAjB,CADA;AAEPX,QAAAA,SAAS,EAAE,CAAC,IAAII,IAAJ;AAFL,OAAT;AAID,KALD,MAKO,IAAII,WAAW,CAACI,aAAZ,CAA0BH,aAA1B,CAAJ,EAA8C;AACnDb,MAAAA,MAAM,GAAG;AACPG,QAAAA,KAAK,EAAEb,IAAI,CAACwB,WAAL,CAAiBF,WAAW,CAACG,QAAZ,CAAqB,EAArB,CAAjB,CADA;AAEPX,QAAAA,SAAS,EAAE,CAAC,IAAII,IAAJ;AAFL,OAAT;AAID;;AACDhB,IAAAA,KAAK,CAACS,UAAN,GAAmBD,MAAnB;AACD;;AACDN,EAAAA,GAAG,CAAC,IAAD,EAAOP,SAAS,CAACI,OAAO,CAAC0B,EAAT,EAAajB,MAAM,CAACG,KAApB,CAAhB,CAAH;AACD,CAjCD","sourcesContent":["import { toPayload } from '../jsonrpc';\nimport EthCalls from '../web3Calls';\nimport BigNumber from 'bignumber.js';\nimport Misc from '../../helpers/misc';\n\nexport default async ({ payload, store, requestManager }, res, next) => {\n  if (payload.method !== 'eth_getTransactionCount') return next();\n  const ethCalls = new EthCalls(requestManager);\n  const addr = payload.params[0];\n  let cached = {};\n  if (store.nonceCache === undefined) {\n    cached = {\n      nonce: '0x00',\n      timestamp: 0\n    };\n  } else {\n    cached = store.nonceCache;\n  }\n  const timeDiff =\n    Math.round((new Date().getTime() - cached.timestamp) / 1000) / 60;\n  if (timeDiff > 1) {\n    const liveNonce = await ethCalls.getTransactionCount(addr);\n    const liveNonceBN = new BigNumber(liveNonce);\n    const cachedNonceBN = new BigNumber(cached.nonce);\n    if (timeDiff > 15) {\n      cached = {\n        nonce: Misc.sanitizeHex(liveNonceBN.toString(16)),\n        timestamp: +new Date()\n      };\n    } else if (liveNonceBN.isGreaterThan(cachedNonceBN)) {\n      cached = {\n        nonce: Misc.sanitizeHex(liveNonceBN.toString(16)),\n        timestamp: +new Date()\n      };\n    }\n    store.nonceCache = cached;\n  }\n  res(null, toPayload(payload.id, cached.nonce));\n};\n"]},"metadata":{},"sourceType":"module"}