{"ast":null,"code":"export var LockAndMintStatus;\n\n(function (LockAndMintStatus) {\n  LockAndMintStatus[\"Committed\"] = \"mint_committed\";\n  LockAndMintStatus[\"Deposited\"] = \"mint_deposited\";\n  LockAndMintStatus[\"Confirmed\"] = \"mint_confirmed\";\n  LockAndMintStatus[\"SubmittedToRenVM\"] = \"mint_submittedToRenVM\";\n  LockAndMintStatus[\"ReturnedFromRenVM\"] = \"mint_returnedFromRenVM\";\n  LockAndMintStatus[\"SubmittedToEthereum\"] = \"mint_submittedToEthereum\";\n  LockAndMintStatus[\"ConfirmedOnEthereum\"] = \"mint_confirmedOnEthereum\";\n})(LockAndMintStatus || (LockAndMintStatus = {}));\n\nexport var BurnAndReleaseStatus;\n\n(function (BurnAndReleaseStatus) {\n  BurnAndReleaseStatus[\"Committed\"] = \"burn_committed\";\n  BurnAndReleaseStatus[\"SubmittedToEthereum\"] = \"burn_submittedToEthereum\";\n  BurnAndReleaseStatus[\"ConfirmedOnEthereum\"] = \"burn_confirmedOnEthereum\";\n  BurnAndReleaseStatus[\"SubmittedToRenVM\"] = \"burn_submittedToRenVM\";\n  BurnAndReleaseStatus[\"ReturnedFromRenVM\"] = \"burn_returnedFromRenVM\";\n  BurnAndReleaseStatus[\"NoBurnFound\"] = \"burn_noBurnFound\";\n})(BurnAndReleaseStatus || (BurnAndReleaseStatus = {}));\n\nexport var TxStatus;\n\n(function (TxStatus) {\n  // TxStatusNil is used for transactions that have not been seen, or are\n  // otherwise unknown.\n  TxStatus[\"TxStatusNil\"] = \"nil\"; // TxStatusConfirming is used for transactions that are currently waiting\n  // for their underlying blockchain transactions to ne confirmed.\n\n  TxStatus[\"TxStatusConfirming\"] = \"confirming\"; // TxStatusPending is used for transactions that are waiting for consensus\n  // to be reached on when the transaction should be executed.\n\n  TxStatus[\"TxStatusPending\"] = \"pending\"; // TxStatusExecuting is used for transactions that are currently being\n  // executed.\n\n  TxStatus[\"TxStatusExecuting\"] = \"executing\"; // TxStatusDone is used for transactions that have been successfully\n  // executed.\n\n  TxStatus[\"TxStatusDone\"] = \"done\"; // TxStatusReverted is used for transactions that were reverted during\n  // execution.\n\n  TxStatus[\"TxStatusReverted\"] = \"reverted\";\n})(TxStatus || (TxStatus = {}));\n\nexport var EventType;\n\n(function (EventType) {\n  EventType[\"LockAndMint\"] = \"lockAndMint\";\n  EventType[\"BurnAndRelease\"] = \"burnAndRelease\";\n})(EventType || (EventType = {}));","map":{"version":3,"sources":["../../src/types.ts"],"names":[],"mappings":"AAKA,OAAA,IAAY,iBAAZ;;AAAA,CAAA,UAAY,iBAAZ,EAA6B;AACzB,EAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,gBAAA;AACA,EAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,gBAAA;AACA,EAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,gBAAA;AACA,EAAA,iBAAA,CAAA,kBAAA,CAAA,GAAA,uBAAA;AACA,EAAA,iBAAA,CAAA,mBAAA,CAAA,GAAA,wBAAA;AACA,EAAA,iBAAA,CAAA,qBAAA,CAAA,GAAA,0BAAA;AACA,EAAA,iBAAA,CAAA,qBAAA,CAAA,GAAA,0BAAA;AACH,CARD,EAAY,iBAAiB,KAAjB,iBAAiB,GAAA,EAAA,CAA7B;;AAUA,OAAA,IAAY,oBAAZ;;AAAA,CAAA,UAAY,oBAAZ,EAAgC;AAC5B,EAAA,oBAAA,CAAA,WAAA,CAAA,GAAA,gBAAA;AACA,EAAA,oBAAA,CAAA,qBAAA,CAAA,GAAA,0BAAA;AACA,EAAA,oBAAA,CAAA,qBAAA,CAAA,GAAA,0BAAA;AACA,EAAA,oBAAA,CAAA,kBAAA,CAAA,GAAA,uBAAA;AACA,EAAA,oBAAA,CAAA,mBAAA,CAAA,GAAA,wBAAA;AACA,EAAA,oBAAA,CAAA,aAAA,CAAA,GAAA,kBAAA;AACH,CAPD,EAAY,oBAAoB,KAApB,oBAAoB,GAAA,EAAA,CAAhC;;AASA,OAAA,IAAY,QAAZ;;AAAA,CAAA,UAAY,QAAZ,EAAoB;AAChB;AACA;AACA,EAAA,QAAA,CAAA,aAAA,CAAA,GAAA,KAAA,CAHgB,CAIhB;AACA;;AACA,EAAA,QAAA,CAAA,oBAAA,CAAA,GAAA,YAAA,CANgB,CAOhB;AACA;;AACA,EAAA,QAAA,CAAA,iBAAA,CAAA,GAAA,SAAA,CATgB,CAUhB;AACA;;AACA,EAAA,QAAA,CAAA,mBAAA,CAAA,GAAA,WAAA,CAZgB,CAahB;AACA;;AACA,EAAA,QAAA,CAAA,cAAA,CAAA,GAAA,MAAA,CAfgB,CAgBhB;AACA;;AACA,EAAA,QAAA,CAAA,kBAAA,CAAA,GAAA,UAAA;AACH,CAnBD,EAAY,QAAQ,KAAR,QAAQ,GAAA,EAAA,CAApB;;AAoCA,OAAA,IAAY,SAAZ;;AAAA,CAAA,UAAY,SAAZ,EAAqB;AACjB,EAAA,SAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACA,EAAA,SAAA,CAAA,gBAAA,CAAA,GAAA,gBAAA;AACH,CAHD,EAAY,SAAS,KAAT,SAAS,GAAA,EAAA,CAArB","sourceRoot":"","sourcesContent":["export var LockAndMintStatus;\n(function (LockAndMintStatus) {\n    LockAndMintStatus[\"Committed\"] = \"mint_committed\";\n    LockAndMintStatus[\"Deposited\"] = \"mint_deposited\";\n    LockAndMintStatus[\"Confirmed\"] = \"mint_confirmed\";\n    LockAndMintStatus[\"SubmittedToRenVM\"] = \"mint_submittedToRenVM\";\n    LockAndMintStatus[\"ReturnedFromRenVM\"] = \"mint_returnedFromRenVM\";\n    LockAndMintStatus[\"SubmittedToEthereum\"] = \"mint_submittedToEthereum\";\n    LockAndMintStatus[\"ConfirmedOnEthereum\"] = \"mint_confirmedOnEthereum\";\n})(LockAndMintStatus || (LockAndMintStatus = {}));\nexport var BurnAndReleaseStatus;\n(function (BurnAndReleaseStatus) {\n    BurnAndReleaseStatus[\"Committed\"] = \"burn_committed\";\n    BurnAndReleaseStatus[\"SubmittedToEthereum\"] = \"burn_submittedToEthereum\";\n    BurnAndReleaseStatus[\"ConfirmedOnEthereum\"] = \"burn_confirmedOnEthereum\";\n    BurnAndReleaseStatus[\"SubmittedToRenVM\"] = \"burn_submittedToRenVM\";\n    BurnAndReleaseStatus[\"ReturnedFromRenVM\"] = \"burn_returnedFromRenVM\";\n    BurnAndReleaseStatus[\"NoBurnFound\"] = \"burn_noBurnFound\";\n})(BurnAndReleaseStatus || (BurnAndReleaseStatus = {}));\nexport var TxStatus;\n(function (TxStatus) {\n    // TxStatusNil is used for transactions that have not been seen, or are\n    // otherwise unknown.\n    TxStatus[\"TxStatusNil\"] = \"nil\";\n    // TxStatusConfirming is used for transactions that are currently waiting\n    // for their underlying blockchain transactions to ne confirmed.\n    TxStatus[\"TxStatusConfirming\"] = \"confirming\";\n    // TxStatusPending is used for transactions that are waiting for consensus\n    // to be reached on when the transaction should be executed.\n    TxStatus[\"TxStatusPending\"] = \"pending\";\n    // TxStatusExecuting is used for transactions that are currently being\n    // executed.\n    TxStatus[\"TxStatusExecuting\"] = \"executing\";\n    // TxStatusDone is used for transactions that have been successfully\n    // executed.\n    TxStatus[\"TxStatusDone\"] = \"done\";\n    // TxStatusReverted is used for transactions that were reverted during\n    // execution.\n    TxStatus[\"TxStatusReverted\"] = \"reverted\";\n})(TxStatus || (TxStatus = {}));\nexport var EventType;\n(function (EventType) {\n    EventType[\"LockAndMint\"] = \"lockAndMint\";\n    EventType[\"BurnAndRelease\"] = \"burnAndRelease\";\n})(EventType || (EventType = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsTUFBTSxDQUFOLElBQVksaUJBUVg7QUFSRCxXQUFZLGlCQUFpQjtJQUN6QixpREFBNEIsQ0FBQTtJQUM1QixpREFBNEIsQ0FBQTtJQUM1QixpREFBNEIsQ0FBQTtJQUM1QiwrREFBMEMsQ0FBQTtJQUMxQyxpRUFBNEMsQ0FBQTtJQUM1QyxxRUFBZ0QsQ0FBQTtJQUNoRCxxRUFBZ0QsQ0FBQTtBQUNwRCxDQUFDLEVBUlcsaUJBQWlCLEtBQWpCLGlCQUFpQixRQVE1QjtBQUVELE1BQU0sQ0FBTixJQUFZLG9CQU9YO0FBUEQsV0FBWSxvQkFBb0I7SUFDNUIsb0RBQTRCLENBQUE7SUFDNUIsd0VBQWdELENBQUE7SUFDaEQsd0VBQWdELENBQUE7SUFDaEQsa0VBQTBDLENBQUE7SUFDMUMsb0VBQTRDLENBQUE7SUFDNUMsd0RBQWdDLENBQUE7QUFDcEMsQ0FBQyxFQVBXLG9CQUFvQixLQUFwQixvQkFBb0IsUUFPL0I7QUFFRCxNQUFNLENBQU4sSUFBWSxRQW1CWDtBQW5CRCxXQUFZLFFBQVE7SUFDaEIsdUVBQXVFO0lBQ3ZFLHFCQUFxQjtJQUNyQiwrQkFBbUIsQ0FBQTtJQUNuQix5RUFBeUU7SUFDekUsZ0VBQWdFO0lBQ2hFLDZDQUFpQyxDQUFBO0lBQ2pDLDBFQUEwRTtJQUMxRSw0REFBNEQ7SUFDNUQsdUNBQTJCLENBQUE7SUFDM0Isc0VBQXNFO0lBQ3RFLFlBQVk7SUFDWiwyQ0FBK0IsQ0FBQTtJQUMvQixvRUFBb0U7SUFDcEUsWUFBWTtJQUNaLGlDQUFxQixDQUFBO0lBQ3JCLHNFQUFzRTtJQUN0RSxhQUFhO0lBQ2IseUNBQTZCLENBQUE7QUFDakMsQ0FBQyxFQW5CVyxRQUFRLEtBQVIsUUFBUSxRQW1CbkI7QUFpQkQsTUFBTSxDQUFOLElBQVksU0FHWDtBQUhELFdBQVksU0FBUztJQUNqQix3Q0FBMkIsQ0FBQTtJQUMzQiw4Q0FBaUMsQ0FBQTtBQUNyQyxDQUFDLEVBSFcsU0FBUyxLQUFULFNBQVMsUUFHcEIifQ=="]},"metadata":{},"sourceType":"module"}