{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUTXO = exports.getConfirmations = exports.getUTXOs = exports.BCHHandler = exports._apiFallbacks = void 0;\n\nconst bitcoin = __importStar(require(\"bitgo-utxo-lib\"));\n\nconst bchaddrjs_1 = require(\"bchaddrjs\");\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nconst immutable_1 = require(\"immutable\");\n\nconst bitcoinDotCom_1 = require(\"../../common/apis/bitcoinDotCom\");\n\nconst blockchair_1 = require(\"../../common/apis/blockchair\");\n\nconst bitgoUtxoLib_1 = require(\"../../common/libraries/bitgoUtxoLib\");\n\nconst confirmations_1 = require(\"../../lib/confirmations\");\n\nconst promiEvent_1 = require(\"../../lib/promiEvent\");\n\nconst retry_1 = require(\"../../lib/retry\");\n\nconst toCashAddr = legacyAddress => {\n  try {\n    return bchaddrjs_1.toCashAddress(legacyAddress);\n  } catch (error) {\n    return legacyAddress;\n  }\n};\n\nexports._apiFallbacks = {\n  fetchConfirmations: (testnet, txHash) => [() => bitcoinDotCom_1.BitcoinDotCom.fetchConfirmations(testnet)(txHash), testnet ? undefined : () => blockchair_1.Blockchair.fetchConfirmations(blockchair_1.Blockchair.networks.BITCOIN_CASH)(txHash)],\n  fetchUTXO: (testnet, txHash, vOut) => [() => bitcoinDotCom_1.BitcoinDotCom.fetchUTXO(testnet)(txHash, vOut), testnet ? undefined : () => blockchair_1.Blockchair.fetchUTXO(blockchair_1.Blockchair.networks.BITCOIN_CASH)(txHash, vOut)],\n  fetchUTXOs: (testnet, address, confirmations) => [() => bitcoinDotCom_1.BitcoinDotCom.fetchUTXOs(testnet)(address, confirmations), testnet ? undefined : () => blockchair_1.Blockchair.fetchUTXOs(blockchair_1.Blockchair.networks.BITCOIN_CASH)(address, confirmations)],\n  broadcastTransaction: (testnet, hex) => [() => bitcoinDotCom_1.BitcoinDotCom.broadcastTransaction(testnet)(hex), testnet ? undefined : () => blockchair_1.Blockchair.broadcastTransaction(blockchair_1.Blockchair.networks.BITCOIN_CASH)(hex)]\n};\n\nclass BCHHandler {\n  constructor(privateKey, network) {\n    this.decimals = 8; // Returns whether or not this can handle the asset\n\n    this.handlesAsset = asset => typeof asset === \"string\" && [\"BCH\", \"BITCOIN CASH\", \"BCASH\", \"BITCOINCASH\", \"BITCOIN-CASH\"].indexOf(asset.toUpperCase()) !== -1;\n\n    this.address = async (asset, options) => toCashAddr(this.privateKey.getAddress()); // Balance\n\n\n    this.getBalance = async (asset, options) => (await this.getBalanceInSats(asset, options)).dividedBy(new bignumber_js_1.default(10).exponentiatedBy(this.decimals));\n\n    this.getBalanceInSats = async (asset, options) => {\n      const utxos = await exports.getUTXOs(this.testnet, Object.assign(Object.assign({}, options), {\n        address: options && options.address || (await this.address(asset))\n      }));\n      return utxos.reduce((sum, utxo) => sum.plus(utxo.amount), new bignumber_js_1.default(0));\n    }; // Transfer\n\n\n    this.send = (to, value, asset, options) => this.sendSats(to, value.times(new bignumber_js_1.default(10).exponentiatedBy(this.decimals)), asset, options);\n\n    this.sendSats = (to, valueIn, asset, options) => {\n      const promiEvent = promiEvent_1.newPromiEvent();\n      let txHash;\n      let errored;\n      (async () => {\n        const fromAddress = bchaddrjs_1.toLegacyAddress(await this.address(asset));\n        const toAddress = bchaddrjs_1.toLegacyAddress(to);\n        const changeAddress = fromAddress;\n        const utxos = immutable_1.List(await exports.getUTXOs(this.testnet, Object.assign(Object.assign({}, options), {\n          address: fromAddress\n        }))).sortBy(utxo => utxo.amount).reverse().toArray();\n        const built = await bitgoUtxoLib_1.BitgoUTXOLib.buildUTXO(this._bitgoNetwork(), // tslint:disable-next-line: no-bitwise\n        this.privateKey, changeAddress, toAddress, valueIn, utxos, Object.assign(Object.assign({}, options), {\n          signFlag: bitcoin.Transaction.SIGHASH_SINGLE | bitcoin.Transaction.SIGHASH_BITCOINCASHBIP143\n        }));\n        txHash = await retry_1.retryNTimes(() => retry_1.fallback(exports._apiFallbacks.broadcastTransaction(this.testnet, built.toHex())), 3);\n        promiEvent.emit('transactionHash', txHash);\n        promiEvent.resolve(txHash);\n      })().catch(error => {\n        errored = true;\n        promiEvent.reject(error);\n      });\n      confirmations_1.subscribeToConfirmations(promiEvent, () => errored, async () => txHash ? this._getConfirmations(txHash) : 0);\n      return promiEvent;\n    };\n\n    this._getConfirmations = txHash => retry_1.retryNTimes(() => retry_1.fallback(exports._apiFallbacks.fetchConfirmations(this.testnet, txHash)), 2);\n\n    this._bitgoNetwork = () => this.testnet ? bitcoin.networks.bitcoincashTestnet : bitcoin.networks.bitcoincash;\n\n    this.testnet = network !== \"mainnet\";\n    this.privateKey = bitgoUtxoLib_1.BitgoUTXOLib.loadPrivateKey(this._bitgoNetwork(), privateKey);\n  }\n\n}\n\nexports.BCHHandler = BCHHandler;\n\nexports.getUTXOs = async (testnet, options) => {\n  const address = toCashAddr(options.address);\n  const confirmations = options.confirmations || 0;\n\n  const endpoints = exports._apiFallbacks.fetchUTXOs(testnet, address, confirmations);\n\n  const utxos = await retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n  return utxos;\n};\n\nexports.getConfirmations = async (testnet, txHash) => {\n  const endpoints = exports._apiFallbacks.fetchConfirmations(testnet, txHash);\n\n  return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};\n\nexports.getUTXO = async (testnet, txHash, vOut) => {\n  const endpoints = exports._apiFallbacks.fetchUTXO(testnet, txHash, vOut);\n\n  return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};","map":{"version":3,"sources":["../../../../src/handlers/BCH/BCHHandler.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUTXO = exports.getConfirmations = exports.getUTXOs = exports.BCHHandler = exports._apiFallbacks = void 0;\nconst bitcoin = __importStar(require(\"bitgo-utxo-lib\"));\nconst bchaddrjs_1 = require(\"bchaddrjs\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst immutable_1 = require(\"immutable\");\nconst bitcoinDotCom_1 = require(\"../../common/apis/bitcoinDotCom\");\nconst blockchair_1 = require(\"../../common/apis/blockchair\");\nconst bitgoUtxoLib_1 = require(\"../../common/libraries/bitgoUtxoLib\");\nconst confirmations_1 = require(\"../../lib/confirmations\");\nconst promiEvent_1 = require(\"../../lib/promiEvent\");\nconst retry_1 = require(\"../../lib/retry\");\nconst toCashAddr = (legacyAddress) => {\n    try {\n        return bchaddrjs_1.toCashAddress(legacyAddress);\n    }\n    catch (error) {\n        return legacyAddress;\n    }\n};\nexports._apiFallbacks = {\n    fetchConfirmations: (testnet, txHash) => [\n        () => bitcoinDotCom_1.BitcoinDotCom.fetchConfirmations(testnet)(txHash),\n        testnet ? undefined : () => blockchair_1.Blockchair.fetchConfirmations(blockchair_1.Blockchair.networks.BITCOIN_CASH)(txHash),\n    ],\n    fetchUTXO: (testnet, txHash, vOut) => [\n        () => bitcoinDotCom_1.BitcoinDotCom.fetchUTXO(testnet)(txHash, vOut),\n        testnet ? undefined : () => blockchair_1.Blockchair.fetchUTXO(blockchair_1.Blockchair.networks.BITCOIN_CASH)(txHash, vOut),\n    ],\n    fetchUTXOs: (testnet, address, confirmations) => [\n        () => bitcoinDotCom_1.BitcoinDotCom.fetchUTXOs(testnet)(address, confirmations),\n        testnet ? undefined : () => blockchair_1.Blockchair.fetchUTXOs(blockchair_1.Blockchair.networks.BITCOIN_CASH)(address, confirmations),\n    ],\n    broadcastTransaction: (testnet, hex) => [\n        () => bitcoinDotCom_1.BitcoinDotCom.broadcastTransaction(testnet)(hex),\n        testnet ? undefined : () => blockchair_1.Blockchair.broadcastTransaction(blockchair_1.Blockchair.networks.BITCOIN_CASH)(hex),\n    ],\n};\nclass BCHHandler {\n    constructor(privateKey, network) {\n        this.decimals = 8;\n        // Returns whether or not this can handle the asset\n        this.handlesAsset = (asset) => typeof asset === \"string\" && [\"BCH\", \"BITCOIN CASH\", \"BCASH\", \"BITCOINCASH\", \"BITCOIN-CASH\"].indexOf(asset.toUpperCase()) !== -1;\n        this.address = async (asset, options) => toCashAddr(this.privateKey.getAddress());\n        // Balance\n        this.getBalance = async (asset, options) => (await this.getBalanceInSats(asset, options)).dividedBy(new bignumber_js_1.default(10).exponentiatedBy(this.decimals));\n        this.getBalanceInSats = async (asset, options) => {\n            const utxos = await exports.getUTXOs(this.testnet, Object.assign(Object.assign({}, options), { address: options && options.address || await this.address(asset) }));\n            return utxos.reduce((sum, utxo) => sum.plus(utxo.amount), new bignumber_js_1.default(0));\n        };\n        // Transfer\n        this.send = (to, value, asset, options) => this.sendSats(to, value.times(new bignumber_js_1.default(10).exponentiatedBy(this.decimals)), asset, options);\n        this.sendSats = (to, valueIn, asset, options) => {\n            const promiEvent = promiEvent_1.newPromiEvent();\n            let txHash;\n            let errored;\n            (async () => {\n                const fromAddress = bchaddrjs_1.toLegacyAddress(await this.address(asset));\n                const toAddress = bchaddrjs_1.toLegacyAddress(to);\n                const changeAddress = fromAddress;\n                const utxos = immutable_1.List(await exports.getUTXOs(this.testnet, Object.assign(Object.assign({}, options), { address: fromAddress }))).sortBy(utxo => utxo.amount).reverse().toArray();\n                const built = await bitgoUtxoLib_1.BitgoUTXOLib.buildUTXO(this._bitgoNetwork(), \n                // tslint:disable-next-line: no-bitwise\n                this.privateKey, changeAddress, toAddress, valueIn, utxos, Object.assign(Object.assign({}, options), { signFlag: bitcoin.Transaction.SIGHASH_SINGLE | bitcoin.Transaction.SIGHASH_BITCOINCASHBIP143 }));\n                txHash = await retry_1.retryNTimes(() => retry_1.fallback(exports._apiFallbacks.broadcastTransaction(this.testnet, built.toHex())), 3);\n                promiEvent.emit('transactionHash', txHash);\n                promiEvent.resolve(txHash);\n            })().catch((error) => { errored = true; promiEvent.reject(error); });\n            confirmations_1.subscribeToConfirmations(promiEvent, () => errored, async () => txHash ? this._getConfirmations(txHash) : 0);\n            return promiEvent;\n        };\n        this._getConfirmations = (txHash) => retry_1.retryNTimes(() => retry_1.fallback(exports._apiFallbacks.fetchConfirmations(this.testnet, txHash)), 2);\n        this._bitgoNetwork = () => this.testnet ? bitcoin.networks.bitcoincashTestnet : bitcoin.networks.bitcoincash;\n        this.testnet = network !== \"mainnet\";\n        this.privateKey = bitgoUtxoLib_1.BitgoUTXOLib.loadPrivateKey(this._bitgoNetwork(), privateKey);\n    }\n}\nexports.BCHHandler = BCHHandler;\nexports.getUTXOs = async (testnet, options) => {\n    const address = toCashAddr(options.address);\n    const confirmations = options.confirmations || 0;\n    const endpoints = exports._apiFallbacks.fetchUTXOs(testnet, address, confirmations);\n    const utxos = await retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n    return utxos;\n};\nexports.getConfirmations = async (testnet, txHash) => {\n    const endpoints = exports._apiFallbacks.fetchConfirmations(testnet, txHash);\n    return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};\nexports.getUTXO = async (testnet, txHash, vOut) => {\n    const endpoints = exports._apiFallbacks.fetchUTXO(testnet, txHash, vOut);\n    return retry_1.retryNTimes(() => retry_1.fallback(endpoints), 2);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQkNISGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9oYW5kbGVycy9CQ0gvQkNISGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsd0RBQTBDO0FBRTFDLHlDQUEyRDtBQUMzRCxnRUFBcUM7QUFDckMseUNBQWlDO0FBRWpDLG1FQUFnRTtBQUNoRSw2REFBMEQ7QUFDMUQsc0VBQW1FO0FBQ25FLDJEQUFtRTtBQUNuRSxxREFBaUU7QUFDakUsMkNBQXdEO0FBY3hELE1BQU0sVUFBVSxHQUFHLENBQUMsYUFBcUIsRUFBRSxFQUFFO0lBQ3pDLElBQUk7UUFDQSxPQUFPLHlCQUFhLENBQUMsYUFBYSxDQUFDLENBQUM7S0FDdkM7SUFBQyxPQUFPLEtBQUssRUFBRTtRQUNaLE9BQU8sYUFBYSxDQUFDO0tBQ3hCO0FBQ0wsQ0FBQyxDQUFBO0FBRVksUUFBQSxhQUFhLEdBQUc7SUFDekIsa0JBQWtCLEVBQUUsQ0FBQyxPQUFnQixFQUFFLE1BQWMsRUFBRSxFQUFFLENBQUM7UUFDdEQsR0FBRyxFQUFFLENBQUMsNkJBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUM7UUFDdkQsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLHVCQUFVLENBQUMsa0JBQWtCLENBQUMsdUJBQVUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxDQUFDO0tBQ3RHO0lBRUQsU0FBUyxFQUFFLENBQUMsT0FBZ0IsRUFBRSxNQUFjLEVBQUUsSUFBWSxFQUFFLEVBQUUsQ0FBQztRQUMzRCxHQUFHLEVBQUUsQ0FBQyw2QkFBYSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDO1FBQ3BELE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMs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"]},"metadata":{},"sourceType":"script"}