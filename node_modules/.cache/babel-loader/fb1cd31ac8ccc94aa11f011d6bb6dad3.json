{"ast":null,"code":"/*\n\nThe values for the various fork coins can be found in these files:\n\nproperty       filename             varname                           notes\n------------------------------------------------------------------------------------------------------------------------\nmessagePrefix  src/validation.cpp   strMessageMagic                   Format `${CoinName} Signed Message`\nbech32_hrp     src/chainparams.cpp  bech32_hrp                        Only for some networks\nbip32.public   src/chainparams.cpp  base58Prefixes[EXT_PUBLIC_KEY]    Mainnets have same value, testnets have same value\nbip32.private  src/chainparams.cpp  base58Prefixes[EXT_SECRET_KEY]    Mainnets have same value, testnets have same value\npubKeyHash     src/chainparams.cpp  base58Prefixes[PUBKEY_ADDRESS]\nscriptHash     src/chainparams.cpp  base58Prefixes[SCRIPT_ADDRESS]\nwif            src/chainparams.cpp  base58Prefixes[SECRET_KEY]        Testnets have same value\n\n*/\nconst coins = {\n  BCH: 'bch',\n  BSV: 'bsv',\n  BTC: 'btc',\n  BTG: 'btg',\n  LTC: 'ltc',\n  ZEC: 'zec',\n  DASH: 'dash'\n};\n\nfunction getDefaultBip32Mainnet() {\n  return {\n    // base58 'xpub'\n    public: 0x0488b21e,\n    // base58 'xprv'\n    private: 0x0488ade4\n  };\n}\n\nfunction getDefaultBip32Testnet() {\n  return {\n    // base58 'tpub'\n    public: 0x043587cf,\n    // base58 'tprv'\n    private: 0x04358394\n  };\n}\n\nmodule.exports = {\n  // https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp\n  // https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n  bitcoin: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'bc',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BTC\n  },\n  testnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'tb',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BTC\n  },\n  // https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/validation.cpp\n  // https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/chainparams.cpp\n  bitcoincash: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BCH,\n    forkId: 0x00\n  },\n  bitcoincashTestnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BCH\n  },\n  // https://github.com/BTCGPU/BTCGPU/blob/master/src/validation.cpp\n  // https://github.com/BTCGPU/BTCGPU/blob/master/src/chainparams.cpp\n  bitcoingold: {\n    messagePrefix: '\\x18Bitcoin Gold Signed Message:\\n',\n    bech32: 'btg',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x26,\n    scriptHash: 0x17,\n    wif: 0x80,\n    coin: coins.BTG,\n    forkId: 0x4F\n    /* 79 */\n\n  },\n  // bitcoingoldTest: TODO\n  // https://github.com/bitcoin-sv/bitcoin-sv/blob/master/src/validation.cpp\n  // https://github.com/bitcoin-sv/bitcoin-sv/blob/master/src/chainparams.cpp\n  bitcoinsv: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BSV,\n    forkId: 0x00\n  },\n  bitcoinsvTestnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BSV\n  },\n  // https://github.com/dashpay/dash/blob/master/src/validation.cpp\n  // https://github.com/dashpay/dash/blob/master/src/chainparams.cpp\n  dash: {\n    messagePrefix: '\\x19DarkCoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x4c,\n    scriptHash: 0x10,\n    wif: 0xcc,\n    coin: coins.DASH\n  },\n  dashTest: {\n    messagePrefix: '\\x19DarkCoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x8c,\n    scriptHash: 0x13,\n    wif: 0xef,\n    coin: coins.DASH\n  },\n  // https://github.com/litecoin-project/litecoin/blob/master/src/validation.cpp\n  // https://github.com/litecoin-project/litecoin/blob/master/src/chainparams.cpp\n  litecoin: {\n    messagePrefix: '\\x19Litecoin Signed Message:\\n',\n    bech32: 'ltc',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x30,\n    scriptHash: 0x32,\n    wif: 0xb0,\n    coin: coins.LTC\n  },\n  litecoinTest: {\n    messagePrefix: '\\x19Litecoin Signed Message:\\n',\n    bech32: 'tltc',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0x3a,\n    wif: 0xef,\n    coin: coins.LTC\n  },\n  // https://github.com/zcash/zcash/blob/master/src/validation.cpp\n  // https://github.com/zcash/zcash/blob/master/src/chainparams.cpp\n  zcash: {\n    messagePrefix: '\\x18ZCash Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x1cb8,\n    scriptHash: 0x1cbd,\n    wif: 0x80,\n    // This parameter was introduced in version 3 to allow soft forks, for version 1 and 2 transactions we add a\n    // dummy value.\n    consensusBranchId: {\n      1: 0x00,\n      2: 0x00,\n      3: 0x5ba81b19,\n      // 4: 0x76b809bb (old Sapling branch id). Blossom branch id becomes effective after block 653600\n      4: 0x2bb40e60\n    },\n    coin: coins.ZEC\n  },\n  zcashTest: {\n    messagePrefix: '\\x18ZCash Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x1d25,\n    scriptHash: 0x1cba,\n    wif: 0xef,\n    consensusBranchId: {\n      1: 0x00,\n      2: 0x00,\n      3: 0x5ba81b19,\n      // 4: 0x76b809bb (old Sapling branch id)\n      4: 0x2bb40e60\n    },\n    coin: coins.ZEC\n  }\n};","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken/node_modules/bitgo-utxo-lib/src/networks.js"],"names":["coins","BCH","BSV","BTC","BTG","LTC","ZEC","DASH","getDefaultBip32Mainnet","public","private","getDefaultBip32Testnet","module","exports","bitcoin","messagePrefix","bech32","bip32","pubKeyHash","scriptHash","wif","coin","testnet","bitcoincash","forkId","bitcoincashTestnet","bitcoingold","bitcoinsv","bitcoinsvTestnet","dash","dashTest","litecoin","litecoinTest","zcash","consensusBranchId","zcashTest"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,MAAMA,KAAK,GAAG;AACZC,EAAAA,GAAG,EAAE,KADO;AAEZC,EAAAA,GAAG,EAAE,KAFO;AAGZC,EAAAA,GAAG,EAAE,KAHO;AAIZC,EAAAA,GAAG,EAAE,KAJO;AAKZC,EAAAA,GAAG,EAAE,KALO;AAMZC,EAAAA,GAAG,EAAE,KANO;AAOZC,EAAAA,IAAI,EAAE;AAPM,CAAd;;AAUA,SAASC,sBAAT,GAAmC;AACjC,SAAO;AACL;AACAC,IAAAA,MAAM,EAAE,UAFH;AAGL;AACAC,IAAAA,OAAO,EAAE;AAJJ,GAAP;AAMD;;AAED,SAASC,sBAAT,GAAmC;AACjC,SAAO;AACL;AACAF,IAAAA,MAAM,EAAE,UAFH;AAGL;AACAC,IAAAA,OAAO,EAAE;AAJJ,GAAP;AAMD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AAEf;AACA;AACAC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAE,+BADR;AAEPC,IAAAA,MAAM,EAAE,IAFD;AAGPC,IAAAA,KAAK,EAAET,sBAAsB,EAHtB;AAIPU,IAAAA,UAAU,EAAE,IAJL;AAKPC,IAAAA,UAAU,EAAE,IALL;AAMPC,IAAAA,GAAG,EAAE,IANE;AAOPC,IAAAA,IAAI,EAAErB,KAAK,CAACG;AAPL,GAJM;AAafmB,EAAAA,OAAO,EAAE;AACPP,IAAAA,aAAa,EAAE,+BADR;AAEPC,IAAAA,MAAM,EAAE,IAFD;AAGPC,IAAAA,KAAK,EAAEN,sBAAsB,EAHtB;AAIPO,IAAAA,UAAU,EAAE,IAJL;AAKPC,IAAAA,UAAU,EAAE,IALL;AAMPC,IAAAA,GAAG,EAAE,IANE;AAOPC,IAAAA,IAAI,EAAErB,KAAK,CAACG;AAPL,GAbM;AAuBf;AACA;AACAoB,EAAAA,WAAW,EAAE;AACXR,IAAAA,aAAa,EAAE,+BADJ;AAEXE,IAAAA,KAAK,EAAET,sBAAsB,EAFlB;AAGXU,IAAAA,UAAU,EAAE,IAHD;AAIXC,IAAAA,UAAU,EAAE,IAJD;AAKXC,IAAAA,GAAG,EAAE,IALM;AAMXC,IAAAA,IAAI,EAAErB,KAAK,CAACC,GAND;AAOXuB,IAAAA,MAAM,EAAE;AAPG,GAzBE;AAkCfC,EAAAA,kBAAkB,EAAE;AAClBV,IAAAA,aAAa,EAAE,+BADG;AAElBE,IAAAA,KAAK,EAAEN,sBAAsB,EAFX;AAGlBO,IAAAA,UAAU,EAAE,IAHM;AAIlBC,IAAAA,UAAU,EAAE,IAJM;AAKlBC,IAAAA,GAAG,EAAE,IALa;AAMlBC,IAAAA,IAAI,EAAErB,KAAK,CAACC;AANM,GAlCL;AA2Cf;AACA;AACAyB,EAAAA,WAAW,EAAE;AACXX,IAAAA,aAAa,EAAE,oCADJ;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,KAAK,EAAET,sBAAsB,EAHlB;AAIXU,IAAAA,UAAU,EAAE,IAJD;AAKXC,IAAAA,UAAU,EAAE,IALD;AAMXC,IAAAA,GAAG,EAAE,IANM;AAOXC,IAAAA,IAAI,EAAErB,KAAK,CAACI,GAPD;AAQXoB,IAAAA,MAAM,EAAE;AAAK;;AARF,GA7CE;AAuDf;AAEA;AACA;AACAG,EAAAA,SAAS,EAAE;AACTZ,IAAAA,aAAa,EAAE,+BADN;AAETE,IAAAA,KAAK,EAAET,sBAAsB,EAFpB;AAGTU,IAAAA,UAAU,EAAE,IAHH;AAITC,IAAAA,UAAU,EAAE,IAJH;AAKTC,IAAAA,GAAG,EAAE,IALI;AAMTC,IAAAA,IAAI,EAAErB,KAAK,CAACE,GANH;AAOTsB,IAAAA,MAAM,EAAE;AAPC,GA3DI;AAoEfI,EAAAA,gBAAgB,EAAE;AAChBb,IAAAA,aAAa,EAAE,+BADC;AAEhBE,IAAAA,KAAK,EAAEN,sBAAsB,EAFb;AAGhBO,IAAAA,UAAU,EAAE,IAHI;AAIhBC,IAAAA,UAAU,EAAE,IAJI;AAKhBC,IAAAA,GAAG,EAAE,IALW;AAMhBC,IAAAA,IAAI,EAAErB,KAAK,CAACE;AANI,GApEH;AA6Ef;AACA;AACA2B,EAAAA,IAAI,EAAE;AACJd,IAAAA,aAAa,EAAE,gCADX;AAEJE,IAAAA,KAAK,EAAET,sBAAsB,EAFzB;AAGJU,IAAAA,UAAU,EAAE,IAHR;AAIJC,IAAAA,UAAU,EAAE,IAJR;AAKJC,IAAAA,GAAG,EAAE,IALD;AAMJC,IAAAA,IAAI,EAAErB,KAAK,CAACO;AANR,GA/ES;AAuFfuB,EAAAA,QAAQ,EAAE;AACRf,IAAAA,aAAa,EAAE,gCADP;AAERE,IAAAA,KAAK,EAAEN,sBAAsB,EAFrB;AAGRO,IAAAA,UAAU,EAAE,IAHJ;AAIRC,IAAAA,UAAU,EAAE,IAJJ;AAKRC,IAAAA,GAAG,EAAE,IALG;AAMRC,IAAAA,IAAI,EAAErB,KAAK,CAACO;AANJ,GAvFK;AAgGf;AACA;AACAwB,EAAAA,QAAQ,EAAE;AACRhB,IAAAA,aAAa,EAAE,gCADP;AAERC,IAAAA,MAAM,EAAE,KAFA;AAGRC,IAAAA,KAAK,EAAET,sBAAsB,EAHrB;AAIRU,IAAAA,UAAU,EAAE,IAJJ;AAKRC,IAAAA,UAAU,EAAE,IALJ;AAMRC,IAAAA,GAAG,EAAE,IANG;AAORC,IAAAA,IAAI,EAAErB,KAAK,CAACK;AAPJ,GAlGK;AA2Gf2B,EAAAA,YAAY,EAAE;AACZjB,IAAAA,aAAa,EAAE,gCADH;AAEZC,IAAAA,MAAM,EAAE,MAFI;AAGZC,IAAAA,KAAK,EAAEN,sBAAsB,EAHjB;AAIZO,IAAAA,UAAU,EAAE,IAJA;AAKZC,IAAAA,UAAU,EAAE,IALA;AAMZC,IAAAA,GAAG,EAAE,IANO;AAOZC,IAAAA,IAAI,EAAErB,KAAK,CAACK;AAPA,GA3GC;AAqHf;AACA;AACA4B,EAAAA,KAAK,EAAE;AACLlB,IAAAA,aAAa,EAAE,6BADV;AAELE,IAAAA,KAAK,EAAET,sBAAsB,EAFxB;AAGLU,IAAAA,UAAU,EAAE,MAHP;AAILC,IAAAA,UAAU,EAAE,MAJP;AAKLC,IAAAA,GAAG,EAAE,IALA;AAML;AACA;AACAc,IAAAA,iBAAiB,EAAE;AACjB,SAAG,IADc;AAEjB,SAAG,IAFc;AAGjB,SAAG,UAHc;AAIjB;AACA,SAAG;AALc,KARd;AAeLb,IAAAA,IAAI,EAAErB,KAAK,CAACM;AAfP,GAvHQ;AAwIf6B,EAAAA,SAAS,EAAE;AACTpB,IAAAA,aAAa,EAAE,6BADN;AAETE,IAAAA,KAAK,EAAEN,sBAAsB,EAFpB;AAGTO,IAAAA,UAAU,EAAE,MAHH;AAITC,IAAAA,UAAU,EAAE,MAJH;AAKTC,IAAAA,GAAG,EAAE,IALI;AAMTc,IAAAA,iBAAiB,EAAE;AACjB,SAAG,IADc;AAEjB,SAAG,IAFc;AAGjB,SAAG,UAHc;AAIjB;AACA,SAAG;AALc,KANV;AAaTb,IAAAA,IAAI,EAAErB,KAAK,CAACM;AAbH;AAxII,CAAjB","sourcesContent":["/*\n\nThe values for the various fork coins can be found in these files:\n\nproperty       filename             varname                           notes\n------------------------------------------------------------------------------------------------------------------------\nmessagePrefix  src/validation.cpp   strMessageMagic                   Format `${CoinName} Signed Message`\nbech32_hrp     src/chainparams.cpp  bech32_hrp                        Only for some networks\nbip32.public   src/chainparams.cpp  base58Prefixes[EXT_PUBLIC_KEY]    Mainnets have same value, testnets have same value\nbip32.private  src/chainparams.cpp  base58Prefixes[EXT_SECRET_KEY]    Mainnets have same value, testnets have same value\npubKeyHash     src/chainparams.cpp  base58Prefixes[PUBKEY_ADDRESS]\nscriptHash     src/chainparams.cpp  base58Prefixes[SCRIPT_ADDRESS]\nwif            src/chainparams.cpp  base58Prefixes[SECRET_KEY]        Testnets have same value\n\n*/\n\nconst coins = {\n  BCH: 'bch',\n  BSV: 'bsv',\n  BTC: 'btc',\n  BTG: 'btg',\n  LTC: 'ltc',\n  ZEC: 'zec',\n  DASH: 'dash'\n}\n\nfunction getDefaultBip32Mainnet () {\n  return {\n    // base58 'xpub'\n    public: 0x0488b21e,\n    // base58 'xprv'\n    private: 0x0488ade4\n  }\n}\n\nfunction getDefaultBip32Testnet () {\n  return {\n    // base58 'tpub'\n    public: 0x043587cf,\n    // base58 'tprv'\n    private: 0x04358394\n  }\n}\n\nmodule.exports = {\n\n  // https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp\n  // https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n  bitcoin: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'bc',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BTC\n  },\n  testnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'tb',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BTC\n  },\n\n  // https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/validation.cpp\n  // https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/chainparams.cpp\n  bitcoincash: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BCH,\n    forkId: 0x00\n  },\n  bitcoincashTestnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BCH\n  },\n\n  // https://github.com/BTCGPU/BTCGPU/blob/master/src/validation.cpp\n  // https://github.com/BTCGPU/BTCGPU/blob/master/src/chainparams.cpp\n  bitcoingold: {\n    messagePrefix: '\\x18Bitcoin Gold Signed Message:\\n',\n    bech32: 'btg',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x26,\n    scriptHash: 0x17,\n    wif: 0x80,\n    coin: coins.BTG,\n    forkId: 0x4F /* 79 */\n  },\n  // bitcoingoldTest: TODO\n\n  // https://github.com/bitcoin-sv/bitcoin-sv/blob/master/src/validation.cpp\n  // https://github.com/bitcoin-sv/bitcoin-sv/blob/master/src/chainparams.cpp\n  bitcoinsv: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n    coin: coins.BSV,\n    forkId: 0x00\n  },\n  bitcoinsvTestnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef,\n    coin: coins.BSV\n  },\n\n  // https://github.com/dashpay/dash/blob/master/src/validation.cpp\n  // https://github.com/dashpay/dash/blob/master/src/chainparams.cpp\n  dash: {\n    messagePrefix: '\\x19DarkCoin Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x4c,\n    scriptHash: 0x10,\n    wif: 0xcc,\n    coin: coins.DASH\n  },\n  dashTest: {\n    messagePrefix: '\\x19DarkCoin Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x8c,\n    scriptHash: 0x13,\n    wif: 0xef,\n    coin: coins.DASH\n  },\n\n  // https://github.com/litecoin-project/litecoin/blob/master/src/validation.cpp\n  // https://github.com/litecoin-project/litecoin/blob/master/src/chainparams.cpp\n  litecoin: {\n    messagePrefix: '\\x19Litecoin Signed Message:\\n',\n    bech32: 'ltc',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x30,\n    scriptHash: 0x32,\n    wif: 0xb0,\n    coin: coins.LTC\n  },\n  litecoinTest: {\n    messagePrefix: '\\x19Litecoin Signed Message:\\n',\n    bech32: 'tltc',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x6f,\n    scriptHash: 0x3a,\n    wif: 0xef,\n    coin: coins.LTC\n  },\n\n  // https://github.com/zcash/zcash/blob/master/src/validation.cpp\n  // https://github.com/zcash/zcash/blob/master/src/chainparams.cpp\n  zcash: {\n    messagePrefix: '\\x18ZCash Signed Message:\\n',\n    bip32: getDefaultBip32Mainnet(),\n    pubKeyHash: 0x1cb8,\n    scriptHash: 0x1cbd,\n    wif: 0x80,\n    // This parameter was introduced in version 3 to allow soft forks, for version 1 and 2 transactions we add a\n    // dummy value.\n    consensusBranchId: {\n      1: 0x00,\n      2: 0x00,\n      3: 0x5ba81b19,\n      // 4: 0x76b809bb (old Sapling branch id). Blossom branch id becomes effective after block 653600\n      4: 0x2bb40e60\n    },\n    coin: coins.ZEC\n  },\n  zcashTest: {\n    messagePrefix: '\\x18ZCash Signed Message:\\n',\n    bip32: getDefaultBip32Testnet(),\n    pubKeyHash: 0x1d25,\n    scriptHash: 0x1cba,\n    wif: 0xef,\n    consensusBranchId: {\n      1: 0x00,\n      2: 0x00,\n      3: 0x5ba81b19,\n      // 4: 0x76b809bb (old Sapling branch id)\n      4: 0x2bb40e60\n    },\n    coin: coins.ZEC\n  }\n}\n"]},"metadata":{},"sourceType":"script"}