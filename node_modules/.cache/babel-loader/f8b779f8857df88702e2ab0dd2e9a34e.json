{"ast":null,"code":"import { toFixed } from \"@renproject/utils\"; // For now, the endpoints are network specific.\n\nexport const GATEWAY_ENDPOINT_STAGING = \"https://gateway-staging.renproject.io/\";\nexport const GATEWAY_ENDPOINT_PRODUCTION = \"https://renproject.github.io/gateway-staging.renproject.io/\";\nexport const getElement = id => {\n  const element = document.getElementById(id);\n\n  if (!element) {\n    throw new Error(`Unable to find element ${id}`);\n  }\n\n  return element;\n};\nexport const createElementFromHTML = htmlString => {\n  const div = document.createElement(\"div\"); // tslint:disable-next-line: no-object-mutation no-inner-html\n\n  div.innerHTML = htmlString.trim();\n  return div.firstChild;\n};\nexport const resolveEndpoint = (endpointIn, network, pathIn, transferID) => {\n  // Remove ending '/' from endpoint\n  const endpoint = endpointIn.slice(endpointIn.length - 1) === \"/\" ? endpointIn.slice(0, endpointIn.length - 1) : endpointIn; // Remove starting '/' from path\n\n  const path = pathIn.slice(0, 1) === \"/\" ? pathIn.slice(1, pathIn.length) : pathIn;\n  return `${endpoint}/#/${path}?network=${network.name}&${transferID ? `id=${transferID}` : \"\"}`;\n}; // tslint:disable-next-line: readonly-keyword no-any\n\nconst fixBigNumber = (value, key) => {\n  try {\n    // tslint:disable-next-line: strict-type-predicates\n    if (value[key] && typeof value[key] === \"object\") {\n      // tslint:disable-next-line: no-object-mutation no-any\n      value[key] = toFixed(value[key]);\n    }\n  } catch (error) {// Ignore error - may be readonly value\n  }\n};\n/**\n * prepareParamsForSendMessage turns possible BigNumber values into strings\n * before passing the params to sendMessage.\n * The error message `can't clone ...` is thrown if this step is skipped.\n * @param transferParamsIn The parameters being fixed.\n */\n\n\nexport const prepareParamsForSendMessage = transferParamsIn => {\n  // Certain types can't be sent via sendMessage - e.g. BigNumbers.\n  const {\n    web3Provider,\n    ...transferParamsFiltered\n  } = transferParamsIn;\n  const transferParams = transferParamsFiltered; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  fixBigNumber(transferParams, \"suggestedAmount\"); // Contract call values\n\n  try {\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const contractCalls = transferParams.contractCalls;\n\n    if (contractCalls) {\n      for (const contractCall of contractCalls) {\n        const contractParamsInner = contractCall.contractParams;\n\n        if (contractParamsInner) {\n          for (const contractParam of contractParamsInner) {\n            fixBigNumber(contractParam, \"value\");\n          }\n        }\n      }\n    } // tslint:disable-next-line: no-console\n\n  } catch (error) {\n    console.error(error);\n  }\n\n  return transferParams;\n};","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":"AAQA,SAAS,OAAT,QAAwB,mBAAxB,C,CAEA;;AACA,OAAO,MAAM,wBAAwB,GACjC,wCADG;AAEP,OAAO,MAAM,2BAA2B,GACpC,6DADG;AAGP,OAAO,MAAM,UAAU,GAAI,EAAD,IAAe;AACrC,QAAM,OAAO,GAAG,QAAQ,CAAC,cAAT,CAAwB,EAAxB,CAAhB;;AACA,MAAI,CAAC,OAAL,EAAc;AACV,UAAM,IAAI,KAAJ,CAAU,0BAA0B,EAAE,EAAtC,CAAN;AACH;;AACD,SAAO,OAAP;AACH,CANM;AAQP,OAAO,MAAM,qBAAqB,GAAI,UAAD,IAAuB;AACxD,QAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ,CADwD,CAExD;;AACA,EAAA,GAAG,CAAC,SAAJ,GAAgB,UAAU,CAAC,IAAX,EAAhB;AACA,SAAO,GAAG,CAAC,UAAX;AACH,CALM;AAOP,OAAO,MAAM,eAAe,GAAG,CAC3B,UAD2B,EAE3B,OAF2B,EAG3B,MAH2B,EAI3B,UAJ2B,KAK3B;AACA;AACA,QAAM,QAAQ,GACV,UAAU,CAAC,KAAX,CAAiB,UAAU,CAAC,MAAX,GAAoB,CAArC,MAA4C,GAA5C,GACM,UAAU,CAAC,KAAX,CAAiB,CAAjB,EAAoB,UAAU,CAAC,MAAX,GAAoB,CAAxC,CADN,GAEM,UAHV,CAFA,CAMA;;AACA,QAAM,IAAI,GACN,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAhB,MAAuB,GAAvB,GAA6B,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,MAAM,CAAC,MAAvB,CAA7B,GAA8D,MADlE;AAEA,SAAO,GAAG,QAAQ,MAAM,IAAI,YAAY,OAAO,CAAC,IAAI,IAChD,UAAU,GAAG,MAAM,UAAU,EAAnB,GAAwB,EACtC,EAFA;AAGH,CAjBM,C,CAmBP;;AACA,MAAM,YAAY,GAAG,CACjB,KADiB,EAEjB,GAFiB,KAGjB;AACA,MAAI;AACA;AACA,QAAI,KAAK,CAAC,GAAD,CAAL,IAAc,OAAO,KAAK,CAAC,GAAD,CAAZ,KAAsB,QAAxC,EAAkD;AAC9C;AACC,MAAA,KAAa,CAAC,GAAD,CAAb,GAAqB,OAAO,CAAC,KAAK,CAAC,GAAD,CAAN,CAA5B;AACJ;AACJ,GAND,CAME,OAAO,KAAP,EAAc,CACZ;AACH;AACJ,CAbD;AAeA;;;;;;;;AAMA,OAAO,MAAM,2BAA2B,GACpC,gBADuC,IAE8B;AACrE;AAEA,QAAM;AACF,IAAA,YADE;AAEF,OAAG;AAFD,MAGF,gBAHJ;AAIA,QAAM,cAAc,GAAG,sBAAvB,CAPqE,CASrE;;AACA,EAAA,YAAY,CAAC,cAAD,EAAsC,iBAAtC,CAAZ,CAVqE,CAYrE;;AACA,MAAI;AACA;AACA,UAAM,aAAa,GAAI,cAAoC,CACtD,aADL;;AAEA,QAAI,aAAJ,EAAmB;AACf,WAAK,MAAM,YAAX,IAA2B,aAA3B,EAA0C;AACtC,cAAM,mBAAmB,GAAG,YAAY,CAAC,cAAzC;;AACA,YAAI,mBAAJ,EAAyB;AACrB,eAAK,MAAM,aAAX,IAA4B,mBAA5B,EAAiD;AAC7C,YAAA,YAAY,CAAC,aAAD,EAAgB,OAAhB,CAAZ;AACH;AACJ;AACJ;AACJ,KAbD,CAcA;;AACH,GAfD,CAeE,OAAO,KAAP,EAAc;AACZ,IAAA,OAAO,CAAC,KAAR,CAAc,KAAd;AACH;;AAED,SAAO,cAAP;AACH,CAnCM","sourceRoot":"","sourcesContent":["import { toFixed } from \"@renproject/utils\";\n// For now, the endpoints are network specific.\nexport const GATEWAY_ENDPOINT_STAGING = \"https://gateway-staging.renproject.io/\";\nexport const GATEWAY_ENDPOINT_PRODUCTION = \"https://renproject.github.io/gateway-staging.renproject.io/\";\nexport const getElement = (id) => {\n    const element = document.getElementById(id);\n    if (!element) {\n        throw new Error(`Unable to find element ${id}`);\n    }\n    return element;\n};\nexport const createElementFromHTML = (htmlString) => {\n    const div = document.createElement(\"div\");\n    // tslint:disable-next-line: no-object-mutation no-inner-html\n    div.innerHTML = htmlString.trim();\n    return div.firstChild;\n};\nexport const resolveEndpoint = (endpointIn, network, pathIn, transferID) => {\n    // Remove ending '/' from endpoint\n    const endpoint = endpointIn.slice(endpointIn.length - 1) === \"/\"\n        ? endpointIn.slice(0, endpointIn.length - 1)\n        : endpointIn;\n    // Remove starting '/' from path\n    const path = pathIn.slice(0, 1) === \"/\" ? pathIn.slice(1, pathIn.length) : pathIn;\n    return `${endpoint}/#/${path}?network=${network.name}&${transferID ? `id=${transferID}` : \"\"}`;\n};\n// tslint:disable-next-line: readonly-keyword no-any\nconst fixBigNumber = (value, key) => {\n    try {\n        // tslint:disable-next-line: strict-type-predicates\n        if (value[key] && typeof value[key] === \"object\") {\n            // tslint:disable-next-line: no-object-mutation no-any\n            value[key] = toFixed(value[key]);\n        }\n    }\n    catch (error) {\n        // Ignore error - may be readonly value\n    }\n};\n/**\n * prepareParamsForSendMessage turns possible BigNumber values into strings\n * before passing the params to sendMessage.\n * The error message `can't clone ...` is thrown if this step is skipped.\n * @param transferParamsIn The parameters being fixed.\n */\nexport const prepareParamsForSendMessage = (transferParamsIn) => {\n    // Certain types can't be sent via sendMessage - e.g. BigNumbers.\n    const { web3Provider, ...transferParamsFiltered } = transferParamsIn;\n    const transferParams = transferParamsFiltered;\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    fixBigNumber(transferParams, \"suggestedAmount\");\n    // Contract call values\n    try {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        const contractCalls = transferParams\n            .contractCalls;\n        if (contractCalls) {\n            for (const contractCall of contractCalls) {\n                const contractParamsInner = contractCall.contractParams;\n                if (contractParamsInner) {\n                    for (const contractParam of contractParamsInner) {\n                        fixBigNumber(contractParam, \"value\");\n                    }\n                }\n            }\n        }\n        // tslint:disable-next-line: no-console\n    }\n    catch (error) {\n        console.error(error);\n    }\n    return transferParams;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRTVDLCtDQUErQztBQUMvQyxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FDakMsd0NBQXdDLENBQUM7QUFDN0MsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQ3BDLDZEQUE2RCxDQUFDO0FBRWxFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxDQUFDLEVBQVUsRUFBRSxFQUFFO0lBQ3JDLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDNUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNWLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDbkQ7SUFDRCxPQUFPLE9BQU8sQ0FBQztBQUNuQixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxDQUFDLFVBQWtCLEVBQUUsRUFBRTtJQUN4RCxNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLDZEQUE2RDtJQUM3RCxHQUFHLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsQyxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUM7QUFDMUIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLENBQzNCLFVBQWtCLEVBQ2xCLE9BQTBCLEVBQzFCLE1BQWMsRUFDZCxVQUFtQixFQUNyQixFQUFFO0lBQ0Esa0NBQWtDO0lBQ2xDLE1BQU0sUUFBUSxHQUNWLFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBSyxHQUFHO1FBQzNDLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUMsVUFBVSxDQUFDO0lBQ3JCLGdDQUFnQztJQUNoQyxNQUFNLElBQUksR0FDTixNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQ3pFLE9BQU8sR0FBRyxRQUFRLE1BQU0sSUFBSSxZQUFZLE9BQU8sQ0FBQyxJQUFJLElBQ2hELFVBQVUsQ0FBQyxDQUFDLENBQUMsTUFBTSxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFDdEMsRUFBRSxDQUFDO0FBQ1AsQ0FBQyxDQUFDO0FBRUYsb0RBQW9EO0FBQ3BELE1BQU0sWUFBWSxHQUFHLENBQ2pCLEtBQVksRUFDWixHQUFnQixFQUNsQixFQUFFO0lBQ0EsSUFBSTtRQUNBLG1EQUFtRDtRQUNuRCxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxRQUFRLEVBQUU7WUFDOUMsc0RBQXNEO1lBQ3JELEtBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDN0M7S0FDSjtJQUFDLE9BQU8sS0FBSyxFQUFFO1FBQ1osdUNBQXVDO0tBQzFDO0FBQ0wsQ0FBQyxDQUFDO0FBRUY7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyxDQUN2QyxnQkFBeUUsRUFDTixFQUFFO0lBQ3JFLGlFQUFpRTtJQUVqRSxNQUFNLEVBQ0YsWUFBWSxFQUNaLEdBQUcsc0JBQXNCLEVBQzVCLEdBQUcsZ0JBQWtDLENBQUM7SUFDdkMsTUFBTSxjQUFjLEdBQUcsc0JBQW9ELENBQUM7SUFFNUUsMERBQTBEO0lBQzFELFlBQVksQ0FBQyxjQUFtQyxFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFFckUsdUJBQXVCO0lBQ3ZCLElBQUk7UUFDQSwwREFBMEQ7UUFDMUQsTUFBTSxhQUFhLEdBQUksY0FBb0M7YUFDdEQsYUFBYSxDQUFDO1FBQ25CLElBQUksYUFBYSxFQUFFO1lBQ2YsS0FBSyxNQUFNLFlBQVksSUFBSSxhQUFhLEVBQUU7Z0JBQ3RDLE1BQU0sbUJBQW1CLEdBQUcsWUFBWSxDQUFDLGNBQWMsQ0FBQztnQkFDeEQsSUFBSSxtQkFBbUIsRUFBRTtvQkFDckIsS0FBSyxNQUFNLGFBQWEsSUFBSSxtQkFBbUIsRUFBRTt3QkFDN0MsWUFBWSxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztxQkFDeEM7aUJBQ0o7YUFDSjtTQUNKO1FBQ0QsdUNBQXVDO0tBQzFDO0lBQUMsT0FBTyxLQUFLLEVBQUU7UUFDWixPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3hCO0lBRUQsT0FBTyxjQUFjLENBQUM7QUFDMUIsQ0FBQyxDQUFDIn0="]},"metadata":{},"sourceType":"module"}