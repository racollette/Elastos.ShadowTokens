{"ast":null,"code":"// import store from '@/store';\n//\n// import {\n//   isValidChecksumAddress as isValidRSKChecksumAddress,\n//   toChecksumAddress as toRSKChecksumAddress\n// } from 'rskjs-util';\n// import { RSK, RSKTEST } from '@/networks/types';\nimport web3 from 'web3';\n\nconst isAddress = address => {\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false;\n  } else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n    return true;\n  } // const chainID = store.state.network ? store.state.network.type.chainID : 1;\n  // if (chainID === RSK.chainID || chainID === RSKTEST.chainID)\n  //   return isValidRSKChecksumAddress(address, chainID);\n\n\n  return web3.utils.checkAddressChecksum(address);\n};\n\nconst toChecksumAddress = address => {\n  // const chainID = store.state.network ? store.state.network.type.chainID : 1;\n  // if (chainID === RSK.chainID || chainID === RSKTEST.chainID)\n  //   return toRSKChecksumAddress(address, chainID);\n  return web3.utils.toChecksumAddress(address);\n};\n\nexport { isAddress, toChecksumAddress };","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken2/node_modules/@myetherwallet/mewconnect-web-client/src/connectProvider/web3Provider/helpers/addressUtils.js"],"names":["web3","isAddress","address","test","utils","checkAddressChecksum","toChecksumAddress"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,SAAS,GAAGC,OAAO,IAAI;AAC3B,MAAI,CAAC,uBAAuBC,IAAvB,CAA4BD,OAA5B,CAAL,EAA2C;AACzC,WAAO,KAAP;AACD,GAFD,MAEO,IACL,yBAAyBC,IAAzB,CAA8BD,OAA9B,KACA,yBAAyBC,IAAzB,CAA8BD,OAA9B,CAFK,EAGL;AACA,WAAO,IAAP;AACD,GAR0B,CAS3B;AACA;AACA;;;AACA,SAAOF,IAAI,CAACI,KAAL,CAAWC,oBAAX,CAAgCH,OAAhC,CAAP;AACD,CAbD;;AAcA,MAAMI,iBAAiB,GAAGJ,OAAO,IAAI;AACnC;AACA;AACA;AACA,SAAOF,IAAI,CAACI,KAAL,CAAWE,iBAAX,CAA6BJ,OAA7B,CAAP;AACD,CALD;;AAMA,SAASD,SAAT,EAAoBK,iBAApB","sourcesContent":["// import store from '@/store';\n//\n// import {\n//   isValidChecksumAddress as isValidRSKChecksumAddress,\n//   toChecksumAddress as toRSKChecksumAddress\n// } from 'rskjs-util';\n// import { RSK, RSKTEST } from '@/networks/types';\nimport web3 from 'web3';\n\nconst isAddress = address => {\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false;\n  } else if (\n    /^(0x|0X)?[0-9a-f]{40}$/.test(address) ||\n    /^(0x|0X)?[0-9A-F]{40}$/.test(address)\n  ) {\n    return true;\n  }\n  // const chainID = store.state.network ? store.state.network.type.chainID : 1;\n  // if (chainID === RSK.chainID || chainID === RSKTEST.chainID)\n  //   return isValidRSKChecksumAddress(address, chainID);\n  return web3.utils.checkAddressChecksum(address);\n};\nconst toChecksumAddress = address => {\n  // const chainID = store.state.network ? store.state.network.type.chainID : 1;\n  // if (chainID === RSK.chainID || chainID === RSKTEST.chainID)\n  //   return toRSKChecksumAddress(address, chainID);\n  return web3.utils.toChecksumAddress(address);\n};\nexport { isAddress, toChecksumAddress };\n"]},"metadata":{},"sourceType":"module"}