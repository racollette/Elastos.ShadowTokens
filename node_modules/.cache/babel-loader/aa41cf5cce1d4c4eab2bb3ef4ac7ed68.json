{"ast":null,"code":"var _jsxFileName = \"/home/ryan/dev/defi/shadowtoken/src/containers/IntroContainer.tsx\";\nimport React from \"react\";\nimport { withStore } from \"@spyna/react-store\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { initLocalWeb3 } from \"../utils/walletUtils\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaMask from \"../assets/metamask-fox.svg\";\nimport Mew from \"../assets/mew.svg\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = theme => ({\n  container: {\n    textAlign: \"center\",\n    paddingTop: theme.spacing(2),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"100%\"\n    }\n  },\n  title: {\n    marginBottom: theme.spacing(3),\n    fontSize: 48,\n    color: \"#3F3F48\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 24\n    }\n  },\n  metamask: {\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(3),\n    \"& div\": {\n      background: \"#fff\",\n      borderRadius: \"50%\",\n      border: \"1px solid transparent\",\n      width: 90,\n      height: 90,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\",\n      // opacity: 0.6,\n      transition: \"all 0.2s ease-in-out\",\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      boxShadow: \"0px 3px 3px -2px rgba(0,0,0,0.1),0px 3px 4px 0px rgba(0,0,0,0.07),0px 1px 8px 0px rgba(0,0,0,0.06)\",\n      \"&:hover\": {\n        // opacity: 0.8\n        boxShadow: \"0px 3px 5px -1px rgba(0,0,0,0.1),0px 5px 8px 0px rgba(0,0,0,0.07),0px 1px 14px 0px rgba(0,0,0,0.06)\"\n      },\n      \"&.selected\": {\n        opacity: 1,\n        borderColor: theme.palette.primary.light,\n        boxShadow: theme.shadows[0]\n      }\n    },\n    \"& img\": {\n      width: 35,\n      height: \"auto\" // paddingLeft: theme.spacing(1),\n      // paddingRight: theme.spacing(1),\n\n    }\n  },\n  selectedWallet: {\n    opacity: \"1 !important\"\n  },\n  message: {\n    marginBottom: theme.spacing(4),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  button: {\n    width: \"100%\",\n    maxWidth: 230 // [theme.breakpoints.down('sm')]: {\n    //     display: 'none'\n    // }\n\n  },\n  error: {\n    marginTop: theme.spacing(2),\n    color: \"#FF4545\"\n  },\n  info: {\n    marginTop: theme.spacing(2)\n  },\n  info2: {\n    fontWeight: \"bold\",\n    color: \"#3F3F48\"\n  },\n  spinner: {\n    position: \"relative\",\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(0.5),\n    width: 18\n  },\n  spinnerTop: {\n    color: \"#eee\"\n  },\n  spinnerBottom: {\n    color: \"#a4a4a4\",\n    animationDuration: \"550ms\",\n    position: \"absolute\",\n    left: 0\n  },\n  mobileMessage: {\n    display: \"none\" // [theme.breakpoints.down('sm')]: {\n    //     display: 'block'\n    // }\n\n  }\n});\n\nclass IntroContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  goBack() {\n    const {\n      store\n    } = this.props;\n    store.set(\"showGatewayModal\", false);\n    store.set(\"gatewayModalTx\", null);\n  }\n\n  render() {\n    const {\n      classes,\n      store\n    } = this.props;\n    const walletConnecting = store.get(\"walletConnecting\");\n    const requesting = store.get(\"spaceRequesting\");\n    const error = store.get(\"spaceError\");\n    const box = store.get(\"box\");\n    const walletType = store.get(\"selectedWalletType\");\n    let text = \"Connect \" + (walletType === \"injected\" ? \"MetaMask\" : \"MEW wallet\");\n\n    if (requesting) {\n      if (!box) {\n        text = \"Connecting to 3box\";\n      } else {\n        text = \"Loading data\";\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      variant: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Elastos Crosschain Bridge\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.subtitle,\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"The safe, fast and most secure way to tranfer assets between Elastos and \\xA0Ethereum.\"), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.metamask,\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: walletType === \"injected\" ? \"selected\" : \"\",\n      onClick: () => store.set(\"selectedWalletType\", \"injected\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MetaMask,\n      alt: \"MetaMask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: walletType === \"mew-connect\" ? \"selected\" : \"\",\n      onClick: () => store.set(\"selectedWalletType\", \"mew-connect\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Mew,\n      alt: \"Mew\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: walletType === \"elephant\" ? \"selected\" : \"\",\n      onClick: () => store.set(\"selectedWalletType\", \"mew-connect\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Mew,\n      alt: \"Elephant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.message,\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, \"To mint or release assets, connect your\\xA0wallet.\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      direction: \"column\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        initLocalWeb3(walletType);\n      },\n      disabled: walletConnecting || requesting,\n      className: classes.button,\n      size: \"large\",\n      color: \"primary\",\n      disableRipple: true,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, requesting && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.spinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      variant: \"determinate\",\n      value: 100,\n      className: classes.spinnerTop,\n      size: 18,\n      thickness: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(CircularProgress, {\n      variant: \"indeterminate\",\n      disableShrink: true,\n      className: classes.spinnerBottom,\n      size: 18,\n      thickness: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 33\n      }\n    })), text), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: classes.mobileMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, \"RenBridge is currently only supported on desktop\\xA0browsers.\"), !requesting && error && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, \"Connection failed.\"), requesting && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }, \"Connecting to decentralized storage, this may take a minute.\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.info2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, \"Please approve any 3box messages that appear in your wallet.\"))));\n  }\n\n}\n\nexport default withStyles(styles)(withStore(IntroContainer));","map":{"version":3,"sources":["/home/ryan/dev/defi/shadowtoken/src/containers/IntroContainer.tsx"],"names":["React","withStore","withStyles","initLocalWeb3","Grid","Button","Typography","CircularProgress","styles","theme","container","textAlign","paddingTop","spacing","breakpoints","down","maxWidth","title","marginBottom","fontSize","color","metamask","paddingBottom","background","borderRadius","border","width","height","display","alignItems","justifyContent","cursor","transition","marginLeft","marginRight","boxShadow","opacity","borderColor","palette","primary","light","shadows","selectedWallet","message","button","error","marginTop","info","info2","fontWeight","spinner","position","spinnerTop","spinnerBottom","animationDuration","left","mobileMessage","IntroContainer","Component","state","goBack","store","props","set","render","classes","walletConnecting","get","requesting","box","walletType","text","subtitle","MetaMask","Mew"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStore } from \"@spyna/react-store\";\nimport { Styles, withStyles } from \"@material-ui/styles\";\nimport { initLocalWeb3 } from \"../utils/walletUtils\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaMask from \"../assets/metamask-fox.svg\";\nimport Mew from \"../assets/mew.svg\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport theme from \"../theme/theme\";\n\nconst styles: Styles<typeof theme, any> = (theme) => ({\n    container: {\n        textAlign: \"center\",\n        paddingTop: theme.spacing(2),\n        [theme.breakpoints.down(\"sm\")]: {\n            maxWidth: \"100%\",\n        },\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n        fontSize: 48,\n        color: \"#3F3F48\",\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: 24,\n        },\n    },\n    metamask: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(3),\n        \"& div\": {\n            background: \"#fff\",\n            borderRadius: \"50%\",\n            border: \"1px solid transparent\",\n            width: 90,\n            height: 90,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            cursor: \"pointer\",\n            // opacity: 0.6,\n            transition: \"all 0.2s ease-in-out\",\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            boxShadow:\n                \"0px 3px 3px -2px rgba(0,0,0,0.1),0px 3px 4px 0px rgba(0,0,0,0.07),0px 1px 8px 0px rgba(0,0,0,0.06)\",\n            \"&:hover\": {\n                // opacity: 0.8\n                boxShadow:\n                    \"0px 3px 5px -1px rgba(0,0,0,0.1),0px 5px 8px 0px rgba(0,0,0,0.07),0px 1px 14px 0px rgba(0,0,0,0.06)\",\n            },\n            \"&.selected\": {\n                opacity: 1,\n                borderColor: theme.palette.primary.light,\n                boxShadow: theme.shadows[0],\n            },\n        },\n        \"& img\": {\n            width: 35,\n            height: \"auto\",\n            // paddingLeft: theme.spacing(1),\n            // paddingRight: theme.spacing(1),\n        },\n    },\n    selectedWallet: {\n        opacity: \"1 !important\",\n    },\n    message: {\n        marginBottom: theme.spacing(4),\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    button: {\n        width: \"100%\",\n        maxWidth: 230,\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'none'\n        // }\n    },\n    error: {\n        marginTop: theme.spacing(2),\n        color: \"#FF4545\",\n    },\n    info: {\n        marginTop: theme.spacing(2),\n    },\n    info2: {\n        fontWeight: \"bold\",\n        color: \"#3F3F48\",\n    },\n    spinner: {\n        position: \"relative\",\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(0.5),\n        width: 18,\n    },\n    spinnerTop: {\n        color: \"#eee\",\n    },\n    spinnerBottom: {\n        color: \"#a4a4a4\",\n        animationDuration: \"550ms\",\n        position: \"absolute\",\n        left: 0,\n    },\n    mobileMessage: {\n        display: \"none\",\n        // [theme.breakpoints.down('sm')]: {\n        //     display: 'block'\n        // }\n    },\n});\n\nclass IntroContainer extends React.Component<any> {\n    state = {};\n\n    goBack() {\n        const { store } = this.props;\n\n        store.set(\"showGatewayModal\", false);\n        store.set(\"gatewayModalTx\", null);\n    }\n\n    render() {\n        const { classes, store } = this.props;\n\n        const walletConnecting = store.get(\"walletConnecting\");\n        const requesting = store.get(\"spaceRequesting\");\n        const error = store.get(\"spaceError\");\n        const box = store.get(\"box\");\n        const walletType = store.get(\"selectedWalletType\");\n\n        let text =\n            \"Connect \" + (walletType === \"injected\" ? \"MetaMask\" : \"MEW wallet\");\n        if (requesting) {\n            if (!box) {\n                text = \"Connecting to 3box\";\n            } else {\n                text = \"Loading data\";\n            }\n        }\n\n        return (\n            <div className={classes.container}>\n                <Typography className={classes.title} variant=\"h2\">\n                    Elastos Crosschain Bridge\n        </Typography>\n                <Typography className={classes.subtitle} variant=\"body1\">\n                    The safe, fast and most secure way to tranfer assets\n                    between Elastos and &nbsp;Ethereum.\n        </Typography>\n                <Grid className={classes.metamask} container justify=\"center\">\n                    <div\n                        className={walletType === \"injected\" ? \"selected\" : \"\"}\n                        onClick={() => store.set(\"selectedWalletType\", \"injected\")}\n                    >\n                        <img src={MetaMask} alt=\"MetaMask\" />\n                    </div>\n                    <div\n                        className={walletType === \"mew-connect\" ? \"selected\" : \"\"}\n                        onClick={() => store.set(\"selectedWalletType\", \"mew-connect\")}\n                    >\n                        <img src={Mew} alt=\"Mew\" />\n                    </div>\n                    <div\n                        className={walletType === \"elephant\" ? \"selected\" : \"\"}\n                        onClick={() => store.set(\"selectedWalletType\", \"mew-connect\")}\n                    >\n                        <img src={Mew} alt=\"Elephant\" />\n                    </div>\n                </Grid>\n                <Grid container justify=\"center\">\n                    <Typography className={classes.message} variant=\"body1\">\n                        To mint or release assets, connect your&nbsp;wallet.\n          </Typography>\n                </Grid>\n                <Grid\n                    container\n                    justify=\"flex-start\"\n                    direction=\"column\"\n                    alignItems=\"center\"\n                >\n                    <Button\n                        onClick={() => {\n                            initLocalWeb3(walletType);\n                        }}\n                        disabled={walletConnecting || requesting}\n                        className={classes.button}\n                        size=\"large\"\n                        color=\"primary\"\n                        disableRipple\n                        variant=\"contained\"\n                    >\n                        {requesting && (\n                            <div className={classes.spinner}>\n                                <CircularProgress\n                                    variant=\"determinate\"\n                                    value={100}\n                                    className={classes.spinnerTop}\n                                    size={18}\n                                    thickness={4}\n                                />\n                                <CircularProgress\n                                    variant=\"indeterminate\"\n                                    disableShrink\n                                    className={classes.spinnerBottom}\n                                    size={18}\n                                    thickness={4}\n                                />\n                            </div>\n                        )}\n                        {text}\n                    </Button>\n                    <Typography variant=\"body1\" className={classes.mobileMessage}>\n                        RenBridge is currently only supported on desktop&nbsp;browsers.\n          </Typography>\n\n                    {!requesting && error && (\n                        <Typography variant=\"caption\" className={classes.error}>\n                            Connection failed.\n            </Typography>\n                    )}\n                    {requesting && (\n                        <React.Fragment>\n                            <Typography variant=\"caption\" className={classes.info}>\n                                Connecting to decentralized storage, this may take a minute.\n              </Typography>\n                            <Typography variant=\"caption\" className={classes.info2}>\n                                Please approve any 3box messages that appear in your wallet.\n              </Typography>\n                        </React.Fragment>\n                    )}\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(withStore(IntroContainer));\n"]},"metadata":{},"sourceType":"module"}