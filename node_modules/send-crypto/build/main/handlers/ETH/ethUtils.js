"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTransactionConfig = exports.getNetwork = exports.Network = exports.getEndpoint = exports.getWeb3 = void 0;
const web3_1 = __importDefault(require("web3"));
exports.getWeb3 = (privateKey, endpoint) => {
    // const provider = new HDWalletProvider(privateKey, endpoint);
    const web3 = new web3_1.default(endpoint);
    const account = web3.eth.accounts.privateKeyToAccount('0x' + privateKey);
    web3.eth.accounts.wallet.add(account);
    // tslint:disable-next-line: no-object-mutation
    web3.eth.defaultAccount = account.address;
    // return new Web3(provider as any);
    return [web3, account.address];
};
// Free tier - only used as a fallback.
const defaultInfuraKey = "3b7a6c29f9c048d688a848899888aa96";
exports.getEndpoint = (network, ethereumNode, infuraKey) => {
    return ethereumNode ? ethereumNode : `https://${network}.infura.io/v3/${infuraKey || defaultInfuraKey}`;
};
var Network;
(function (Network) {
    Network["Mainnet"] = "mainnet";
    Network["Ropsten"] = "ropsten";
    Network["Kovan"] = "kovan";
    Network["Rinkeby"] = "rinkeby";
    Network["G\u00F6rli"] = "goerli";
})(Network = exports.Network || (exports.Network = {}));
exports.getNetwork = (network) => {
    switch (network.toLowerCase()) {
        case "mainnet":
        case "main":
            return Network.Mainnet;
        case "kovan":
            return Network.Kovan;
        case "rinkeby":
            return Network.Rinkeby;
        case "görli":
        case "goerli":
        case "gorli":
            return Network.Görli;
        case "ropsten":
        case "testnet":
        default:
            return Network.Ropsten;
    }
};
exports.getTransactionConfig = (options) => {
    const txConfig = {};
    // tslint:disable: no-object-mutation
    if (options.from) {
        txConfig.from = options.from;
    }
    if (options.from) {
        txConfig.from = options.from;
    }
    // if (options.to) { txConfig.to = options.to; }
    if (options.gasPrice) {
        txConfig.gasPrice = options.gasPrice;
    }
    if (options.gas) {
        txConfig.gas = options.gas;
    }
    if (options.value) {
        txConfig.value = options.value;
    }
    if (options.data) {
        txConfig.data = options.data;
    }
    if (options.nonce) {
        txConfig.nonce = options.nonce;
    }
    // if (options.chainId) { txConfig.chainId = options.chainId; }
    // if (options.common) { txConfig.common = options.common; }
    // if (options.chain) { txConfig.chain = options.chain; }
    // if (options.hardfork) { txConfig.hardfork = options.hardfork; }
    return txConfig;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoVXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvaGFuZGxlcnMvRVRIL2V0aFV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdEQUF3QjtBQUdYLFFBQUEsT0FBTyxHQUFHLENBQUMsVUFBa0IsRUFBRSxRQUFnQixFQUFrQixFQUFFO0lBQzVFLCtEQUErRDtJQUMvRCxNQUFNLElBQUksR0FBRyxJQUFJLGNBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLEdBQUcsVUFBVSxDQUFDLENBQUM7SUFDekUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN0QywrQ0FBK0M7SUFDL0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztJQUMxQyxvQ0FBb0M7SUFDcEMsT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbkMsQ0FBQyxDQUFDO0FBRUYsdUNBQXVDO0FBQ3ZDLE1BQU0sZ0JBQWdCLEdBQUcsa0NBQWtDLENBQUM7QUFFL0MsUUFBQSxXQUFXLEdBQUcsQ0FBQyxPQUEyQixFQUFFLFlBQWdDLEVBQUUsU0FBNkIsRUFBRSxFQUFFO0lBQ3hILE9BQU8sWUFBWSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFdBQVcsT0FBTyxpQkFBaUIsU0FBUyxJQUFJLGdCQUFnQixFQUFFLENBQUM7QUFDNUcsQ0FBQyxDQUFBO0FBRUQsSUFBWSxPQU1YO0FBTkQsV0FBWSxPQUFPO0lBQ2YsOEJBQW1CLENBQUE7SUFDbkIsOEJBQW1CLENBQUE7SUFDbkIsMEJBQWUsQ0FBQTtJQUNmLDhCQUFtQixDQUFBO0lBQ25CLGdDQUFnQixDQUFBO0FBQ3BCLENBQUMsRUFOVyxPQUFPLEdBQVAsZUFBTyxLQUFQLGVBQU8sUUFNbEI7QUFFWSxRQUFBLFVBQVUsR0FBRyxDQUFDLE9BQWUsRUFBVyxFQUFFO0lBQ25ELFFBQVEsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQzNCLEtBQUssU0FBUyxDQUFDO1FBQ2YsS0FBSyxNQUFNO1lBQ1AsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBRTNCLEtBQUssT0FBTztZQUNSLE9BQU8sT0FBTyxDQUFDLEtBQUssQ0FBQztRQUV6QixLQUFLLFNBQVM7WUFDVixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFFM0IsS0FBSyxPQUFPLENBQUM7UUFDYixLQUFLLFFBQVEsQ0FBQztRQUNkLEtBQUssT0FBTztZQUNSLE9BQU8sT0FBTyxDQUFDLEtBQUssQ0FBQztRQUV6QixLQUFLLFNBQVMsQ0FBQztRQUNmLEtBQUssU0FBUyxDQUFDO1FBQ2Y7WUFDSSxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7S0FDOUI7QUFDTCxDQUFDLENBQUE7QUFFWSxRQUFBLG9CQUFvQixHQUFHLENBQThCLE9BQVUsRUFBcUIsRUFBRTtJQUMvRixNQUFNLFFBQVEsR0FBUSxFQUFFLENBQUM7SUFDekIscUNBQXFDO0lBQ3JDLElBQUksT0FBTyxDQUFDLElBQUksRUFBRTtRQUFFLFFBQVEsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztLQUFFO0lBQ25ELElBQUksT0FBTyxDQUFDLElBQUksRUFBRTtRQUFFLFFBQVEsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztLQUFFO0lBQ25ELGdEQUFnRDtJQUNoRCxJQUFJLE9BQU8sQ0FBQyxRQUFRLEVBQUU7UUFBRSxRQUFRLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7S0FBRTtJQUMvRCxJQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7UUFBRSxRQUFRLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7S0FBRTtJQUNoRCxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUU7UUFBRSxRQUFRLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7S0FBRTtJQUN0RCxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7UUFBRSxRQUFRLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7S0FBRTtJQUNuRCxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUU7UUFBRSxRQUFRLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7S0FBRTtJQUN0RCwrREFBK0Q7SUFDL0QsNERBQTREO0lBQzVELHlEQUF5RDtJQUN6RCxrRUFBa0U7SUFDbEUsT0FBTyxRQUFRLENBQUE7QUFDbkIsQ0FBQyxDQUFBIn0=